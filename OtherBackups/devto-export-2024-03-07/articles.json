[{"created_at":"2022-01-18T18:17:43.305Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2022-01-18T18:22:40.126Z","published_at":"2022-01-18T18:22:40.126Z","canonical_url":"https://blog.seancoughlin.me/building-a-personal-website-with-github-pages","feed_source_url":null,"video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"Cover photo by [Roman Synkevych](https://unsplash.com/@synkevych?utm_source=Hashnode\u0026utm_medium=referral) on [Unsplash](https://unsplash.com/?utm_source=Hashnode\u0026utm_medium=referral)\n\n## Why use GitHub Pages \n\n[GitHub Pages](https://pages.github.com) is an easy to use tool built right into GitHub. The tool is entirely free and it can be used to create [individual, organization, or project websites](https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages#types-of-github-pages-sites). The only prerequisite needed to create a GitHub Pages site is a [GitHub account](https://github.com). Once you have a GitHub account you can have a website live on the internet within minutes.\n\n## Getting Started\n\n1. Create a new GitHub repository. Name the new repository with the form ```[user].github.io``` where ```[user]``` is your GitHub username. Make sure the repository visibility is set to Public.\n2. Navigate to the newly created repository.\n3. In the new repository create either an ```index.html``` or ```index.md``` file. The index file will be homepage for the site. For the greatest control over the site use [HTML](https://en.wikipedia.org/wiki/HTML). HTML can be combined with CSS and JavaScript to create fully responsive, attractive websites. [MD or Markdown](https://en.wikipedia.org/wiki/Markdown) is a basic text editing language that can be combined with [Jekyll](https://docs.github.com/en/pages/setting-up-a-github-pages-site-with-jekyll) to create styling. It is somewhat more friendly and faster to build with than HTML but offers less customization.\n4. After creating an index file, open the Settings tab in the top bar. Then under Settings open the Pages tab from in the left sidebar.\n5. Choose a branch to be the source branch. The source branch should be where you created the index file.\n6. Once the source branch its selected, GitHub will automatically start building your site and after just a few minutes GitHub will notify you that your site is published at the URL `[user].github.io`. \n7. The index file will always be the homepage, but more pages can be added to the website by creating additional files in the source branch. Each file will be accessible at the URL containing its name. If you created a new file call `second-page.html`, that page would be visible at the URL `[user].github.io/second-page.html`.\n8. Additional steps to customize your new site can be found in the [documentation](https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site#next-steps).\n\n## Custom Domains\n\nA [domain name](https://en.wikipedia.org/wiki/Domain_name) is used to identify and access a website. For example, [google.com](https://google.com) or [seancoughlin.me](https://seancoughlin.me) are domain names. By default the created website will be hosted at the domain `[user].github.io`. \n\nHowever, GitHub Pages comes with [support for custom domain names](https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site).\n\n![image.png](https://cdn.hashnode.com/res/hashnode/image/upload/v1641604572879/7Wrv5B0mQ.png)\n\nA custom domain name is helpful for branding and search engine rankings. Domain names can be purchased through [domain name registrars](https://en.wikipedia.org/wiki/Domain_name_registrar) such as [GoDaddy](https://www.godaddy.com/domains) or [NameCheap](https://www.namecheap.com).\n\n## Conclusion \n\nGitHub Pages is a great option for quickly creating and hosting a personal website. It is easy to use and you can have a site live in just a few minutes.\n\n### Pros\n- Pages comes with great [documentation](https://docs.github.com/en/pages).\n- The entire build process is automated and runs quickly so site changes are up and visible within minutes.\n- Site can be fully created and customized with HTML, CSS, and JavaScript or created from [Jekyll themes](https://docs.github.com/en/pages/getting-started-with-github-pages/adding-a-theme-to-your-github-pages-site-with-the-theme-chooser).\n- GitHub Pages supports [HTTPS](https://en.wikipedia.org/wiki/HTTPS) to protect your site and users from malicious tampering.\n- Totally free!\n\n### Cons\n- Using GitHub Pages to run an online business or e-commerce site is prohibited by the  [terms of service](https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages#prohibited-uses). \n-  [GitHub limits the usage of the tool](https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages#usage-limits). Published sites are limited to 1GB in size and there is a 100 GB *soft* limit on bandwidth per month.\n- GitHub Pages can only create [static web pages](https://en.wikipedia.org/wiki/Static_web_page).\n","cached_tag_list":"github, webdev, html","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Cover photo by Roman Synkevych on Unsplash           Why use GitHub Pages   GitHub Pages is an easy...","main_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sujphippj467wj2ga05u.jpg","main_image_background_hex_color":"#dddddd","path":"/scc33/building-a-personal-website-with-github-pages-498i","public_reactions_count":5,"processed_html":"\u003cp\u003eCover photo by \u003ca href=\"https://unsplash.com/@synkevych?utm_source=Hashnode\u0026amp;utm_medium=referral\"\u003eRoman Synkevych\u003c/a\u003e on \u003ca href=\"https://unsplash.com/?utm_source=Hashnode\u0026amp;utm_medium=referral\"\u003eUnsplash\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"why-use-github-pages\" href=\"#why-use-github-pages\"\u003e\n  \u003c/a\u003e\n  Why use GitHub Pages\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://pages.github.com\"\u003eGitHub Pages\u003c/a\u003e is an easy to use tool built right into GitHub. The tool is entirely free and it can be used to create \u003ca href=\"https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages#types-of-github-pages-sites\"\u003eindividual, organization, or project websites\u003c/a\u003e. The only prerequisite needed to create a GitHub Pages site is a \u003ca href=\"https://github.com\"\u003eGitHub account\u003c/a\u003e. Once you have a GitHub account you can have a website live on the internet within minutes.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"getting-started\" href=\"#getting-started\"\u003e\n  \u003c/a\u003e\n  Getting Started\n\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003eCreate a new GitHub repository. Name the new repository with the form\n\n\u003ccode\u003e[user].github.io\u003c/code\u003e\n\nwhere\n\n\u003ccode\u003e[user]\u003c/code\u003e\n\nis your GitHub username. Make sure the repository visibility is set to Public.\n2. Navigate to the newly created repository.\n3. In the new repository create either an\n\n\u003ccode\u003eindex.html\u003c/code\u003e\n\nor\n\n\u003ccode\u003eindex.md\u003c/code\u003e\n\nfile. The index file will be homepage for the site. For the greatest control over the site use \u003ca href=\"https://en.wikipedia.org/wiki/HTML\"\u003eHTML\u003c/a\u003e. HTML can be combined with CSS and JavaScript to create fully responsive, attractive websites. \u003ca href=\"https://en.wikipedia.org/wiki/Markdown\"\u003eMD or Markdown\u003c/a\u003e is a basic text editing language that can be combined with \u003ca href=\"https://docs.github.com/en/pages/setting-up-a-github-pages-site-with-jekyll\"\u003eJekyll\u003c/a\u003e to create styling. It is somewhat more friendly and faster to build with than HTML but offers less customization.\n4. After creating an index file, open the Settings tab in the top bar. Then under Settings open the Pages tab from in the left sidebar.\n5. Choose a branch to be the source branch. The source branch should be where you created the index file.\n6. Once the source branch its selected, GitHub will automatically start building your site and after just a few minutes GitHub will notify you that your site is published at the URL \u003ccode\u003e[user].github.io\u003c/code\u003e. \n7. The index file will always be the homepage, but more pages can be added to the website by creating additional files in the source branch. Each file will be accessible at the URL containing its name. If you created a new file call \u003ccode\u003esecond-page.html\u003c/code\u003e, that page would be visible at the URL \u003ccode\u003e[user].github.io/second-page.html\u003c/code\u003e.\n8. Additional steps to customize your new site can be found in the \u003ca href=\"https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site#next-steps\"\u003edocumentation\u003c/a\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"custom-domains\" href=\"#custom-domains\"\u003e\n  \u003c/a\u003e\n  Custom Domains\n\u003c/h2\u003e\n\n\u003cp\u003eA \u003ca href=\"https://en.wikipedia.org/wiki/Domain_name\"\u003edomain name\u003c/a\u003e is used to identify and access a website. For example, \u003ca href=\"https://google.com\"\u003egoogle.com\u003c/a\u003e or \u003ca href=\"https://seancoughlin.me\"\u003eseancoughlin.me\u003c/a\u003e are domain names. By default the created website will be hosted at the domain \u003ccode\u003e[user].github.io\u003c/code\u003e. \u003c/p\u003e\n\n\u003cp\u003eHowever, GitHub Pages comes with \u003ca href=\"https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site\"\u003esupport for custom domain names\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--rAulas65--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1641604572879/7Wrv5B0mQ.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--rAulas65--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1641604572879/7Wrv5B0mQ.png\" alt=\"image.png\" loading=\"lazy\" width=\"800\" height=\"116\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eA custom domain name is helpful for branding and search engine rankings. Domain names can be purchased through \u003ca href=\"https://en.wikipedia.org/wiki/Domain_name_registrar\"\u003edomain name registrars\u003c/a\u003e such as \u003ca href=\"https://www.godaddy.com/domains\"\u003eGoDaddy\u003c/a\u003e or \u003ca href=\"https://www.namecheap.com\"\u003eNameCheap\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eGitHub Pages is a great option for quickly creating and hosting a personal website. It is easy to use and you can have a site live in just a few minutes.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"pros\" href=\"#pros\"\u003e\n  \u003c/a\u003e\n  Pros\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003ePages comes with great \u003ca href=\"https://docs.github.com/en/pages\"\u003edocumentation\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eThe entire build process is automated and runs quickly so site changes are up and visible within minutes.\u003c/li\u003e\n\u003cli\u003eSite can be fully created and customized with HTML, CSS, and JavaScript or created from \u003ca href=\"https://docs.github.com/en/pages/getting-started-with-github-pages/adding-a-theme-to-your-github-pages-site-with-the-theme-chooser\"\u003eJekyll themes\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eGitHub Pages supports \u003ca href=\"https://en.wikipedia.org/wiki/HTTPS\"\u003eHTTPS\u003c/a\u003e to protect your site and users from malicious tampering.\u003c/li\u003e\n\u003cli\u003eTotally free!\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"cons\" href=\"#cons\"\u003e\n  \u003c/a\u003e\n  Cons\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003eUsing GitHub Pages to run an online business or e-commerce site is prohibited by the  \u003ca href=\"https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages#prohibited-uses\"\u003eterms of service\u003c/a\u003e. \u003c/li\u003e\n\u003cli\u003e \u003ca href=\"https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages#usage-limits\"\u003eGitHub limits the usage of the tool\u003c/a\u003e. Published sites are limited to 1GB in size and there is a 100 GB \u003cem\u003esoft\u003c/em\u003e limit on bandwidth per month.\u003c/li\u003e\n\u003cli\u003eGitHub Pages can only create \u003ca href=\"https://en.wikipedia.org/wiki/Static_web_page\"\u003estatic web pages\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\n","published":true,"published_from_feed":false,"show_comments":true,"slug":"building-a-personal-website-with-github-pages-498i","social_image":null,"title":"Building a Personal Website with GitHub Pages","video":null,"video_code":null},{"created_at":"2022-01-18T18:24:02.933Z","crossposted_at":"2022-01-18T18:31:25.619Z","edited_at":null,"last_comment_at":"2022-01-07T19:28:16.000Z","published_at":"2022-01-07T19:28:16.000Z","canonical_url":"https://blog.seancoughlin.me/my-first-post","feed_source_url":"https://blog.seancoughlin.me/my-first-post","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: My First Post\npublished: true\ndate: 2022-01-07 19:28:16 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/my-first-post\n---\n\n\u003e A journey of a thousand miles begins with a single step\n\u003e \n\u003e [Chinese Proverb](https://en.wikipedia.org/wiki/A_journey_of_a_thousand_miles_begins_with_a_single_step)\n\nWelcome to my very first blog post! I was inspired to create a blog by a [freeCodeCamp New Year's Resolution Challenge](https://www.freecodecamp.org/news/2022-become-a-dev-new-years-resolution-challenge/). freeCodeCamp challenged new developers to take to the internet and blog what they learn while on their programming journey. As a recent college graduate with a degree in Computer Science, I felt inspired to share what I learn as I take my first steps into the professional programming world.\n\nVisit my website [seancoughlin.me](https://seancoughlin.me) to learn about who I am and what I work on. And stay tuned for more blog posts on [blog.seancoughlin.me](https://blog.seancoughlin.me).","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"A journey of a thousand miles begins with a single step  Chinese Proverb   Welcome to my very first...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/my-first-post-2da9","public_reactions_count":2,"processed_html":"\u003cblockquote\u003e\n\u003cp\u003eA journey of a thousand miles begins with a single step\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/A_journey_of_a_thousand_miles_begins_with_a_single_step\"\u003eChinese Proverb\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eWelcome to my very first blog post! I was inspired to create a blog by a \u003ca href=\"https://www.freecodecamp.org/news/2022-become-a-dev-new-years-resolution-challenge/\"\u003efreeCodeCamp New Year's Resolution Challenge\u003c/a\u003e. freeCodeCamp challenged new developers to take to the internet and blog what they learn while on their programming journey. As a recent college graduate with a degree in Computer Science, I felt inspired to share what I learn as I take my first steps into the professional programming world.\u003c/p\u003e\n\n\u003cp\u003eVisit my website \u003ca href=\"https://seancoughlin.me\"\u003eseancoughlin.me\u003c/a\u003e to learn about who I am and what I work on. And stay tuned for more blog posts on \u003ca href=\"https://blog.seancoughlin.me\"\u003eblog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"my-first-post-2da9","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3hpbpsfc11xd1egp3gdx.png","title":"My First Post","video":null,"video_code":null},{"created_at":"2022-01-18T18:24:03.912Z","crossposted_at":"2022-01-18T18:42:34.586Z","edited_at":null,"last_comment_at":"2022-01-08T02:35:50.000Z","published_at":"2022-01-08T02:35:50.000Z","canonical_url":"https://blog.seancoughlin.me/building-an-email-list-with-hashnode","feed_source_url":"https://blog.seancoughlin.me/building-an-email-list-with-hashnode","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Building an Email List with Hashnode\npublished: true\ndate: 2022-01-08 02:35:50 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/building-an-email-list-with-hashnode\n---\n\n### Email Lists are Valuable Branding and Marketing Tool\n\nThe hardest part of being a writer, filmmaker, freelancer, or any type of content creator is making your content known. The world is so busy that gems can go undiscovered in the noise. A crucial part of getting the word out on your content is maintaining an [email list](https://en.wikipedia.org/wiki/Electronic_mailing_list). Email lists can be used as marketing tools to notify users and make sure your great content gets discovered.\n\nHashnode has a fantastic email list feature built-in. It handles collecting emails, maintaining the list, and sending emails all with just one button click.\n\n### Enabling Email Collection on Your Posts\n\n1. Open your Hashnode blog dashboard and navigate to the newsletter section in the left sidebar. ![image.png](https://cdn.hashnode.com/res/hashnode/image/upload/v1641609299127/J_RhOFQy0.png)\n2. Check the `Enable newsletter service for your blog toggle`.\n3. Done! Hashnode handles all the details and makes the process easy!\n\n### How Reader Experience Being Subscribed to Your Email List\n\nAfter you have enabled email collection a form will appear on top of your posts. The form will prompt users to input their email if they want to be notified when you post.\n\n![image.png](https://cdn.hashnode.com/res/hashnode/image/upload/v1641607376816/kAFW1PFsS.png)\n\nOnce a reader inputs their email they will receive a verification link in an email. All emails are sent to users from _hashnode-username@mail.hashnode.blog_.\n\n![image.png](https://cdn.hashnode.com/res/hashnode/image/upload/v1641608849601/jFvfHiLTc.png)\n\nHashnode will track metrics and the history of your newsletter. ![image.png](https://cdn.hashnode.com/res/hashnode/image/upload/v1641608249943/Cmn1Ogv-D.png)\n\nAs well as giving you an interface to manage the newsletter. ![image.png](https://cdn.hashnode.com/res/hashnode/image/upload/v1641608897366/TyAuKQo4x.png)\n\n### Conclusion\n\nIn just a few clicks you can help expand your online presence and build a great marketing tool for your future content.","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Email Lists are Valuable Branding and Marketing Tool   The hardest part of being a writer,...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/building-an-email-list-with-hashnode-2ec6","public_reactions_count":2,"processed_html":"\u003ch3\u003e\n  \u003ca name=\"email-lists-are-valuable-branding-and-marketing-tool\" href=\"#email-lists-are-valuable-branding-and-marketing-tool\"\u003e\n  \u003c/a\u003e\n  Email Lists are Valuable Branding and Marketing Tool\n\u003c/h3\u003e\n\n\u003cp\u003eThe hardest part of being a writer, filmmaker, freelancer, or any type of content creator is making your content known. The world is so busy that gems can go undiscovered in the noise. A crucial part of getting the word out on your content is maintaining an \u003ca href=\"https://en.wikipedia.org/wiki/Electronic_mailing_list\"\u003eemail list\u003c/a\u003e. Email lists can be used as marketing tools to notify users and make sure your great content gets discovered.\u003c/p\u003e\n\n\u003cp\u003eHashnode has a fantastic email list feature built-in. It handles collecting emails, maintaining the list, and sending emails all with just one button click.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"enabling-email-collection-on-your-posts\" href=\"#enabling-email-collection-on-your-posts\"\u003e\n  \u003c/a\u003e\n  Enabling Email Collection on Your Posts\n\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003eOpen your Hashnode blog dashboard and navigate to the newsletter section in the left sidebar. \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--yeSN7Ys9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1641609299127/J_RhOFQy0.png\" alt=\"image.png\" loading=\"lazy\" width=\"476\" height=\"442\"\u003e\n\u003c/li\u003e\n\u003cli\u003eCheck the \u003ccode\u003eEnable newsletter service for your blog toggle\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eDone! Hashnode handles all the details and makes the process easy!\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"how-reader-experience-being-subscribed-to-your-email-list\" href=\"#how-reader-experience-being-subscribed-to-your-email-list\"\u003e\n  \u003c/a\u003e\n  How Reader Experience Being Subscribed to Your Email List\n\u003c/h3\u003e\n\n\u003cp\u003eAfter you have enabled email collection a form will appear on top of your posts. The form will prompt users to input their email if they want to be notified when you post.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--qH8d6C90--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1641607376816/kAFW1PFsS.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--qH8d6C90--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1641607376816/kAFW1PFsS.png\" alt=\"image.png\" loading=\"lazy\" width=\"800\" height=\"131\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eOnce a reader inputs their email they will receive a verification link in an email. All emails are sent to users from \u003cem\u003e\u003ca href=\"mailto:hashnode-username@mail.hashnode.blog\"\u003ehashnode-username@mail.hashnode.blog\u003c/a\u003e\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--EUx7dWcc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1641608849601/jFvfHiLTc.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--EUx7dWcc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1641608849601/jFvfHiLTc.png\" alt=\"image.png\" loading=\"lazy\" width=\"800\" height=\"642\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eHashnode will track metrics and the history of your newsletter. \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--7E36gXFh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1641608249943/Cmn1Ogv-D.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--7E36gXFh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1641608249943/Cmn1Ogv-D.png\" alt=\"image.png\" loading=\"lazy\" width=\"800\" height=\"36\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eAs well as giving you an interface to manage the newsletter. \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s---hui8cLF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1641608897366/TyAuKQo4x.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s---hui8cLF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1641608897366/TyAuKQo4x.png\" alt=\"image.png\" loading=\"lazy\" width=\"800\" height=\"41\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eIn just a few clicks you can help expand your online presence and build a great marketing tool for your future content.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"building-an-email-list-with-hashnode-2ec6","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfp7rwixthbpqljrwm7r.png","title":"Building an Email List with Hashnode","video":null,"video_code":null},{"created_at":"2022-01-18T18:24:09.777Z","crossposted_at":"2022-01-18T18:42:11.929Z","edited_at":null,"last_comment_at":"2022-01-14T19:47:19.000Z","published_at":"2022-01-14T19:47:19.000Z","canonical_url":"https://blog.seancoughlin.me/hosting-an-api-with-github-pages","feed_source_url":"https://blog.seancoughlin.me/hosting-an-api-with-github-pages","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Hosting an API with GitHub Pages\npublished: true\ndate: 2022-01-14 19:47:19 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/hosting-an-api-with-github-pages\n---\n\n## Background\n\n[GitHub Pages](https://pages.github.com/) is a free website hosting tool provided by GitHub. [I previously wrote about GitHub pages being an excellent place to host a personal website or project page.](https://blog.seancoughlin.me/building-a-personal-website-with-github-pages) Additionally, it is a great choice to host a JSON API.\n\nAn [API](https://en.wikipedia.org/wiki/API) is a connection between computers. An example API would be the [Spotify API](https://developer.spotify.com/documentation/web-api/) which provides music data.\n\n## Tutorial\n\nFirst, you will need to create a special `[username].github.io` repository. This repository will be home to your GitHub Pages website. The repository name must **exactly** match the format `[username].github.io`, otherwise GitHub will not generate a live website.\n\n![Create a new GitHubPages Repo](https://cdn.hashnode.com/res/hashnode/image/upload/v1642186114174/26yRishrk.png)\n\nI have already made a GitHub Pages repository so the name is taken for me. Your custom `[username].github.io` will be available.\n\nAfter creating `[username].github.io` open the terminal, clone the repository, and cd into the directory.\n\n```\ngit clone https://github.com/Scc33/Scc33.github.io.git\ncd Scc33.github.io\n\n```\n\nInside the repository you can create a `.json` file. That `.json` file will become your publicly accessible JSON API.\n\n![Example json file](https://cdn.hashnode.com/res/hashnode/image/upload/v1642187567249/8-aI-Cce4.png)\n\nAfter adding a `.json` file add, commit, and push your changes to GitHub.\n\n```\ngit add .\ngit commit -m \"Create JSON API\"\ngit push -u origin master\n\n```\n\nOnce you commit and push your changes to the codebase, GitHub will automatically build your changes and publish the code to the internet. It should only take a few minutes for the changes to become visible.\n\nThat's all it takes! You now have a JSON API for the world to see. Your new JSON API will be located at the URL `[username].github.io/[file-name].json`. Your API can be seen using any web browser or an API testing tool like [Postman](https://www.postman.com/).\n\n## Conclusion\n\nGitHub Pages is a great tool for quickly creating a JSON API. In just a few minutes it's up and running!\n\n### Pros\n\n- The entire build process is [automated](https://github.com/features/actions) and site changes are published to the internet within minutes.\n- GitHub Pages supports [HTTPS](https://en.wikipedia.org/wiki/HTTPS) to protect your site and users from malicious tampering.\n- Best of all, it's free!\n\n### Cons\n\n- [GitHub limits page traffic.](https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages#usage-limits) Published sites are capped at 1GB in size and there is a 100 GB _soft_ limit on bandwidth per month.","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Background   GitHub Pages is a free website hosting tool provided by GitHub. I previously...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/hosting-an-api-with-github-pages-2243","public_reactions_count":5,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"background\" href=\"#background\"\u003e\n  \u003c/a\u003e\n  Background\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://pages.github.com/\"\u003eGitHub Pages\u003c/a\u003e is a free website hosting tool provided by GitHub. \u003ca href=\"https://blog.seancoughlin.me/building-a-personal-website-with-github-pages\"\u003eI previously wrote about GitHub pages being an excellent place to host a personal website or project page.\u003c/a\u003e Additionally, it is a great choice to host a JSON API.\u003c/p\u003e\n\n\u003cp\u003eAn \u003ca href=\"https://en.wikipedia.org/wiki/API\"\u003eAPI\u003c/a\u003e is a connection between computers. An example API would be the \u003ca href=\"https://developer.spotify.com/documentation/web-api/\"\u003eSpotify API\u003c/a\u003e which provides music data.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"tutorial\" href=\"#tutorial\"\u003e\n  \u003c/a\u003e\n  Tutorial\n\u003c/h2\u003e\n\n\u003cp\u003eFirst, you will need to create a special \u003ccode\u003e[username].github.io\u003c/code\u003e repository. This repository will be home to your GitHub Pages website. The repository name must \u003cstrong\u003eexactly\u003c/strong\u003e match the format \u003ccode\u003e[username].github.io\u003c/code\u003e, otherwise GitHub will not generate a live website.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--5XTb15JY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642186114174/26yRishrk.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--5XTb15JY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642186114174/26yRishrk.png\" alt=\"Create a new GitHubPages Repo\" loading=\"lazy\" width=\"800\" height=\"759\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eI have already made a GitHub Pages repository so the name is taken for me. Your custom \u003ccode\u003e[username].github.io\u003c/code\u003e will be available.\u003c/p\u003e\n\n\u003cp\u003eAfter creating \u003ccode\u003e[username].github.io\u003c/code\u003e open the terminal, clone the repository, and cd into the directory.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003egit clone https://github.com/Scc33/Scc33.github.io.git\ncd Scc33.github.io\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eInside the repository you can create a \u003ccode\u003e.json\u003c/code\u003e file. That \u003ccode\u003e.json\u003c/code\u003e file will become your publicly accessible JSON API.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--LcFZ3c8t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642187567249/8-aI-Cce4.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--LcFZ3c8t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642187567249/8-aI-Cce4.png\" alt=\"Example json file\" loading=\"lazy\" width=\"800\" height=\"1116\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eAfter adding a \u003ccode\u003e.json\u003c/code\u003e file add, commit, and push your changes to GitHub.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003egit add .\ngit commit -m \"Create JSON API\"\ngit push -u origin master\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eOnce you commit and push your changes to the codebase, GitHub will automatically build your changes and publish the code to the internet. It should only take a few minutes for the changes to become visible.\u003c/p\u003e\n\n\u003cp\u003eThat's all it takes! You now have a JSON API for the world to see. Your new JSON API will be located at the URL \u003ccode\u003e[username].github.io/[file-name].json\u003c/code\u003e. Your API can be seen using any web browser or an API testing tool like \u003ca href=\"https://www.postman.com/\"\u003ePostman\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eGitHub Pages is a great tool for quickly creating a JSON API. In just a few minutes it's up and running!\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"pros\" href=\"#pros\"\u003e\n  \u003c/a\u003e\n  Pros\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe entire build process is \u003ca href=\"https://github.com/features/actions\"\u003eautomated\u003c/a\u003e and site changes are published to the internet within minutes.\u003c/li\u003e\n\u003cli\u003eGitHub Pages supports \u003ca href=\"https://en.wikipedia.org/wiki/HTTPS\"\u003eHTTPS\u003c/a\u003e to protect your site and users from malicious tampering.\u003c/li\u003e\n\u003cli\u003eBest of all, it's free!\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"cons\" href=\"#cons\"\u003e\n  \u003c/a\u003e\n  Cons\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages#usage-limits\"\u003eGitHub limits page traffic.\u003c/a\u003e Published sites are capped at 1GB in size and there is a 100 GB \u003cem\u003esoft\u003c/em\u003e limit on bandwidth per month.\u003c/li\u003e\n\u003c/ul\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"hosting-an-api-with-github-pages-2243","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5utav2gvsg56hciss5jk.png","title":"Hosting an API with GitHub Pages","video":null,"video_code":null},{"created_at":"2022-01-18T18:24:21.476Z","crossposted_at":"2022-01-18T18:30:58.834Z","edited_at":null,"last_comment_at":"2022-01-16T20:34:13.000Z","published_at":"2022-01-16T20:34:13.000Z","canonical_url":"https://blog.seancoughlin.me/basics-search-engine-optimization","feed_source_url":"https://blog.seancoughlin.me/basics-search-engine-optimization","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Basics of Search Engine Optimization\npublished: true\ndate: 2022-01-16 20:34:13 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/basics-search-engine-optimization\n---\n\n## What is Search Engine Optimization?\n\n[Search Engine Optimization (SEO)](https://en.wikipedia.org/wiki/Search_engine_optimization) is the technique of tuning content to rank higher on internet searches. It is crucial to utilize SEO to reach your target audience and to advertise content.\n\nA beginner at SEO only needs to focus on having _a strong title_, _a clear description_, and _powerful keywords_.\n\n### The Basic Idea of SEO\n\nA helpful analogy for SEO is the title and description of a book.\n\n![Photo of books by Ashley Byrd on Unsplash](https://cdn.hashnode.com/res/hashnode/image/upload/v1642364016086/yJPrRDL56.jpeg)\n\nPhoto by [Ashley Byrd](https://unsplash.com/@byrdman85?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/s/photos/bookstore?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)\n\nLet's say I'm shopping at a bookstore and I see a book I'm interested in. The cover and spine of the book will have a title written on them. The title is the first thing I see and should give me some idea of what the book is about. If I want to know more, I'll open the cover to read the description written on the inside fold. The description provides more information about the book like plot, genre, and/or reviews.\n\nThe title and descriptions on websites serve the same function as they do for books. They provide users an overview of what the content is about and why they might be interested in it.\n\nNow suppose I love mysteries. I walk into our hypothetical bookstore looking for a page turner. I can ask a store clerk for some mystery book recommendations. With the _keyword_ mystery, the store clerk can find me books that will suit my interests.\n\n![image.png](https://cdn.hashnode.com/res/hashnode/image/upload/v1642374797640/1YOAgkdXZ.png)\n\nGoogle and other search engines are like bookstore clerks for the internet. They use specific keywords as cues for recommending things you might be interested in.\n\n## Writing Titles and Descriptions with Keywords\n\nTo write strong titles and descriptions brainstorm ideas that fit the webpage you are optimizing for.\n\nOnce you have brainstormed, edit and revise for clarity and conciseness. Titles should fall within 40 to 50 characters and descriptions should be between 140 to 160 characters.\n\nConsider having someone examine your possible titles and descriptions. At the end of the day, it is important that individuals are interested in clicking on your page.\n\n### How Users Experience Titles and Descriptions on Google\n\nTitles and descriptions aren't just used to rank search results. They also help Google create the actual listing on the page. The title is used to create the blue page link and the descriptions forms the small body of text underneath.\n\n![image.png](https://cdn.hashnode.com/res/hashnode/image/upload/v1642375200763/cmo7iR3B6.png)\n\n- Title: `Google - Wikipedia`\n- Description: `Google LLC is an American multinational technology company that specializes in Internet-related services and products, which include online advertising ...`\n\n### Keywords\n\nAn important part of writing good titles and descriptions is making sure they contain keywords that users will search for. The more keywords you include, the more likely the search engine will rank your results.\n\nGoogle provides a [keyword planner](https://ads.google.com/home/tools/keyword-planner/) that shows how popular words are.\n\n![Google's Keyword Planner](https://cdn.hashnode.com/res/hashnode/image/upload/v1642363935343/z4dnP81mVj.png)\n\nWhile including keywords is important, focusing only on keywords will make your titles and descriptions less understandable. Search engines will punish [keyword stuffing](https://developers.google.com/search/docs/advanced/guidelines/irrelevant-keywords), so focus on including a few powerful keywords in readable titles and descriptions.\n\n### Examples of Title and Description Tags\n\nOn my personal site, [seancoughlin.me](https://seancoughlin.me), the title tag is `Sean Coughlin - Software Engineer`. My description is `Sean Coughlin | Sean Coughlin is a Software Engineering Professional`. The title and description on my site state who I am and some basic information that hopefully interests a reader to learn more. They contain the keyword software engineering which makes my site more likely to appear in searches related to software engineer.\n\n![seancoughlin.me meta tags](https://cdn.hashnode.com/res/hashnode/image/upload/v1642356247508/bORQHcDzjw.png)\n\nThe blog posts I write also contain titles and descriptions to optimize the content for placement in search results. One of my previous posts, [Hosting an API with GitHub Pages](https://dev.to/scc33/hosting-an-api-with-github-pages-1142-temp-slug-6632207), contains the title `Hosting an API with GitHub Pages` and description `Hosting with GitHub Pages is an easy way to build a public JSON API`.\n\nThe keywords here are API, GitHub, and JSON. These technical terms let search engines know this content is related to a technical topic and someone who searches for _creating an API_ might be interested in reading it.\n\n![Hashnode example SEO tags](https://cdn.hashnode.com/res/hashnode/image/upload/v1642358002471/w7jaSvafjv.png)\n\n## Seeing Search Engine Rankings\n\nThe focus of SEO is driving more clicks to your content. Measuring how many clicks you receive is an important way of judging SEO effectiveness.\n\nGoogle provides the [Search Engine Console](https://search.google.com/search-console/about) to \"help you measure your site's Search traffic and performance, fix issues, and make your site shine in Google Search results.\" Bing's [Webmaster](https://www.bing.com/webmaster) provides similar support and will help you rank higher in Bing results.\n\nRemember, it is called search engine **optimization**. The process is less about getting it right the first time and more about tuning overtime and measuring performance. If you change a page title or description, use [Search Engine Console](https://search.google.com/search-console/about) to see how rankings and traffic change.\n\nEvery search engine runs on a different algorithm so there will be differences in SEO. A helpful technique for beginning is to focus on just one search engine. [With close to 90% of the search market](https://www.statista.com/statistics/216573/worldwide-market-share-of-search-engines/), Google is by far the most important search engine to optimize for.\n\n## Editing SEO on Tags on Websites\n\nMost blogging and website platforms have some way of customizing your SEO. They often include options to edit title and descriptions elements.\n\nWhen writing on [Hashnode](https://hashnode.com) the settings tab contains fields to edit titles and descriptions.\n\n![Hashnode example](https://cdn.hashnode.com/res/hashnode/image/upload/v1642356775620/ExKmO6wIG.png)\n\nTitles and descriptions are contained within the [HTML meta tags](https://www.w3schools.com/tags/tag_meta.asp) on websites. So if you manage your own site, make sure to add title and description meta tags to the `\u003chead\u003e`.\n\n```\n\u003c!-- Meta --\u003e\n\u003ctitle\u003eSean Coughlin - Software Engineer\u003c/title\u003e\n\u003cmeta name=\"title\" content=\"Sean Coughlin - Software Engineer\"\u003e\n\u003cmeta name=\"description\" content=\"Sean Coughlin | Sean Coughlin is a Software Engineering Professional. \"\u003e\n\n```\n\n[Online generators](https://www.seoptimer.com/meta-tag-generator) are a great tool for creating these tags with the correct formatting.\n\n## Learning More About SEO\n\nTitle and description tags are the basics of SEO and despite how simple it is to add these elements, they will greatly improve the traffic to your site.\n\nIf you want to learn, more consider exploring additional techniques like [backlinks](https://en.wikipedia.org/wiki/Backlink), [canonical links](https://en.wikipedia.org/wiki/Canonical_link_element), or [sitemaps](https://www.sitemaps.org/).\n\nGoogle's [documentation on SEO](https://developers.google.com/search/docs/beginner/seo-starter-guide) is another great resource for learning more about search engine optimization.\n\n* * *\n\nIf you found this content useful or learned something about search engine optimization, please give it a reaction - thanks!","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"What is Search Engine Optimization?   Search Engine Optimization (SEO) is the technique of...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/basics-of-search-engine-optimization-1ocp","public_reactions_count":6,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"what-is-search-engine-optimization\" href=\"#what-is-search-engine-optimization\"\u003e\n  \u003c/a\u003e\n  What is Search Engine Optimization?\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Search_engine_optimization\"\u003eSearch Engine Optimization (SEO)\u003c/a\u003e is the technique of tuning content to rank higher on internet searches. It is crucial to utilize SEO to reach your target audience and to advertise content.\u003c/p\u003e\n\n\u003cp\u003eA beginner at SEO only needs to focus on having \u003cem\u003ea strong title\u003c/em\u003e, \u003cem\u003ea clear description\u003c/em\u003e, and \u003cem\u003epowerful keywords\u003c/em\u003e.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"the-basic-idea-of-seo\" href=\"#the-basic-idea-of-seo\"\u003e\n  \u003c/a\u003e\n  The Basic Idea of SEO\n\u003c/h3\u003e\n\n\u003cp\u003eA helpful analogy for SEO is the title and description of a book.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--e2Kd-j_t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642364016086/yJPrRDL56.jpeg\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--e2Kd-j_t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642364016086/yJPrRDL56.jpeg\" alt=\"Photo of books by Ashley Byrd on Unsplash\" loading=\"lazy\" width=\"800\" height=\"1202\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003ePhoto by \u003ca href=\"https://unsplash.com/@byrdman85?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eAshley Byrd\u003c/a\u003e on \u003ca href=\"https://unsplash.com/s/photos/bookstore?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eLet's say I'm shopping at a bookstore and I see a book I'm interested in. The cover and spine of the book will have a title written on them. The title is the first thing I see and should give me some idea of what the book is about. If I want to know more, I'll open the cover to read the description written on the inside fold. The description provides more information about the book like plot, genre, and/or reviews.\u003c/p\u003e\n\n\u003cp\u003eThe title and descriptions on websites serve the same function as they do for books. They provide users an overview of what the content is about and why they might be interested in it.\u003c/p\u003e\n\n\u003cp\u003eNow suppose I love mysteries. I walk into our hypothetical bookstore looking for a page turner. I can ask a store clerk for some mystery book recommendations. With the \u003cem\u003ekeyword\u003c/em\u003e mystery, the store clerk can find me books that will suit my interests.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--m9328hpm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642374797640/1YOAgkdXZ.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--m9328hpm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642374797640/1YOAgkdXZ.png\" alt=\"image.png\" loading=\"lazy\" width=\"800\" height=\"534\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eGoogle and other search engines are like bookstore clerks for the internet. They use specific keywords as cues for recommending things you might be interested in.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"writing-titles-and-descriptions-with-keywords\" href=\"#writing-titles-and-descriptions-with-keywords\"\u003e\n  \u003c/a\u003e\n  Writing Titles and Descriptions with Keywords\n\u003c/h2\u003e\n\n\u003cp\u003eTo write strong titles and descriptions brainstorm ideas that fit the webpage you are optimizing for.\u003c/p\u003e\n\n\u003cp\u003eOnce you have brainstormed, edit and revise for clarity and conciseness. Titles should fall within 40 to 50 characters and descriptions should be between 140 to 160 characters.\u003c/p\u003e\n\n\u003cp\u003eConsider having someone examine your possible titles and descriptions. At the end of the day, it is important that individuals are interested in clicking on your page.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"how-users-experience-titles-and-descriptions-on-google\" href=\"#how-users-experience-titles-and-descriptions-on-google\"\u003e\n  \u003c/a\u003e\n  How Users Experience Titles and Descriptions on Google\n\u003c/h3\u003e\n\n\u003cp\u003eTitles and descriptions aren't just used to rank search results. They also help Google create the actual listing on the page. The title is used to create the blue page link and the descriptions forms the small body of text underneath.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--wP2eYDVf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642375200763/cmo7iR3B6.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--wP2eYDVf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642375200763/cmo7iR3B6.png\" alt=\"image.png\" loading=\"lazy\" width=\"800\" height=\"138\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eTitle: \u003ccode\u003eGoogle - Wikipedia\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eDescription: \u003ccode\u003eGoogle LLC is an American multinational technology company that specializes in Internet-related services and products, which include online advertising ...\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"keywords\" href=\"#keywords\"\u003e\n  \u003c/a\u003e\n  Keywords\n\u003c/h3\u003e\n\n\u003cp\u003eAn important part of writing good titles and descriptions is making sure they contain keywords that users will search for. The more keywords you include, the more likely the search engine will rank your results.\u003c/p\u003e\n\n\u003cp\u003eGoogle provides a \u003ca href=\"https://ads.google.com/home/tools/keyword-planner/\"\u003ekeyword planner\u003c/a\u003e that shows how popular words are.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--v3VYXqvD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642363935343/z4dnP81mVj.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--v3VYXqvD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642363935343/z4dnP81mVj.png\" alt=\"Google's Keyword Planner\" loading=\"lazy\" width=\"800\" height=\"379\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eWhile including keywords is important, focusing only on keywords will make your titles and descriptions less understandable. Search engines will punish \u003ca href=\"https://developers.google.com/search/docs/advanced/guidelines/irrelevant-keywords\"\u003ekeyword stuffing\u003c/a\u003e, so focus on including a few powerful keywords in readable titles and descriptions.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"examples-of-title-and-description-tags\" href=\"#examples-of-title-and-description-tags\"\u003e\n  \u003c/a\u003e\n  Examples of Title and Description Tags\n\u003c/h3\u003e\n\n\u003cp\u003eOn my personal site, \u003ca href=\"https://seancoughlin.me\"\u003eseancoughlin.me\u003c/a\u003e, the title tag is \u003ccode\u003eSean Coughlin - Software Engineer\u003c/code\u003e. My description is \u003ccode\u003eSean Coughlin | Sean Coughlin is a Software Engineering Professional\u003c/code\u003e. The title and description on my site state who I am and some basic information that hopefully interests a reader to learn more. They contain the keyword software engineering which makes my site more likely to appear in searches related to software engineer.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s---k-HtTKe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642356247508/bORQHcDzjw.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s---k-HtTKe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642356247508/bORQHcDzjw.png\" alt=\"seancoughlin.me meta tags\" loading=\"lazy\" width=\"800\" height=\"80\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe blog posts I write also contain titles and descriptions to optimize the content for placement in search results. One of my previous posts, \u003ca href=\"https://dev.to/scc33/hosting-an-api-with-github-pages-1142-temp-slug-6632207\"\u003eHosting an API with GitHub Pages\u003c/a\u003e, contains the title \u003ccode\u003eHosting an API with GitHub Pages\u003c/code\u003e and description \u003ccode\u003eHosting with GitHub Pages is an easy way to build a public JSON API\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe keywords here are API, GitHub, and JSON. These technical terms let search engines know this content is related to a technical topic and someone who searches for \u003cem\u003ecreating an API\u003c/em\u003e might be interested in reading it.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--wiDffnna--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642358002471/w7jaSvafjv.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--wiDffnna--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642358002471/w7jaSvafjv.png\" alt=\"Hashnode example SEO tags\" loading=\"lazy\" width=\"800\" height=\"30\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"seeing-search-engine-rankings\" href=\"#seeing-search-engine-rankings\"\u003e\n  \u003c/a\u003e\n  Seeing Search Engine Rankings\n\u003c/h2\u003e\n\n\u003cp\u003eThe focus of SEO is driving more clicks to your content. Measuring how many clicks you receive is an important way of judging SEO effectiveness.\u003c/p\u003e\n\n\u003cp\u003eGoogle provides the \u003ca href=\"https://search.google.com/search-console/about\"\u003eSearch Engine Console\u003c/a\u003e to \"help you measure your site's Search traffic and performance, fix issues, and make your site shine in Google Search results.\" Bing's \u003ca href=\"https://www.bing.com/webmaster\"\u003eWebmaster\u003c/a\u003e provides similar support and will help you rank higher in Bing results.\u003c/p\u003e\n\n\u003cp\u003eRemember, it is called search engine \u003cstrong\u003eoptimization\u003c/strong\u003e. The process is less about getting it right the first time and more about tuning overtime and measuring performance. If you change a page title or description, use \u003ca href=\"https://search.google.com/search-console/about\"\u003eSearch Engine Console\u003c/a\u003e to see how rankings and traffic change.\u003c/p\u003e\n\n\u003cp\u003eEvery search engine runs on a different algorithm so there will be differences in SEO. A helpful technique for beginning is to focus on just one search engine. \u003ca href=\"https://www.statista.com/statistics/216573/worldwide-market-share-of-search-engines/\"\u003eWith close to 90% of the search market\u003c/a\u003e, Google is by far the most important search engine to optimize for.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"editing-seo-on-tags-on-websites\" href=\"#editing-seo-on-tags-on-websites\"\u003e\n  \u003c/a\u003e\n  Editing SEO on Tags on Websites\n\u003c/h2\u003e\n\n\u003cp\u003eMost blogging and website platforms have some way of customizing your SEO. They often include options to edit title and descriptions elements.\u003c/p\u003e\n\n\u003cp\u003eWhen writing on \u003ca href=\"https://hashnode.com\"\u003eHashnode\u003c/a\u003e the settings tab contains fields to edit titles and descriptions.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Kq-vimS4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642356775620/ExKmO6wIG.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Kq-vimS4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642356775620/ExKmO6wIG.png\" alt=\"Hashnode example\" loading=\"lazy\" width=\"798\" height=\"1148\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eTitles and descriptions are contained within the \u003ca href=\"https://www.w3schools.com/tags/tag_meta.asp\"\u003eHTML meta tags\u003c/a\u003e on websites. So if you manage your own site, make sure to add title and description meta tags to the \u003ccode\u003e\u0026lt;head\u0026gt;\u003c/code\u003e.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\u0026lt;!-- Meta --\u0026gt;\n\u0026lt;title\u0026gt;Sean Coughlin - Software Engineer\u0026lt;/title\u0026gt;\n\u0026lt;meta name=\"title\" content=\"Sean Coughlin - Software Engineer\"\u0026gt;\n\u0026lt;meta name=\"description\" content=\"Sean Coughlin | Sean Coughlin is a Software Engineering Professional. \"\u0026gt;\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003e\u003ca href=\"https://www.seoptimer.com/meta-tag-generator\"\u003eOnline generators\u003c/a\u003e are a great tool for creating these tags with the correct formatting.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"learning-more-about-seo\" href=\"#learning-more-about-seo\"\u003e\n  \u003c/a\u003e\n  Learning More About SEO\n\u003c/h2\u003e\n\n\u003cp\u003eTitle and description tags are the basics of SEO and despite how simple it is to add these elements, they will greatly improve the traffic to your site.\u003c/p\u003e\n\n\u003cp\u003eIf you want to learn, more consider exploring additional techniques like \u003ca href=\"https://en.wikipedia.org/wiki/Backlink\"\u003ebacklinks\u003c/a\u003e, \u003ca href=\"https://en.wikipedia.org/wiki/Canonical_link_element\"\u003ecanonical links\u003c/a\u003e, or \u003ca href=\"https://www.sitemaps.org/\"\u003esitemaps\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eGoogle's \u003ca href=\"https://developers.google.com/search/docs/beginner/seo-starter-guide\"\u003edocumentation on SEO\u003c/a\u003e is another great resource for learning more about search engine optimization.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eIf you found this content useful or learned something about search engine optimization, please give it a reaction - thanks!\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"basics-of-search-engine-optimization-1ocp","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d6vl9q2eh55rg4zvv0a9.png","title":"Basics of Search Engine Optimization","video":null,"video_code":null},{"created_at":"2022-01-18T20:01:41.714Z","crossposted_at":"2022-01-18T20:03:25.576Z","edited_at":null,"last_comment_at":"2022-01-18T20:00:05.000Z","published_at":"2022-01-18T20:00:05.000Z","canonical_url":"https://blog.seancoughlin.me/how-to-add-google-analytics-to-your-hashnode-blog","feed_source_url":"https://blog.seancoughlin.me/how-to-add-google-analytics-to-your-hashnode-blog","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: How to Add Google Analytics to Your Hashnode Blog\npublished: true\ndate: 2022-01-18 20:00:05 UTC\ntags: #analytics #hashnode\ncanonical_url: https://blog.seancoughlin.me/how-to-add-google-analytics-to-your-hashnode-blog\n---\n\n## Background\n\nEvery blogger wants to know how their work is being received by the community. However, understanding your readers can be like staring into the void. [Google Analytics](https://analytics.google.com) is the light that you might be looking for.\n\nGoogle Analytics offers a plethora of detail about your readers. The core features entail measuring the number of site visitors, sessions, and duration spent on the site. Best of all, it's totally free :).\n\nGoogle offers an [academy](https://analytics.google.com/analytics/academy/) for those interested in learning more about the features.\n\n![Google Analytics logo](https://cdn.hashnode.com/res/hashnode/image/upload/v1642535746565/Yib34ks9Y.png)\n\n## Tutorial\n\n1. To add [Google Analytics](https://analytics.google.com) to your Hashnode blog, open [Google Analytics](https://analytics.google.com) and login using a Gmail account. \n2. First you will have to go through account setup. The account name can be anything you like and you can track multiple sites with one account. ![Account setup on Google Analytics](https://cdn.hashnode.com/res/hashnode/image/upload/v1642460494431/l-mdy5E9S.png)\n3. Next you must setup a property. A property is equivalent to a site that you want to track. Enter the title of your website in the _property name_ field.\n4. Recently Google has migrated to a newer version, [Google Analytics 4 (GA4)](https://support.google.com/analytics/answer/10089681?hl=en), that is not supported by Hashnode. Hashnode supports the older [Universal Analytics (UA)](https://support.google.com/analytics/answer/2790010?hl=en). The differences are [complex](https://support.google.com/analytics/answer/9964640?hl=en#zippy=%2Cin-this-article), but core functionality is the same. To create a Universal Analytics property click on _show advanced options_ (highlighted with an arrow below). ![Setup your website property in Analytics](https://cdn.hashnode.com/res/hashnode/image/upload/v1642460395440/bRXKAWppI.png)\n5. Provide the URL of your blog. Since Hashnode only supports UA, we will only create a UA property. A GA4 property can be [created later](https://support.google.com/analytics/answer/9744165?hl=en) if necessary. ![Creating an UA](https://cdn.hashnode.com/res/hashnode/image/upload/v1642533333223/cEEu5qzrZ.png)\n6. Provide some basic information about your site and what you will be using Google Analytics for. ![About your business section on Analytics](https://cdn.hashnode.com/res/hashnode/image/upload/v1642533496006/K7baysqtU.png)\n7. After clicking _create_ a Universal ID will be generated. It will be a number starting with _UA_. Copy this number and open your blog's dashboard on [Hashnode](https://hashnode.com). ![UA ID created after clicking create](https://cdn.hashnode.com/res/hashnode/image/upload/v1642533687040/nbIqnBSJF.png)\n8. Click on the integrations tab. Enter the Universal Analytics ID provided by Google Analytics. After entering the Universal Analytics ID click _update_ at the bottom of the page. ![Hashnode field to enter Analytics ID](https://cdn.hashnode.com/res/hashnode/image/upload/v1642460214852/v6YR9rNRg.png)\n9. Now you can open Google Analytics and you will begin to see blog traffic data appearing as users visit your site.\n\n![Screenshot of Google Analytics data](https://cdn.hashnode.com/res/hashnode/image/upload/v1642460576202/HFo5mCzQo.png)\n\nThat's it! Sit back and enjoy all the glorious new data.","cached_tag_list":"analytics, hashnode","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Background   Every blogger wants to know how their work is being received by the community....","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/how-to-add-google-analytics-to-your-hashnode-blog-275p","public_reactions_count":2,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"background\" href=\"#background\"\u003e\n  \u003c/a\u003e\n  Background\n\u003c/h2\u003e\n\n\u003cp\u003eEvery blogger wants to know how their work is being received by the community. However, understanding your readers can be like staring into the void. \u003ca href=\"https://analytics.google.com\"\u003eGoogle Analytics\u003c/a\u003e is the light that you might be looking for.\u003c/p\u003e\n\n\u003cp\u003eGoogle Analytics offers a plethora of detail about your readers. The core features entail measuring the number of site visitors, sessions, and duration spent on the site. Best of all, it's totally free :).\u003c/p\u003e\n\n\u003cp\u003eGoogle offers an \u003ca href=\"https://analytics.google.com/analytics/academy/\"\u003eacademy\u003c/a\u003e for those interested in learning more about the features.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--a13TrpIk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642535746565/Yib34ks9Y.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--a13TrpIk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642535746565/Yib34ks9Y.png\" alt=\"Google Analytics logo\" loading=\"lazy\" width=\"800\" height=\"333\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"tutorial\" href=\"#tutorial\"\u003e\n  \u003c/a\u003e\n  Tutorial\n\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003eTo add \u003ca href=\"https://analytics.google.com\"\u003eGoogle Analytics\u003c/a\u003e to your Hashnode blog, open \u003ca href=\"https://analytics.google.com\"\u003eGoogle Analytics\u003c/a\u003e and login using a Gmail account. \u003c/li\u003e\n\u003cli\u003eFirst you will have to go through account setup. The account name can be anything you like and you can track multiple sites with one account. \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--PWtZqbwa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642460494431/l-mdy5E9S.png\" alt=\"Account setup on Google Analytics\" loading=\"lazy\" width=\"800\" height=\"543\"\u003e\n\u003c/li\u003e\n\u003cli\u003eNext you must setup a property. A property is equivalent to a site that you want to track. Enter the title of your website in the \u003cem\u003eproperty name\u003c/em\u003e field.\u003c/li\u003e\n\u003cli\u003eRecently Google has migrated to a newer version, \u003ca href=\"https://support.google.com/analytics/answer/10089681?hl=en\"\u003eGoogle Analytics 4 (GA4)\u003c/a\u003e, that is not supported by Hashnode. Hashnode supports the older \u003ca href=\"https://support.google.com/analytics/answer/2790010?hl=en\"\u003eUniversal Analytics (UA)\u003c/a\u003e. The differences are \u003ca href=\"https://support.google.com/analytics/answer/9964640?hl=en#zippy=%2Cin-this-article\"\u003ecomplex\u003c/a\u003e, but core functionality is the same. To create a Universal Analytics property click on \u003cem\u003eshow advanced options\u003c/em\u003e (highlighted with an arrow below). \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--l6XQZ2Pm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642460395440/bRXKAWppI.png\" alt=\"Setup your website property in Analytics\" loading=\"lazy\" width=\"800\" height=\"354\"\u003e\n\u003c/li\u003e\n\u003cli\u003eProvide the URL of your blog. Since Hashnode only supports UA, we will only create a UA property. A GA4 property can be \u003ca href=\"https://support.google.com/analytics/answer/9744165?hl=en\"\u003ecreated later\u003c/a\u003e if necessary. \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--9oh4A9-R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642533333223/cEEu5qzrZ.png\" alt=\"Creating an UA\" loading=\"lazy\" width=\"800\" height=\"262\"\u003e\n\u003c/li\u003e\n\u003cli\u003eProvide some basic information about your site and what you will be using Google Analytics for. \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TlrnYUWb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642533496006/K7baysqtU.png\" alt=\"About your business section on Analytics\" loading=\"lazy\" width=\"800\" height=\"461\"\u003e\n\u003c/li\u003e\n\u003cli\u003eAfter clicking \u003cem\u003ecreate\u003c/em\u003e a Universal ID will be generated. It will be a number starting with \u003cem\u003eUA\u003c/em\u003e. Copy this number and open your blog's dashboard on \u003ca href=\"https://hashnode.com\"\u003eHashnode\u003c/a\u003e. \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--EIm1INgz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642533687040/nbIqnBSJF.png\" alt=\"UA ID created after clicking create\" loading=\"lazy\" width=\"415\" height=\"56\"\u003e\n\u003c/li\u003e\n\u003cli\u003eClick on the integrations tab. Enter the Universal Analytics ID provided by Google Analytics. After entering the Universal Analytics ID click \u003cem\u003eupdate\u003c/em\u003e at the bottom of the page. \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--sC0i6_NA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642460214852/v6YR9rNRg.png\" alt=\"Hashnode field to enter Analytics ID\" loading=\"lazy\" width=\"800\" height=\"370\"\u003e\n\u003c/li\u003e\n\u003cli\u003eNow you can open Google Analytics and you will begin to see blog traffic data appearing as users visit your site.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--pFm27WQp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642460576202/HFo5mCzQo.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--pFm27WQp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642460576202/HFo5mCzQo.png\" alt=\"Screenshot of Google Analytics data\" loading=\"lazy\" width=\"800\" height=\"257\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThat's it! Sit back and enjoy all the glorious new data.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"how-to-add-google-analytics-to-your-hashnode-blog-275p","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/owcb31tqxxjf8gu9u9ul.png","title":"How to Add Google Analytics to Your Hashnode Blog","video":null,"video_code":null},{"created_at":"2022-01-19T19:53:29.752Z","crossposted_at":"2022-01-19T19:55:19.560Z","edited_at":null,"last_comment_at":"2022-01-19T19:52:02.000Z","published_at":"2022-01-19T19:52:02.000Z","canonical_url":"https://blog.seancoughlin.me/why-you-should-track-your-blog-traffic-with-google-analytics","feed_source_url":"https://blog.seancoughlin.me/why-you-should-track-your-blog-traffic-with-google-analytics","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Why you Should Track Your Blog Traffic with Google Analytics\npublished: true\ndate: 2022-01-19 19:52:02 UTC\ntags: #analytics, #google, #tutorial\ncanonical_url: https://blog.seancoughlin.me/why-you-should-track-your-blog-traffic-with-google-analytics\n---\n\n## What is Google Analytics?\n\n[Google Analytics](https://analytics.google.com) was [launched in 2005](https://en.wikipedia.org/wiki/Google_Analytics) as a tool for reporting web traffic. It is one of many [web analytics tools](https://en.wikipedia.org/wiki/Web_analytics). [Adobe Analytics](https://business.adobe.com/products/analytics/adobe-analytics.html) and [Hubspot Analytics](https://www.hubspot.com/products/marketing/analytics) are example competitors to Google Analytics.\n\nGoogle Analytics is by far the most popular web analytics tool. Currently, Google's is used by [56.8% of all websites and 34.3% of sites don't use any analytics tools](https://w3techs.com/technologies/overview/traffic_analysis).\n\nThe popularity stems from the power and ease of setup. Google Analytics offers a plethora of detail about users. The core features entail measuring the number of site visitors, sessions, and duration spent on the site. It can also measure more advanced metrics like [bounce rate](https://en.wikipedia.org/wiki/Bounce_rate).\n\n![Screenshot of Google Analytics Dashboard](https://cdn.hashnode.com/res/hashnode/image/upload/v1642460576202/HFo5mCzQo.png)\n\nBest of all, it's totally free :). If you want to learn more about the many features, Google offers an [academy](https://analytics.google.com/analytics/academy/) to help you learn.\n\n![Google Analytics logo](https://cdn.hashnode.com/res/hashnode/image/upload/v1642610354180/qN6iUPnjlZ.png)\n\n## Why is analytics important?\n\nEvery content creator wants to know how their work is being received by the community. However, understanding your readers can be like staring into a void. Without proper intelligence, it is impossible to know what content is gaining traction and where you should focus your creativity.\n\n![Question mark expressing confusion](https://cdn.hashnode.com/res/hashnode/image/upload/v1642612918070/RnsbIYL6v.jpeg)\n\nPhoto by [Emily Morter](https://unsplash.com/@emilymorter?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/s/photos/confusion?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)\n\nMonitoring your website [traffic](https://en.wikipedia.org/wiki/Web_traffic) can be a helpful way of understanding your reader. Suppose you write an article about making chocolate chip cookies. You've been eating your chocolate chip cookies for years so you think they are nothing special. However, your readers think your chocolate chip cookies are the greatest thing since sliced bread!\n\nWithout proper analytics, knowing your audience loves your chocolate chip cookies would be impossible and you wouldn't be able to tune future content. At that point, you would **miss out on engaging future readers**.\n\nIf you measure your blog traffic with a tool like [Google Analytics](https://analytics.google.com), you could see how readers love your chocolate chip cookie article and write more great content about your cookies and baked goods.\n\n![Drawn graph of analytics](https://cdn.hashnode.com/res/hashnode/image/upload/v1642612342685/Ne-vJ8EUS.jpeg)\n\nPhoto by [Isaac Smith](https://unsplash.com/@isaacmsmith?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/s/photos/analytics?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)\n\n## How do you create a Google Analytics account?\n\n1. Open [Google Analytics](https://analytics.google.com) and log in using a Gmail account. \n2. First, you must set up your account. The account name can be anything you like and you can track multiple sites with one account. ![Google Analytics account set up](https://cdn.hashnode.com/res/hashnode/image/upload/v1642460494431/l-mdy5E9S.png)\n3. Next is setting up a property. A property is [equivalent](https://support.google.com/analytics/answer/1009618?hl=en#zippy=%2Cin-this-article) to a site that you want to track. A single account can track multiple properties. To set up a property, enter the title of your website in the _property name_ field.\n4. Recently Google has migrated from [Universal Analytics (UA)](https://support.google.com/analytics/answer/2790010?hl=en) to a newer version, [Google Analytics 4](https://support.google.com/analytics/answer/10089681?hl=en). The differences are [complex](https://support.google.com/analytics/answer/9964640?hl=en#zippy=%2Cin-this-article), but core functionality is the same. For blogging, UA offers great features so for simplicity, this tutorial will focus on adding a Universal Analytics property. A GA4 property can be [added to UA property later](https://support.google.com/analytics/answer/9744165?hl=en) if necessary. To create a Universal Analytics property click on show advanced options (highlighted with an arrow below). ![Property set up in Google Analytics](https://cdn.hashnode.com/res/hashnode/image/upload/v1642460395440/bRXKAWppI.png)\n5. Provide the URL of your blog. ![Provide URL to Google Analytics](https://cdn.hashnode.com/res/hashnode/image/upload/v1642611130333/JaWCouIEl.png)\n6. Provide some basic information about your blog and what you will be using Google Analytics for. ![Property information in Google Analytics](https://cdn.hashnode.com/res/hashnode/image/upload/v1642611139825/uen-1I1a7.png)\n7. If you blog using Hashnode, check out this dedicated [Hashnode tutorial](https://dev.to/scc33/how-to-add-google-analytics-to-your-hashnode-blog-275p). Otherwise, if you maintain your own blog, copy the chunk of code provided by Google Analytics. ![Tagging code chunk](https://cdn.hashnode.com/res/hashnode/image/upload/v1642610949938/Ams5d108j.png) \n8. On every page of your blog copy and paste the Google Analytics code chunk inside the `\u003chead\u003e` tags. After adding to the source code, deploy the updated site. ![Example of site in deployment](https://cdn.hashnode.com/res/hashnode/image/upload/v1642614525272/MKsFIFDQR.png)\n9. Now you can open Google Analytics and you will start to see traffic data appearing as users visit your blog.\n\nThat's it! Enjoy all the fantastic new data and use it to keep making your great content.\n\n![Celebrating because analytics is deployed](https://cdn.hashnode.com/res/hashnode/image/upload/v1642614597125/PIKwVfx4J.jpeg)Photo by [Hybrid](https://unsplash.com/@artbyhybrid?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/s/photos/happy?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)","cached_tag_list":"analytics, google, tutorial","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"What is Google Analytics?   Google Analytics was launched in 2005 as a tool for reporting...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/why-you-should-track-your-blog-traffic-with-google-analytics-2nc6","public_reactions_count":6,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"what-is-google-analytics\" href=\"#what-is-google-analytics\"\u003e\n  \u003c/a\u003e\n  What is Google Analytics?\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://analytics.google.com\"\u003eGoogle Analytics\u003c/a\u003e was \u003ca href=\"https://en.wikipedia.org/wiki/Google_Analytics\"\u003elaunched in 2005\u003c/a\u003e as a tool for reporting web traffic. It is one of many \u003ca href=\"https://en.wikipedia.org/wiki/Web_analytics\"\u003eweb analytics tools\u003c/a\u003e. \u003ca href=\"https://business.adobe.com/products/analytics/adobe-analytics.html\"\u003eAdobe Analytics\u003c/a\u003e and \u003ca href=\"https://www.hubspot.com/products/marketing/analytics\"\u003eHubspot Analytics\u003c/a\u003e are example competitors to Google Analytics.\u003c/p\u003e\n\n\u003cp\u003eGoogle Analytics is by far the most popular web analytics tool. Currently, Google's is used by \u003ca href=\"https://w3techs.com/technologies/overview/traffic_analysis\"\u003e56.8% of all websites and 34.3% of sites don't use any analytics tools\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe popularity stems from the power and ease of setup. Google Analytics offers a plethora of detail about users. The core features entail measuring the number of site visitors, sessions, and duration spent on the site. It can also measure more advanced metrics like \u003ca href=\"https://en.wikipedia.org/wiki/Bounce_rate\"\u003ebounce rate\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--pFm27WQp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642460576202/HFo5mCzQo.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--pFm27WQp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642460576202/HFo5mCzQo.png\" alt=\"Screenshot of Google Analytics Dashboard\" loading=\"lazy\" width=\"800\" height=\"257\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eBest of all, it's totally free :). If you want to learn more about the many features, Google offers an \u003ca href=\"https://analytics.google.com/analytics/academy/\"\u003eacademy\u003c/a\u003e to help you learn.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--eZD0tcju--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642610354180/qN6iUPnjlZ.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--eZD0tcju--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642610354180/qN6iUPnjlZ.png\" alt=\"Google Analytics logo\" loading=\"lazy\" width=\"800\" height=\"257\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"why-is-analytics-important\" href=\"#why-is-analytics-important\"\u003e\n  \u003c/a\u003e\n  Why is analytics important?\n\u003c/h2\u003e\n\n\u003cp\u003eEvery content creator wants to know how their work is being received by the community. However, understanding your readers can be like staring into a void. Without proper intelligence, it is impossible to know what content is gaining traction and where you should focus your creativity.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--VWrsPZW3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642612918070/RnsbIYL6v.jpeg\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--VWrsPZW3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642612918070/RnsbIYL6v.jpeg\" alt=\"Question mark expressing confusion\" loading=\"lazy\" width=\"800\" height=\"533\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003ePhoto by \u003ca href=\"https://unsplash.com/@emilymorter?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eEmily Morter\u003c/a\u003e on \u003ca href=\"https://unsplash.com/s/photos/confusion?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eMonitoring your website \u003ca href=\"https://en.wikipedia.org/wiki/Web_traffic\"\u003etraffic\u003c/a\u003e can be a helpful way of understanding your reader. Suppose you write an article about making chocolate chip cookies. You've been eating your chocolate chip cookies for years so you think they are nothing special. However, your readers think your chocolate chip cookies are the greatest thing since sliced bread!\u003c/p\u003e\n\n\u003cp\u003eWithout proper analytics, knowing your audience loves your chocolate chip cookies would be impossible and you wouldn't be able to tune future content. At that point, you would \u003cstrong\u003emiss out on engaging future readers\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf you measure your blog traffic with a tool like \u003ca href=\"https://analytics.google.com\"\u003eGoogle Analytics\u003c/a\u003e, you could see how readers love your chocolate chip cookie article and write more great content about your cookies and baked goods.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--uV2vRKzH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642612342685/Ne-vJ8EUS.jpeg\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--uV2vRKzH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642612342685/Ne-vJ8EUS.jpeg\" alt=\"Drawn graph of analytics\" loading=\"lazy\" width=\"800\" height=\"533\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003ePhoto by \u003ca href=\"https://unsplash.com/@isaacmsmith?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eIsaac Smith\u003c/a\u003e on \u003ca href=\"https://unsplash.com/s/photos/analytics?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"how-do-you-create-a-google-analytics-account\" href=\"#how-do-you-create-a-google-analytics-account\"\u003e\n  \u003c/a\u003e\n  How do you create a Google Analytics account?\n\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003eOpen \u003ca href=\"https://analytics.google.com\"\u003eGoogle Analytics\u003c/a\u003e and log in using a Gmail account. \u003c/li\u003e\n\u003cli\u003eFirst, you must set up your account. The account name can be anything you like and you can track multiple sites with one account. \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--PWtZqbwa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642460494431/l-mdy5E9S.png\" alt=\"Google Analytics account set up\" loading=\"lazy\" width=\"800\" height=\"543\"\u003e\n\u003c/li\u003e\n\u003cli\u003eNext is setting up a property. A property is \u003ca href=\"https://support.google.com/analytics/answer/1009618?hl=en#zippy=%2Cin-this-article\"\u003eequivalent\u003c/a\u003e to a site that you want to track. A single account can track multiple properties. To set up a property, enter the title of your website in the \u003cem\u003eproperty name\u003c/em\u003e field.\u003c/li\u003e\n\u003cli\u003eRecently Google has migrated from \u003ca href=\"https://support.google.com/analytics/answer/2790010?hl=en\"\u003eUniversal Analytics (UA)\u003c/a\u003e to a newer version, \u003ca href=\"https://support.google.com/analytics/answer/10089681?hl=en\"\u003eGoogle Analytics 4\u003c/a\u003e. The differences are \u003ca href=\"https://support.google.com/analytics/answer/9964640?hl=en#zippy=%2Cin-this-article\"\u003ecomplex\u003c/a\u003e, but core functionality is the same. For blogging, UA offers great features so for simplicity, this tutorial will focus on adding a Universal Analytics property. A GA4 property can be \u003ca href=\"https://support.google.com/analytics/answer/9744165?hl=en\"\u003eadded to UA property later\u003c/a\u003e if necessary. To create a Universal Analytics property click on show advanced options (highlighted with an arrow below). \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--l6XQZ2Pm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642460395440/bRXKAWppI.png\" alt=\"Property set up in Google Analytics\" loading=\"lazy\" width=\"800\" height=\"354\"\u003e\n\u003c/li\u003e\n\u003cli\u003eProvide the URL of your blog. \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--KEXTHfdX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642611130333/JaWCouIEl.png\" alt=\"Provide URL to Google Analytics\" loading=\"lazy\" width=\"800\" height=\"262\"\u003e\n\u003c/li\u003e\n\u003cli\u003eProvide some basic information about your blog and what you will be using Google Analytics for. \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--x1QVLtCV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642611139825/uen-1I1a7.png\" alt=\"Property information in Google Analytics\" loading=\"lazy\" width=\"800\" height=\"461\"\u003e\n\u003c/li\u003e\n\u003cli\u003eIf you blog using Hashnode, check out this dedicated \u003ca href=\"https://dev.to/scc33/how-to-add-google-analytics-to-your-hashnode-blog-275p\"\u003eHashnode tutorial\u003c/a\u003e. Otherwise, if you maintain your own blog, copy the chunk of code provided by Google Analytics. \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--llqWQFpO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642610949938/Ams5d108j.png\" alt=\"Tagging code chunk\" loading=\"lazy\" width=\"800\" height=\"211\"\u003e \u003c/li\u003e\n\u003cli\u003eOn every page of your blog copy and paste the Google Analytics code chunk inside the \u003ccode\u003e\u0026lt;head\u0026gt;\u003c/code\u003e tags. After adding to the source code, deploy the updated site. \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ThvfU_22--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642614525272/MKsFIFDQR.png\" alt=\"Example of site in deployment\" loading=\"lazy\" width=\"701\" height=\"211\"\u003e\n\u003c/li\u003e\n\u003cli\u003eNow you can open Google Analytics and you will start to see traffic data appearing as users visit your blog.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThat's it! Enjoy all the fantastic new data and use it to keep making your great content.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--LSYB_5hx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642614597125/PIKwVfx4J.jpeg\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--LSYB_5hx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642614597125/PIKwVfx4J.jpeg\" alt=\"Celebrating because analytics is deployed\" loading=\"lazy\" width=\"800\" height=\"533\"\u003e\u003c/a\u003ePhoto by \u003ca href=\"https://unsplash.com/@artbyhybrid?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eHybrid\u003c/a\u003e on \u003ca href=\"https://unsplash.com/s/photos/happy?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"why-you-should-track-your-blog-traffic-with-google-analytics-2nc6","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z2pgfqur3e0dac5t5mt7.png","title":"Why you Should Track Your Blog Traffic with Google Analytics","video":null,"video_code":null},{"created_at":"2022-01-19T21:16:20.853Z","crossposted_at":"2022-01-19T21:17:03.263Z","edited_at":null,"last_comment_at":"2024-02-24T16:17:46.726Z","published_at":"2022-01-19T21:15:17.000Z","canonical_url":"https://blog.seancoughlin.me/how-to-repost-hashnode-articles-on-devto","feed_source_url":"https://blog.seancoughlin.me/how-to-repost-hashnode-articles-on-devto","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: How to Repost Hashnode Articles on Dev.to\npublished: true\ndate: 2022-01-19 21:15:17 UTC\ntags: #blogging #hashnode #tutorial\ncanonical_url: https://blog.seancoughlin.me/how-to-repost-hashnode-articles-on-devto\n---\n\nI started my writing journey on Hashnode, but I've been wanting to expand my audience by widely publishing articles across the interwebs. I discovered [dev.to](https://dev.to) as another great platform to share developer-related content.\n\n![dev.to screenshot](https://cdn.hashnode.com/res/hashnode/image/upload/v1642625185890/VXeU-iq6p.png)\n\nDev.to has dedicated support for posting to the community from [RSS](https://en.wikipedia.org/wiki/RSS). Additionally, dev.to supports canonical linking to protect SEO rankings. Luckily, Hashnode provides an RSS feed so republishing content from Hashnode onto dev.to is easy and fast.\n\nYou can find your Hashnode RSS feed at `https://[your-blog-url]/rss.xml`. For example, my feed is at [blog.seancoughlin.me/rss.xml](https://blog.seancoughlin.me/rss.xml). You can also find it linked on your blog page. See the arrow in the screenshot below for the location.\n\n![Hashnode RSS location](https://cdn.hashnode.com/res/hashnode/image/upload/v1642625917019/9pWwKNFWu.png)\n\nAfter creating a dev.to account, open the settings and head to the Extensions tab. Under the Extensions tab, you will find _Publishing to DEV Community from RSS_. Simply copy your Hashnode RSS feed into the _RSS Feed URL_ field and hit _Save Feed Settings_. After a few seconds, your Hashnode articles will appear as drafts in the dev.to dashboard.\n\n![Publishing to dev.to from RSS](https://cdn.hashnode.com/res/hashnode/image/upload/v1642625258250/PXcdU0z6w.png)\n\nTo publish an article you will need to click edit and then change the `published: false` field to be true.\n\n![Published field](https://cdn.hashnode.com/res/hashnode/image/upload/v1642625279327/xZ8_exRaOW.png)\n\nThat's it! Now your articles will be hosted on dev.to in addition to Hashnode.\n\n![Celebrating a successful republishing](https://cdn.hashnode.com/res/hashnode/image/upload/v1642626312677/0dM_6PY1B.jpeg)\n\nPhoto by [Universal Eye](https://unsplash.com/@universaleye?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/s/photos/celebrate?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)","cached_tag_list":"blogging, hashnode, tutorial","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":4,"description":"I started my writing journey on Hashnode, but I've been wanting to expand my audience by widely...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/how-to-repost-hashnode-articles-on-devto-2gi7","public_reactions_count":21,"processed_html":"\u003cp\u003eI started my writing journey on Hashnode, but I've been wanting to expand my audience by widely publishing articles across the interwebs. I discovered \u003ca href=\"https://dev.to\"\u003edev.to\u003c/a\u003e as another great platform to share developer-related content.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--iHuBRq9f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642625185890/VXeU-iq6p.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--iHuBRq9f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642625185890/VXeU-iq6p.png\" alt=\"dev.to screenshot\" loading=\"lazy\" width=\"800\" height=\"497\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eDev.to has dedicated support for posting to the community from \u003ca href=\"https://en.wikipedia.org/wiki/RSS\"\u003eRSS\u003c/a\u003e. Additionally, dev.to supports canonical linking to protect SEO rankings. Luckily, Hashnode provides an RSS feed so republishing content from Hashnode onto dev.to is easy and fast.\u003c/p\u003e\n\n\u003cp\u003eYou can find your Hashnode RSS feed at \u003ccode\u003ehttps://[your-blog-url]/rss.xml\u003c/code\u003e. For example, my feed is at \u003ca href=\"https://blog.seancoughlin.me/rss.xml\"\u003eblog.seancoughlin.me/rss.xml\u003c/a\u003e. You can also find it linked on your blog page. See the arrow in the screenshot below for the location.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--DWN5Fjs---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642625917019/9pWwKNFWu.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--DWN5Fjs---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642625917019/9pWwKNFWu.png\" alt=\"Hashnode RSS location\" loading=\"lazy\" width=\"800\" height=\"81\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eAfter creating a dev.to account, open the settings and head to the Extensions tab. Under the Extensions tab, you will find \u003cem\u003ePublishing to DEV Community from RSS\u003c/em\u003e. Simply copy your Hashnode RSS feed into the \u003cem\u003eRSS Feed URL\u003c/em\u003e field and hit \u003cem\u003eSave Feed Settings\u003c/em\u003e. After a few seconds, your Hashnode articles will appear as drafts in the dev.to dashboard.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--pnHDrNtO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642625258250/PXcdU0z6w.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--pnHDrNtO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642625258250/PXcdU0z6w.png\" alt=\"Publishing to dev.to from RSS\" loading=\"lazy\" width=\"754\" height=\"811\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eTo publish an article you will need to click edit and then change the \u003ccode\u003epublished: false\u003c/code\u003e field to be true.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--AkaQ592R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642625279327/xZ8_exRaOW.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--AkaQ592R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642625279327/xZ8_exRaOW.png\" alt=\"Published field\" loading=\"lazy\" width=\"730\" height=\"612\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThat's it! Now your articles will be hosted on dev.to in addition to Hashnode.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GksbMG9O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642626312677/0dM_6PY1B.jpeg\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GksbMG9O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642626312677/0dM_6PY1B.jpeg\" alt=\"Celebrating a successful republishing\" loading=\"lazy\" width=\"800\" height=\"450\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003ePhoto by \u003ca href=\"https://unsplash.com/@universaleye?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUniversal Eye\u003c/a\u003e on \u003ca href=\"https://unsplash.com/s/photos/celebrate?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"how-to-repost-hashnode-articles-on-devto-2gi7","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/73e70gw2dzd5d4ekxngl.png","title":"How to Repost Hashnode Articles on Dev.to","video":null,"video_code":null},{"created_at":"2022-01-23T20:24:25.272Z","crossposted_at":"2022-01-23T20:25:43.294Z","edited_at":null,"last_comment_at":"2022-01-23T20:21:04.000Z","published_at":"2022-01-23T20:21:04.000Z","canonical_url":"https://blog.seancoughlin.me/how-to-host-a-site-with-a-subdomain-on-github-pages","feed_source_url":"https://blog.seancoughlin.me/how-to-host-a-site-with-a-subdomain-on-github-pages","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: How to Host a Site With a Subdomain on GitHub Pages\npublished: true\ndate: 2022-01-23 20:21:04 UTC\ntags: #tutorial #github #webdev #githubpages\ncanonical_url: https://blog.seancoughlin.me/how-to-host-a-site-with-a-subdomain-on-github-pages\n---\n\n## Subdomain Background\n\nHave you ever noticed some websites [www.seancoughlin.me](http://www.seancoughlin.me), [link.seancoughlin.me](https://link.seancoughlin.me), or [blog.seancoughlin.me](https://blog.seancoughlin.me) have extra text at the front? The first bit of all of these is called a **subdomain**. [Subdomains](https://en.wikipedia.org/wiki/Subdomain) are domains that are a part of other domain names. They can be helpful ways of organizing sites and are easier to remember for users.\n\nGitHub Pages has great support for free website hosting but creates new pages as `[username].github.io/example-page` by default. Subdomains are a great way to make the URL easier to understand.\n\n## GitHub Pages Subdomain Tutorial\n\n_Note: this tutorial assumes you already have a custom domain setup._ Check [GitHub Pages documentation](https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/about-custom-domains-and-github-pages) to setup your custom subdomain.\n\nFirst, open your domain name provider and add a CNAME record. A CNAME is an alias for another URL. In the CNAME, add your desired subdomain as the host and username.github.io. as the target. Note the _extra dot_ after the end of io. For this tutorial, [Namecheap](https://www.namecheap.com) was my domain name registrar. Creating a CNAME record will look different depending on your domain name provider.\n\n![CNAME record example](https://cdn.hashnode.com/res/hashnode/image/upload/v1642965712201/mGdUHkY8qK.png)\n\nYou will be able to see the new subdomain propagate across the world with a tool like https://www.whatsmydns.net.\n\n![DNS propogation](https://cdn.hashnode.com/res/hashnode/image/upload/v1642964303128/tO9DEiSvN.png)\n\nWe now need to tell GitHub to host our site at the subdomain we just created. Open the repository you would like to host at a subdomain and head to the Pages tab in settings. Select your source branch and type your subdomain in the custom domain field.\n\n![Pages in settings](https://cdn.hashnode.com/res/hashnode/image/upload/v1642963983042/kg18uFXlf.png)\n\nInitially, GitHub Pages will throw an error saying the domain name is \"improperly configured.\" This error should resolve itself after a few minutes as the DNS records update. If the error doesn't go away, try editing the custom domain, clicking save, then reverting to your desired custom subdomain. Editing the custom domain will trigger GitHub Pages to recheck the DNS records.\n\n![Add subdomain to GitHub Pages](https://cdn.hashnode.com/res/hashnode/image/upload/v1642964231106/D9ZmQQBgZ.png)\n\nOnce GitHub Pages has verified the DNS records, the website will be live at an HTTP link. Now Pages will automatically certify the site to create a secure HTTPS version. The process completes after a few minutes.\n\n![Certifying for HTTPS](https://cdn.hashnode.com/res/hashnode/image/upload/v1642964687361/c_plKr6qZ.png)\n\nThat's it! Your Pages site is hosted at your custom subdomain.\n\n![Complete subdomain in GitHub pages](https://cdn.hashnode.com/res/hashnode/image/upload/v1642966048549/gM7AIJlu7.png)","cached_tag_list":"tutorial, github, webdev, githubpages","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Subdomain Background   Have you ever noticed some websites www.seancoughlin.me,...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/how-to-host-a-site-with-a-subdomain-on-github-pages-5a1j","public_reactions_count":9,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"subdomain-background\" href=\"#subdomain-background\"\u003e\n  \u003c/a\u003e\n  Subdomain Background\n\u003c/h2\u003e\n\n\u003cp\u003eHave you ever noticed some websites \u003ca href=\"http://www.seancoughlin.me\"\u003ewww.seancoughlin.me\u003c/a\u003e, \u003ca href=\"https://link.seancoughlin.me\"\u003elink.seancoughlin.me\u003c/a\u003e, or \u003ca href=\"https://blog.seancoughlin.me\"\u003eblog.seancoughlin.me\u003c/a\u003e have extra text at the front? The first bit of all of these is called a \u003cstrong\u003esubdomain\u003c/strong\u003e. \u003ca href=\"https://en.wikipedia.org/wiki/Subdomain\"\u003eSubdomains\u003c/a\u003e are domains that are a part of other domain names. They can be helpful ways of organizing sites and are easier to remember for users.\u003c/p\u003e\n\n\u003cp\u003eGitHub Pages has great support for free website hosting but creates new pages as \u003ccode\u003e[username].github.io/example-page\u003c/code\u003e by default. Subdomains are a great way to make the URL easier to understand.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"github-pages-subdomain-tutorial\" href=\"#github-pages-subdomain-tutorial\"\u003e\n  \u003c/a\u003e\n  GitHub Pages Subdomain Tutorial\n\u003c/h2\u003e\n\n\u003cp\u003e\u003cem\u003eNote: this tutorial assumes you already have a custom domain setup.\u003c/em\u003e Check \u003ca href=\"https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/about-custom-domains-and-github-pages\"\u003eGitHub Pages documentation\u003c/a\u003e to setup your custom subdomain.\u003c/p\u003e\n\n\u003cp\u003eFirst, open your domain name provider and add a CNAME record. A CNAME is an alias for another URL. In the CNAME, add your desired subdomain as the host and username.github.io. as the target. Note the \u003cem\u003eextra dot\u003c/em\u003e after the end of io. For this tutorial, \u003ca href=\"https://www.namecheap.com\"\u003eNamecheap\u003c/a\u003e was my domain name registrar. Creating a CNAME record will look different depending on your domain name provider.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--aY-dSJUk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642965712201/mGdUHkY8qK.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--aY-dSJUk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642965712201/mGdUHkY8qK.png\" alt=\"CNAME record example\" loading=\"lazy\" width=\"800\" height=\"43\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eYou will be able to see the new subdomain propagate across the world with a tool like \u003ca href=\"https://www.whatsmydns.net\"\u003ehttps://www.whatsmydns.net\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ZzucIhx8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642964303128/tO9DEiSvN.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ZzucIhx8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642964303128/tO9DEiSvN.png\" alt=\"DNS propogation\" loading=\"lazy\" width=\"800\" height=\"1143\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eWe now need to tell GitHub to host our site at the subdomain we just created. Open the repository you would like to host at a subdomain and head to the Pages tab in settings. Select your source branch and type your subdomain in the custom domain field.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--nM8LiK8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642963983042/kg18uFXlf.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--nM8LiK8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642963983042/kg18uFXlf.png\" alt=\"Pages in settings\" loading=\"lazy\" width=\"628\" height=\"1336\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eInitially, GitHub Pages will throw an error saying the domain name is \"improperly configured.\" This error should resolve itself after a few minutes as the DNS records update. If the error doesn't go away, try editing the custom domain, clicking save, then reverting to your desired custom subdomain. Editing the custom domain will trigger GitHub Pages to recheck the DNS records.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--octpIccH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642964231106/D9ZmQQBgZ.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--octpIccH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642964231106/D9ZmQQBgZ.png\" alt=\"Add subdomain to GitHub Pages\" loading=\"lazy\" width=\"800\" height=\"639\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eOnce GitHub Pages has verified the DNS records, the website will be live at an HTTP link. Now Pages will automatically certify the site to create a secure HTTPS version. The process completes after a few minutes.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--C16LfAbu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642964687361/c_plKr6qZ.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--C16LfAbu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642964687361/c_plKr6qZ.png\" alt=\"Certifying for HTTPS\" loading=\"lazy\" width=\"800\" height=\"130\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThat's it! Your Pages site is hosted at your custom subdomain.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--iTGiSts4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642966048549/gM7AIJlu7.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--iTGiSts4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1642966048549/gM7AIJlu7.png\" alt=\"Complete subdomain in GitHub pages\" loading=\"lazy\" width=\"800\" height=\"226\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"how-to-host-a-site-with-a-subdomain-on-github-pages-5a1j","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t1ukp8kiq3v6txa5f9tr.png","title":"How to Host a Site With a Subdomain on GitHub Pages","video":null,"video_code":null},{"created_at":"2022-01-26T01:30:24.885Z","crossposted_at":"2022-01-26T01:31:16.897Z","edited_at":null,"last_comment_at":"2022-01-26T01:27:15.000Z","published_at":"2022-01-26T01:27:15.000Z","canonical_url":"https://blog.seancoughlin.me/how-the-metaverse-could-change-the-world-forever-or-how-it-could-be-the-next-technological-flop","feed_source_url":"https://blog.seancoughlin.me/how-the-metaverse-could-change-the-world-forever-or-how-it-could-be-the-next-technological-flop","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: How The Metaverse Could Change The World Forever or How It Could Be The Next Technological Flop\npublished: true\ndate: 2022-01-26 01:27:15 UTC\ntags: #technolgy #metaverse #future\ncanonical_url: https://blog.seancoughlin.me/how-the-metaverse-could-change-the-world-forever-or-how-it-could-be-the-next-technological-flop\n---\n\nFirst was the personal computer revolution, followed by the evolution of mobile computing. It's predicted the next technological frontier could be an entire digital universe dubbed the metaverse. Powered by advanced computing and virtual reality, we could experience digital lives similar to video games inside the metaverse. This sounds far-fetched, so is it endless possibilities or all hype? Here are some ideas for how the metaverse could change the world and some ways that it could all be smoke and mirrors.\n\n## What is the metaverse?\n\nThe term [metaverse](https://en.wikipedia.org/wiki/Metaverse) was coined by Neal Stephenson in his 1992 science fiction novel _[Snow Crash](https://en.wikipedia.org/wiki/Snow_Crash)_. Since it has been depicted in other science fiction works like _[Ready Player One](https://en.wikipedia.org/wiki/Ready_Player_One)_ and _[The Matrix](https://en.wikipedia.org/wiki/The_Matrix)_.\n\nThe metaverse is conceived as a digital world built on top of the internet. The idea is that people would create and inhabit digital worlds and interact with them as if they were the physical world. Currently, we consume the internet via screens. The metaverse would be an entirely immersive experience where you felt like you were inside of a new world.\n\nFor most people, the idea of a virtual world is still just a novelty or a gimmick. But for futurists and technologists, the metaverse will be the next big thing.\n\n![Girl standing in Digital stream](https://cdn.hashnode.com/res/hashnode/image/upload/v1643157575077/V-_XyMjOh.jpeg)\n\nPhoto by [mahdis mousavi](https://unsplash.com/@dissii?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/s/photos/virtual?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)\n\n## The technology behind the metaverse\n\nThere are three components needed to make the metaverse work:\n\n- Advanced computing power would allow for believable simulations indistinguishable from physical reality. \n- Virtual reality headsets with high-resolution displays could project digital worlds in real-time and transport our minds into new environments.\n- Software that knits the entire experience together creating the [killer app](https://en.wikipedia.org/wiki/Killer_application) that makes everyone want to join.\n\nThe largest companies in the world are working on bringing each of these pieces to market. Nvidia and AMD are using cutting-edge transistor technology from TSMC to build fast GPUs to power the visual experience. Meta's Oculus, Microsofts HoloLens, and Apple's rumored VR headset are racing to market. Finally, Meta has laid _[10 billion dollars](https://www.theverge.com/2021/10/25/22745381/facebook-reality-labs-10-billion-metaverse)_ out to build the needed software.\n\n## How the metaverse could change the world\n\nImagine being able to go anywhere at any time, do anything at any time, with anyone you want? You could have different lives or experiences without ever leaving your home. You could escape your hectic life by living in a fantasy world instead of dealing with life offline. This type of technology has limitless potential for personal growth and development. It could be used for fun or for therapeutic purposes, which would help so many people get through their day-to-day struggles.\n\nSome people may look at the metaverse and think it's just a bunch of computer graphics and sounds, but that couldn't be farther from the truth. The metaverse has the potential to change our world in many ways. Imagine being able to exist in a virtual world while also living in the real one. We could work inside the digital universe and travel to different planets without leaving home. We could even visit distant friends without spending any time on airplanes or worrying about traffic. It would allow us to live multiple lives in different worlds at once if we wanted to, letting us explore new places, meet new people, or live out our dreams.\n\n![Using VR to play sports](https://cdn.hashnode.com/res/hashnode/image/upload/v1643157615525/Amp_qaew9.jpeg)\n\nPhoto by [Martin Sanchez](https://unsplash.com/@zekedrone?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/s/photos/virtual?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)\n\n## Is the metaverse all hype?\n\nIn the early nineties, the internet was a new and exciting thing. We all wanted to believe that it would change our lives and make things easier. However, most of the promise of the internet materialized over multiple decades. The early hype of the internet even caused a crash in the stock market known as the [dot-com bubble](https://en.wikipedia.org/wiki/Dot-com_bubble). The metaverse is likely to follow a similar trend.\n\nI'm not saying I don't think there's potential in the metaverse. I'm just not convinced that it will be groundbreaking enough to change the world immediately. Additionally, the promise of a wholly digital world raises a legion of questions.\n\n- Is this just another way for companies to make money off of us by inserting themselves into this digital world? \n- And if we did enter a digital world, what would happen when we need to come back? \n- Will we have been disconnected from reality so much that we can't function in real life anymore?\n- Would there be adverse outcomes for children who spent too much time in the metaverse?\n- _Finally, does anyone actually want to live their lives in a place that doesn't exist?_\n\nWe should take a step back and really think about how the metaverse could change everything before jumping headfirst into it without fully understanding what could be on the other side.\n\n![Child wearing VR](https://cdn.hashnode.com/res/hashnode/image/upload/v1643157669816/XsENR0bd1.jpeg)\n\nPhoto by [Jessica Lewis](https://unsplash.com/@thepaintedsquare?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/s/photos/virtual?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)\n\n## Conclusion\n\nThe concept of the metaverse is a new and exciting one. It certainly does have the potential to change the world, but it’s hard to know what the future holds. The best we can do is make predictions based on what we have experienced.\n\nThe internet went through an exuberance phase in the 90s, followed by a bursting bubble and eventually a plateau of usefulness after. I think it's likely is the metaverse takes a trajectory similar to the internet. Eventually, I believe there will be more virtual events, but we won't ever live entirely digital lives.\n\nWhat do you think? Will the metaverse be a success or a flop?","cached_tag_list":"technolgy, metaverse, future","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"First was the personal computer revolution, followed by the evolution of mobile computing. It's...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/how-the-metaverse-could-change-the-world-forever-or-how-it-could-be-the-next-technological-flop-5a6d","public_reactions_count":3,"processed_html":"\u003cp\u003eFirst was the personal computer revolution, followed by the evolution of mobile computing. It's predicted the next technological frontier could be an entire digital universe dubbed the metaverse. Powered by advanced computing and virtual reality, we could experience digital lives similar to video games inside the metaverse. This sounds far-fetched, so is it endless possibilities or all hype? Here are some ideas for how the metaverse could change the world and some ways that it could all be smoke and mirrors.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what-is-the-metaverse\" href=\"#what-is-the-metaverse\"\u003e\n  \u003c/a\u003e\n  What is the metaverse?\n\u003c/h2\u003e\n\n\u003cp\u003eThe term \u003ca href=\"https://en.wikipedia.org/wiki/Metaverse\"\u003emetaverse\u003c/a\u003e was coined by Neal Stephenson in his 1992 science fiction novel \u003cem\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Snow_Crash\"\u003eSnow Crash\u003c/a\u003e\u003c/em\u003e. Since it has been depicted in other science fiction works like \u003cem\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Ready_Player_One\"\u003eReady Player One\u003c/a\u003e\u003c/em\u003e and \u003cem\u003e\u003ca href=\"https://en.wikipedia.org/wiki/The_Matrix\"\u003eThe Matrix\u003c/a\u003e\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe metaverse is conceived as a digital world built on top of the internet. The idea is that people would create and inhabit digital worlds and interact with them as if they were the physical world. Currently, we consume the internet via screens. The metaverse would be an entirely immersive experience where you felt like you were inside of a new world.\u003c/p\u003e\n\n\u003cp\u003eFor most people, the idea of a virtual world is still just a novelty or a gimmick. But for futurists and technologists, the metaverse will be the next big thing.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ub2e4QTQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1643157575077/V-_XyMjOh.jpeg\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ub2e4QTQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1643157575077/V-_XyMjOh.jpeg\" alt=\"Girl standing in Digital stream\" loading=\"lazy\" width=\"800\" height=\"1200\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003ePhoto by \u003ca href=\"https://unsplash.com/@dissii?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003emahdis mousavi\u003c/a\u003e on \u003ca href=\"https://unsplash.com/s/photos/virtual?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"the-technology-behind-the-metaverse\" href=\"#the-technology-behind-the-metaverse\"\u003e\n  \u003c/a\u003e\n  The technology behind the metaverse\n\u003c/h2\u003e\n\n\u003cp\u003eThere are three components needed to make the metaverse work:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAdvanced computing power would allow for believable simulations indistinguishable from physical reality. \u003c/li\u003e\n\u003cli\u003eVirtual reality headsets with high-resolution displays could project digital worlds in real-time and transport our minds into new environments.\u003c/li\u003e\n\u003cli\u003eSoftware that knits the entire experience together creating the \u003ca href=\"https://en.wikipedia.org/wiki/Killer_application\"\u003ekiller app\u003c/a\u003e that makes everyone want to join.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe largest companies in the world are working on bringing each of these pieces to market. Nvidia and AMD are using cutting-edge transistor technology from TSMC to build fast GPUs to power the visual experience. Meta's Oculus, Microsofts HoloLens, and Apple's rumored VR headset are racing to market. Finally, Meta has laid \u003cem\u003e\u003ca href=\"https://www.theverge.com/2021/10/25/22745381/facebook-reality-labs-10-billion-metaverse\"\u003e10 billion dollars\u003c/a\u003e\u003c/em\u003e out to build the needed software.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"how-the-metaverse-could-change-the-world\" href=\"#how-the-metaverse-could-change-the-world\"\u003e\n  \u003c/a\u003e\n  How the metaverse could change the world\n\u003c/h2\u003e\n\n\u003cp\u003eImagine being able to go anywhere at any time, do anything at any time, with anyone you want? You could have different lives or experiences without ever leaving your home. You could escape your hectic life by living in a fantasy world instead of dealing with life offline. This type of technology has limitless potential for personal growth and development. It could be used for fun or for therapeutic purposes, which would help so many people get through their day-to-day struggles.\u003c/p\u003e\n\n\u003cp\u003eSome people may look at the metaverse and think it's just a bunch of computer graphics and sounds, but that couldn't be farther from the truth. The metaverse has the potential to change our world in many ways. Imagine being able to exist in a virtual world while also living in the real one. We could work inside the digital universe and travel to different planets without leaving home. We could even visit distant friends without spending any time on airplanes or worrying about traffic. It would allow us to live multiple lives in different worlds at once if we wanted to, letting us explore new places, meet new people, or live out our dreams.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--gHnmnIKB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1643157615525/Amp_qaew9.jpeg\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--gHnmnIKB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1643157615525/Amp_qaew9.jpeg\" alt=\"Using VR to play sports\" loading=\"lazy\" width=\"800\" height=\"1068\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003ePhoto by \u003ca href=\"https://unsplash.com/@zekedrone?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eMartin Sanchez\u003c/a\u003e on \u003ca href=\"https://unsplash.com/s/photos/virtual?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"is-the-metaverse-all-hype\" href=\"#is-the-metaverse-all-hype\"\u003e\n  \u003c/a\u003e\n  Is the metaverse all hype?\n\u003c/h2\u003e\n\n\u003cp\u003eIn the early nineties, the internet was a new and exciting thing. We all wanted to believe that it would change our lives and make things easier. However, most of the promise of the internet materialized over multiple decades. The early hype of the internet even caused a crash in the stock market known as the \u003ca href=\"https://en.wikipedia.org/wiki/Dot-com_bubble\"\u003edot-com bubble\u003c/a\u003e. The metaverse is likely to follow a similar trend.\u003c/p\u003e\n\n\u003cp\u003eI'm not saying I don't think there's potential in the metaverse. I'm just not convinced that it will be groundbreaking enough to change the world immediately. Additionally, the promise of a wholly digital world raises a legion of questions.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIs this just another way for companies to make money off of us by inserting themselves into this digital world? \u003c/li\u003e\n\u003cli\u003eAnd if we did enter a digital world, what would happen when we need to come back? \u003c/li\u003e\n\u003cli\u003eWill we have been disconnected from reality so much that we can't function in real life anymore?\u003c/li\u003e\n\u003cli\u003eWould there be adverse outcomes for children who spent too much time in the metaverse?\u003c/li\u003e\n\u003cli\u003e\u003cem\u003eFinally, does anyone actually want to live their lives in a place that doesn't exist?\u003c/em\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWe should take a step back and really think about how the metaverse could change everything before jumping headfirst into it without fully understanding what could be on the other side.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--guzfHMOJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1643157669816/XsENR0bd1.jpeg\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--guzfHMOJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1643157669816/XsENR0bd1.jpeg\" alt=\"Child wearing VR\" loading=\"lazy\" width=\"800\" height=\"532\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003ePhoto by \u003ca href=\"https://unsplash.com/@thepaintedsquare?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eJessica Lewis\u003c/a\u003e on \u003ca href=\"https://unsplash.com/s/photos/virtual?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eThe concept of the metaverse is a new and exciting one. It certainly does have the potential to change the world, but it’s hard to know what the future holds. The best we can do is make predictions based on what we have experienced.\u003c/p\u003e\n\n\u003cp\u003eThe internet went through an exuberance phase in the 90s, followed by a bursting bubble and eventually a plateau of usefulness after. I think it's likely is the metaverse takes a trajectory similar to the internet. Eventually, I believe there will be more virtual events, but we won't ever live entirely digital lives.\u003c/p\u003e\n\n\u003cp\u003eWhat do you think? Will the metaverse be a success or a flop?\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"how-the-metaverse-could-change-the-world-forever-or-how-it-could-be-the-next-technological-flop-5a6d","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7dqsi2jqv23p3tedsrqn.png","title":"How The Metaverse Could Change The World Forever or How It Could Be The Next Technological Flop","video":null,"video_code":null},{"created_at":"2022-03-04T23:00:14.821Z","crossposted_at":"2022-03-04T23:01:16.064Z","edited_at":null,"last_comment_at":"2023-02-01T14:00:32.383Z","published_at":"2022-03-04T22:59:01.000Z","canonical_url":"https://sean-coughlin.medium.com/market-yourself-with-a-killer-github-readme-cf529264453","feed_source_url":"https://blog.seancoughlin.me/market-yourself-with-a-killer-github-readme","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Market Yourself With a Killer GitHub Readme\npublished: true\ndate: 2022-03-04 22:59:01 UTC\ntags: GitHub, Branding, Markdown, personal\ncanonical_url: https://sean-coughlin.medium.com/market-yourself-with-a-killer-github-readme-cf529264453\n---\n\nPersonal branding is a tough skill for technically focused individuals. I have found myself inclined to bury my head in an exciting project. However, the oft-overlooked marketing skill is crucial if you want to find a job or have your software grow in popularity.\n\nA key part of building yourself as a software engineer is by growing your eminence within the community. You could contribute to open source projects, tweet about your work, or post to Linkedin. The options for self-promotion are vast, but marketing doesn’t have to be complex.\n\nIt is about telling a story. One easy way of sharing your programming journey is through a GitHub readme page.\n\n[GitHub Profile Readme](https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-profile/customizing-your-profile/managing-your-profile-readme)\n\n## How to Make a GitHub Readme\n\nGitHub readme pages are created when you make a repository with the same name as your username. In the repository, the README.md file controls what your profile will look like.\n\nEditing the repository is done through markdown.\n\nCommon items to list in your readme include:\n\n- a bio\n- things you're currently working on\n- methods of contact\n- your tech stack\n- personal stats\n- links to cool resources or articles you’ve written\n\n![Sean Coughlin's GitHub Readme Profile](https://cdn.hashnode.com/res/hashnode/image/upload/v1646434633864/CeL2zVEhE.png)\n\n## Online Profile Generators\n\nIf maintaining an about page sounds like a lot of work, I understand your position. Thankfully, the internet is a beautiful place. Powerful profile readme generators exist online.\n\n[Online Generator](https://rahuldkjain.github.io/gh-profile-readme-generator/)\n\nYour GitHub readme can act as your resume and the cornerstone of growing your online presence. Plus every edit of the readme counts as a commit. And who doesn’t like racking up commits?","cached_tag_list":"github, branding, markdown, personal","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":1,"description":"Personal branding is a tough skill for technically focused individuals. I have found myself inclined...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/market-yourself-with-a-killer-github-readme-26hk","public_reactions_count":5,"processed_html":"\u003cp\u003ePersonal branding is a tough skill for technically focused individuals. I have found myself inclined to bury my head in an exciting project. However, the oft-overlooked marketing skill is crucial if you want to find a job or have your software grow in popularity.\u003c/p\u003e\n\n\u003cp\u003eA key part of building yourself as a software engineer is by growing your eminence within the community. You could contribute to open source projects, tweet about your work, or post to Linkedin. The options for self-promotion are vast, but marketing doesn’t have to be complex.\u003c/p\u003e\n\n\u003cp\u003eIt is about telling a story. One easy way of sharing your programming journey is through a GitHub readme page.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-profile/customizing-your-profile/managing-your-profile-readme\"\u003eGitHub Profile Readme\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"how-to-make-a-github-readme\" href=\"#how-to-make-a-github-readme\"\u003e\n  \u003c/a\u003e\n  How to Make a GitHub Readme\n\u003c/h2\u003e\n\n\u003cp\u003eGitHub readme pages are created when you make a repository with the same name as your username. In the repository, the README.md file controls what your profile will look like.\u003c/p\u003e\n\n\u003cp\u003eEditing the repository is done through markdown.\u003c/p\u003e\n\n\u003cp\u003eCommon items to list in your readme include:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ea bio\u003c/li\u003e\n\u003cli\u003ethings you're currently working on\u003c/li\u003e\n\u003cli\u003emethods of contact\u003c/li\u003e\n\u003cli\u003eyour tech stack\u003c/li\u003e\n\u003cli\u003epersonal stats\u003c/li\u003e\n\u003cli\u003elinks to cool resources or articles you’ve written\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--t_z8mfU5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1646434633864/CeL2zVEhE.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--t_z8mfU5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1646434633864/CeL2zVEhE.png\" alt=\"Sean Coughlin's GitHub Readme Profile\" loading=\"lazy\" width=\"800\" height=\"1325\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"online-profile-generators\" href=\"#online-profile-generators\"\u003e\n  \u003c/a\u003e\n  Online Profile Generators\n\u003c/h2\u003e\n\n\u003cp\u003eIf maintaining an about page sounds like a lot of work, I understand your position. Thankfully, the internet is a beautiful place. Powerful profile readme generators exist online.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://rahuldkjain.github.io/gh-profile-readme-generator/\"\u003eOnline Generator\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eYour GitHub readme can act as your resume and the cornerstone of growing your online presence. Plus every edit of the readme counts as a commit. And who doesn’t like racking up commits?\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"market-yourself-with-a-killer-github-readme-26hk","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ldzbse7x35zuodnnlw1t.png","title":"Market Yourself With a Killer GitHub Readme","video":null,"video_code":null},{"created_at":"2022-03-24T21:49:23.804Z","crossposted_at":"2022-03-24T21:50:47.236Z","edited_at":null,"last_comment_at":"2022-03-24T21:44:13.000Z","published_at":"2022-03-24T21:44:13.000Z","canonical_url":"https://blog.seancoughlin.me/what-are-microservices","feed_source_url":"https://blog.seancoughlin.me/what-are-microservices","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: What are Microservices?\npublished: true\ndate: 2022-03-24 21:44:13 UTC\ntags: #microservice #tutorial #cloudcomputing #beginner\ncanonical_url: https://blog.seancoughlin.me/what-are-microservices\n---\n\n[Microservices](https://en.wikipedia.org/wiki/Microservices) are a type of software engineering architecture. They are the stand-in replacement for the older architecture known as monolithic.\n\n### The problem with monoliths\n\nA monolith is where one codebase contains the entire program. Since the whole program is within one codebase, it often follows one specific stack and accesses only one database.\n\nThis architecture can work well for individuals or small teams. However, as the amount of code grows, it can quickly become hard for teams to coordinate development. Deployment and testing are also a challenge. Even small changes require the entire application to be rebuilt and redeployed.\n\nMonolith's drawbacks are fixable by changing architectural strategies and creating microservices.\n\n## Microservices\n\nA microservice is a style of architecture where independently deployable codebases work together to form an application.\n\n### A microservices analogy\n\nSay I want to build a cube. I want my cube to be of a specific size and shape. Making a small cube is probably trivial, but what if I need a 100-meter by 100-meter cube. That large size will be difficult to manufacture or transport. Instead of creating one solid piece, I could take a bunch of smaller cubes and put them together. All these smaller cubes put together would look like a Rubik's cube.\n\nNow let's apply our analogy to programming. It would be trivial to build a simple website, but what if that website is Google? That is an enormously challenging problem. We can simplify the problem by breaking it into smaller pieces.\n\nOne of our smaller blocks could handle searching. One block could form the user interface, and one could show advertising, etc. Each of these smaller blocks is called a microservice. While this is a simplified idea of how a complex service like Google operates, the general principle is the same.\n\n### Benefits of microservices\n\n1. Small services are easier to understand and can be owned by a single team. They can also be rewritten quickly if technologies change.\n2. Microservices offer more flexibility because you can choose the right tool for each problem and adopt new technologies as required.\n3. Deploying is lower risk and faster because microservices don't share codebases making them independently deployable. \n4. Scaling is easier and overall the architecture is more adaptable which benefits agile development.\n\n### Drawbacks of microservices\n\n1. Separately monitoring every microservice is challenging. Additional software is required to centralize logs and monitoring.\n2. Setting new developers up to work on the application could be difficult because there are multiple codebases to work on.\n3. Deploying and testing will likely require more automation because there are more points of failure.\n\n### More to learn\n\nThis article is just an overview of microservices. There is so [much more to learn](https://www.ibm.com/cloud/learn/microservices): hosting options, messaging buses, securing network calls, API gateways, and more are all great topics to look into if you are interested in applying microservices to your next project.","cached_tag_list":"microservices, tutorial, cloudcomputing, beginners","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Microservices are a type of software engineering architecture. They are the stand-in replacement for...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/what-are-microservices-21d4","public_reactions_count":9,"processed_html":"\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Microservices\"\u003eMicroservices\u003c/a\u003e are a type of software engineering architecture. They are the stand-in replacement for the older architecture known as monolithic.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"the-problem-with-monoliths\" href=\"#the-problem-with-monoliths\"\u003e\n  \u003c/a\u003e\n  The problem with monoliths\n\u003c/h3\u003e\n\n\u003cp\u003eA monolith is where one codebase contains the entire program. Since the whole program is within one codebase, it often follows one specific stack and accesses only one database.\u003c/p\u003e\n\n\u003cp\u003eThis architecture can work well for individuals or small teams. However, as the amount of code grows, it can quickly become hard for teams to coordinate development. Deployment and testing are also a challenge. Even small changes require the entire application to be rebuilt and redeployed.\u003c/p\u003e\n\n\u003cp\u003eMonolith's drawbacks are fixable by changing architectural strategies and creating microservices.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"microservices\" href=\"#microservices\"\u003e\n  \u003c/a\u003e\n  Microservices\n\u003c/h2\u003e\n\n\u003cp\u003eA microservice is a style of architecture where independently deployable codebases work together to form an application.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"a-microservices-analogy\" href=\"#a-microservices-analogy\"\u003e\n  \u003c/a\u003e\n  A microservices analogy\n\u003c/h3\u003e\n\n\u003cp\u003eSay I want to build a cube. I want my cube to be of a specific size and shape. Making a small cube is probably trivial, but what if I need a 100-meter by 100-meter cube. That large size will be difficult to manufacture or transport. Instead of creating one solid piece, I could take a bunch of smaller cubes and put them together. All these smaller cubes put together would look like a Rubik's cube.\u003c/p\u003e\n\n\u003cp\u003eNow let's apply our analogy to programming. It would be trivial to build a simple website, but what if that website is Google? That is an enormously challenging problem. We can simplify the problem by breaking it into smaller pieces.\u003c/p\u003e\n\n\u003cp\u003eOne of our smaller blocks could handle searching. One block could form the user interface, and one could show advertising, etc. Each of these smaller blocks is called a microservice. While this is a simplified idea of how a complex service like Google operates, the general principle is the same.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"benefits-of-microservices\" href=\"#benefits-of-microservices\"\u003e\n  \u003c/a\u003e\n  Benefits of microservices\n\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003eSmall services are easier to understand and can be owned by a single team. They can also be rewritten quickly if technologies change.\u003c/li\u003e\n\u003cli\u003eMicroservices offer more flexibility because you can choose the right tool for each problem and adopt new technologies as required.\u003c/li\u003e\n\u003cli\u003eDeploying is lower risk and faster because microservices don't share codebases making them independently deployable. \u003c/li\u003e\n\u003cli\u003eScaling is easier and overall the architecture is more adaptable which benefits agile development.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"drawbacks-of-microservices\" href=\"#drawbacks-of-microservices\"\u003e\n  \u003c/a\u003e\n  Drawbacks of microservices\n\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003eSeparately monitoring every microservice is challenging. Additional software is required to centralize logs and monitoring.\u003c/li\u003e\n\u003cli\u003eSetting new developers up to work on the application could be difficult because there are multiple codebases to work on.\u003c/li\u003e\n\u003cli\u003eDeploying and testing will likely require more automation because there are more points of failure.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"more-to-learn\" href=\"#more-to-learn\"\u003e\n  \u003c/a\u003e\n  More to learn\n\u003c/h3\u003e\n\n\u003cp\u003eThis article is just an overview of microservices. There is so \u003ca href=\"https://www.ibm.com/cloud/learn/microservices\"\u003emuch more to learn\u003c/a\u003e: hosting options, messaging buses, securing network calls, API gateways, and more are all great topics to look into if you are interested in applying microservices to your next project.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"what-are-microservices-21d4","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/718i25mt70y1p46omtcs.png","title":"What are Microservices?","video":null,"video_code":null},{"created_at":"2022-03-26T03:20:29.070Z","crossposted_at":"2022-03-26T13:54:09.587Z","edited_at":null,"last_comment_at":"2022-03-26T02:22:34.000Z","published_at":"2022-03-26T02:22:34.000Z","canonical_url":"https://blog.seancoughlin.me/what-is-software-testing","feed_source_url":"https://blog.seancoughlin.me/what-is-software-testing","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: What is software testing?\npublished: true\ndate: 2022-03-26 02:22:34 UTC\ntags: #testing #series #qa\ncanonical_url: https://blog.seancoughlin.me/what-is-software-testing\n---\n\nI started my career with an internship in software quality assurance. Throughout that internship, I learned about the alphabet soup of software testing: TDD, BDD, ATDD, UAT, PT, etc. All of those letters are easy to set your head spinning.\n\nAs my career has progressed I've migrated from quality assurance to software development. I've only seen the importance of good testing practices grow and I use testing tools and frameworks on a daily basis.\n\nIn this series, I will break down the various ways of testing code in short digestible chunks. I'll provide some background and pros and cons of each method.","cached_tag_list":"testing, series, qa","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"I started my career with an internship in software quality assurance. Throughout that internship, I...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/what-is-software-testing-205k","public_reactions_count":4,"processed_html":"\u003cp\u003eI started my career with an internship in software quality assurance. Throughout that internship, I learned about the alphabet soup of software testing: TDD, BDD, ATDD, UAT, PT, etc. All of those letters are easy to set your head spinning.\u003c/p\u003e\n\n\u003cp\u003eAs my career has progressed I've migrated from quality assurance to software development. I've only seen the importance of good testing practices grow and I use testing tools and frameworks on a daily basis.\u003c/p\u003e\n\n\u003cp\u003eIn this series, I will break down the various ways of testing code in short digestible chunks. I'll provide some background and pros and cons of each method.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"what-is-software-testing-205k","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8guch9yrnoayrp500qd0.png","title":"What is software testing?","video":null,"video_code":null},{"created_at":"2022-03-26T03:20:29.245Z","crossposted_at":"2022-03-26T13:54:53.119Z","edited_at":null,"last_comment_at":"2022-03-26T02:28:06.000Z","published_at":"2022-03-26T02:28:06.000Z","canonical_url":"https://blog.seancoughlin.me/what-is-tdd","feed_source_url":"https://blog.seancoughlin.me/what-is-tdd","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: What is TDD?\npublished: true\ndate: 2022-03-26 02:28:06 UTC\ntags: #tdd #tutorial #testing #qa\ncanonical_url: https://blog.seancoughlin.me/what-is-tdd\n---\n\nTest-driven development, or TDD, is a programming style. TDD focuses on improving code by focusing on writing tests first. This is the opposite of typical software development. In most cases, the software is developed first, and test cases are created later.\n\n## The Rules of TDD\n\nThe general principle follows just three steps:\n\n1. Write one unit test describing an aspect of the program. The test should fail upon running because the program lacks the needed feature.\n2. Write the minimal amount of code possible that will solve the test. The goal should be to keep things simple. We only need to make the test pass.\n3. Refactor if necessary to reduce duplicate code or improve quality. Then continue on to repeat the process.\n\n## Benefits of Test-Driven Development\n\n- Test coverage is extremely high because code is written to make test cases pass. This ensures good code quality and keeps defects to a minimum.\n- Writing only the very basics to make a test pass keeps code simple and the design cleaner.\n- Defects are caught earlier because the test cases are already written.\n\n## Cons of TDD\n\n- TDD is a design pattern, so teams can implement TDD differently. Even within teams developers can have various levels of adherence to the principles.\n- TDD can lead to an over-focus on small code chunks and less focus on wider functionality tests.\n- Testing becomes part of the project and maintenance can be high if tests are written too rigidly.\n\n## Further Reading\n\nTDD is closely related to [ATDD](https://en.wikipedia.org/wiki/Acceptance_test%E2%80%93driven_development) or acceptance test-driven development and [BDD](https://en.wikipedia.org/wiki/Behavior-driven_development) or behavior-driven development.","cached_tag_list":"tdd, tutorial, testing, qa","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Test-driven development, or TDD, is a programming style. TDD focuses on improving code by focusing on...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/what-is-tdd-1mi7","public_reactions_count":4,"processed_html":"\u003cp\u003eTest-driven development, or TDD, is a programming style. TDD focuses on improving code by focusing on writing tests first. This is the opposite of typical software development. In most cases, the software is developed first, and test cases are created later.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"the-rules-of-tdd\" href=\"#the-rules-of-tdd\"\u003e\n  \u003c/a\u003e\n  The Rules of TDD\n\u003c/h2\u003e\n\n\u003cp\u003eThe general principle follows just three steps:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWrite one unit test describing an aspect of the program. The test should fail upon running because the program lacks the needed feature.\u003c/li\u003e\n\u003cli\u003eWrite the minimal amount of code possible that will solve the test. The goal should be to keep things simple. We only need to make the test pass.\u003c/li\u003e\n\u003cli\u003eRefactor if necessary to reduce duplicate code or improve quality. Then continue on to repeat the process.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"benefits-of-testdriven-development\" href=\"#benefits-of-testdriven-development\"\u003e\n  \u003c/a\u003e\n  Benefits of Test-Driven Development\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eTest coverage is extremely high because code is written to make test cases pass. This ensures good code quality and keeps defects to a minimum.\u003c/li\u003e\n\u003cli\u003eWriting only the very basics to make a test pass keeps code simple and the design cleaner.\u003c/li\u003e\n\u003cli\u003eDefects are caught earlier because the test cases are already written.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"cons-of-tdd\" href=\"#cons-of-tdd\"\u003e\n  \u003c/a\u003e\n  Cons of TDD\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eTDD is a design pattern, so teams can implement TDD differently. Even within teams developers can have various levels of adherence to the principles.\u003c/li\u003e\n\u003cli\u003eTDD can lead to an over-focus on small code chunks and less focus on wider functionality tests.\u003c/li\u003e\n\u003cli\u003eTesting becomes part of the project and maintenance can be high if tests are written too rigidly.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"further-reading\" href=\"#further-reading\"\u003e\n  \u003c/a\u003e\n  Further Reading\n\u003c/h2\u003e\n\n\u003cp\u003eTDD is closely related to \u003ca href=\"https://en.wikipedia.org/wiki/Acceptance_test%E2%80%93driven_development\"\u003eATDD\u003c/a\u003e or acceptance test-driven development and \u003ca href=\"https://en.wikipedia.org/wiki/Behavior-driven_development\"\u003eBDD\u003c/a\u003e or behavior-driven development.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"what-is-tdd-1mi7","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2spn19q4b3w22qr0nt7m.png","title":"What is TDD?","video":null,"video_code":null},{"created_at":"2022-03-26T18:20:19.392Z","crossposted_at":"2022-03-26T18:21:06.250Z","edited_at":null,"last_comment_at":"2022-03-29T01:54:41.444Z","published_at":"2022-03-26T18:13:00.000Z","canonical_url":"https://blog.seancoughlin.me/what-is-bdd","feed_source_url":"https://blog.seancoughlin.me/what-is-bdd","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: What is BDD?\npublished: true\ndate: 2022-03-26 18:13:00 UTC\ntags: #softwaretesting #qa #bdd #programming\ncanonical_url: https://blog.seancoughlin.me/what-is-bdd\n---\n\n## BDD Tl;dr\n\n[BDD](https://en.wikipedia.org/wiki/Behavior-driven_development) or behavior-driven development puts developers in the seat of business owners, forcing them to think about how their code creates value.\n\n## What is BDD?\n\nBDD requires that units of software should be defined in terms of the desired behavior. Often the desired behavior is related to some business value requirement. BDD is a common practice in the agile development process.\n\nBDD focuses more on defining how software should function. Behavior-driven development emerged from test-driven development which is more focused on testing code.\n\n## The Rules of BDD\n\nBDD often follows one of two formats. The **\"given-when-then\"** format or the **\"as a** blank **I want** blank **so that** blank. **\"** For example,\n\n- **Given** a user has properly filled out the form **when** they click the finish button **then** they should see a thank you message.\n- **As a** data analyst, **I want** form validation **so that** bad values don't make it to the database.\n\nA popular way of implementing BDD using programming is through testing with [Cucumber](https://en.wikipedia.org/wiki/Cucumber_(software)) and [Gherkin](https://en.wikipedia.org/wiki/Cucumber_(software)#Gherkin_language).\n\n## Pros of Behavior-Driven Development\n\n- BDD is defined through simple one-sentence outlines of behavior making it easy to understand.\n- BDD **\"given-when-then\"** and **\"as a** blank **I want** blank **so that** blank **\"** formats are non-technical so they can reach a large audience.\n- Behavior-driven development creates a common language for developers, testers, and business owners.\n\n## Cons of Behavior-Driven Development\n\n- Requirements in BDD have to be specific enough that developers can implement them.\n- Automated testing of behaviors with the BDD framework can require additional maintenance.\n\n## Further Reading\n\nBDD is closely related to [ATDD](https://en.wikipedia.org/wiki/Acceptance_test%E2%80%93driven_development) or acceptance test-driven development and [TDD](https://en.wikipedia.org/wiki/Test-driven_development) or test-driven development.\n\nYou can read more about many [types of software testing with this series](https://blog.seancoughlin.me/series/software-testing).","cached_tag_list":"softwaretesting, qa, bdd, programming","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":2,"description":"BDD Tl;dr   BDD or behavior-driven development puts developers in the seat of business...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/what-is-bdd-1l6o","public_reactions_count":18,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"bdd-tldr\" href=\"#bdd-tldr\"\u003e\n  \u003c/a\u003e\n  BDD Tl;dr\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Behavior-driven_development\"\u003eBDD\u003c/a\u003e or behavior-driven development puts developers in the seat of business owners, forcing them to think about how their code creates value.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what-is-bdd\" href=\"#what-is-bdd\"\u003e\n  \u003c/a\u003e\n  What is BDD?\n\u003c/h2\u003e\n\n\u003cp\u003eBDD requires that units of software should be defined in terms of the desired behavior. Often the desired behavior is related to some business value requirement. BDD is a common practice in the agile development process.\u003c/p\u003e\n\n\u003cp\u003eBDD focuses more on defining how software should function. Behavior-driven development emerged from test-driven development which is more focused on testing code.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"the-rules-of-bdd\" href=\"#the-rules-of-bdd\"\u003e\n  \u003c/a\u003e\n  The Rules of BDD\n\u003c/h2\u003e\n\n\u003cp\u003eBDD often follows one of two formats. The \u003cstrong\u003e\"given-when-then\"\u003c/strong\u003e format or the \u003cstrong\u003e\"as a\u003c/strong\u003e blank \u003cstrong\u003eI want\u003c/strong\u003e blank \u003cstrong\u003eso that\u003c/strong\u003e blank. \u003cstrong\u003e\"\u003c/strong\u003e For example,\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eGiven\u003c/strong\u003e a user has properly filled out the form \u003cstrong\u003ewhen\u003c/strong\u003e they click the finish button \u003cstrong\u003ethen\u003c/strong\u003e they should see a thank you message.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eAs a\u003c/strong\u003e data analyst, \u003cstrong\u003eI want\u003c/strong\u003e form validation \u003cstrong\u003eso that\u003c/strong\u003e bad values don't make it to the database.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eA popular way of implementing BDD using programming is through testing with \u003ca href=\"https://en.wikipedia.org/wiki/Cucumber_(software)\"\u003eCucumber\u003c/a\u003e and \u003ca href=\"https://en.wikipedia.org/wiki/Cucumber_(software)#Gherkin_language\"\u003eGherkin\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"pros-of-behaviordriven-development\" href=\"#pros-of-behaviordriven-development\"\u003e\n  \u003c/a\u003e\n  Pros of Behavior-Driven Development\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eBDD is defined through simple one-sentence outlines of behavior making it easy to understand.\u003c/li\u003e\n\u003cli\u003eBDD \u003cstrong\u003e\"given-when-then\"\u003c/strong\u003e and \u003cstrong\u003e\"as a\u003c/strong\u003e blank \u003cstrong\u003eI want\u003c/strong\u003e blank \u003cstrong\u003eso that\u003c/strong\u003e blank \u003cstrong\u003e\"\u003c/strong\u003e formats are non-technical so they can reach a large audience.\u003c/li\u003e\n\u003cli\u003eBehavior-driven development creates a common language for developers, testers, and business owners.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"cons-of-behaviordriven-development\" href=\"#cons-of-behaviordriven-development\"\u003e\n  \u003c/a\u003e\n  Cons of Behavior-Driven Development\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eRequirements in BDD have to be specific enough that developers can implement them.\u003c/li\u003e\n\u003cli\u003eAutomated testing of behaviors with the BDD framework can require additional maintenance.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"further-reading\" href=\"#further-reading\"\u003e\n  \u003c/a\u003e\n  Further Reading\n\u003c/h2\u003e\n\n\u003cp\u003eBDD is closely related to \u003ca href=\"https://en.wikipedia.org/wiki/Acceptance_test%E2%80%93driven_development\"\u003eATDD\u003c/a\u003e or acceptance test-driven development and \u003ca href=\"https://en.wikipedia.org/wiki/Test-driven_development\"\u003eTDD\u003c/a\u003e or test-driven development.\u003c/p\u003e\n\n\u003cp\u003eYou can read more about many \u003ca href=\"https://blog.seancoughlin.me/series/software-testing\"\u003etypes of software testing with this series\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"what-is-bdd-1l6o","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y6dzccbpjrh09rh9jkdc.png","title":"What is BDD?","video":null,"video_code":null},{"created_at":"2022-03-29T02:44:28.490Z","crossposted_at":"2022-03-29T02:45:14.375Z","edited_at":null,"last_comment_at":"2022-03-29T02:41:08.000Z","published_at":"2022-03-29T02:41:08.000Z","canonical_url":"https://blog.seancoughlin.me/what-is-a-unit-test","feed_source_url":"https://blog.seancoughlin.me/what-is-a-unit-test","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: What is a unit test?\npublished: true\ndate: 2022-03-29 02:41:08 UTC\ntags: #qa #softwaretesting #unittesting #softwaredevelopment\ncanonical_url: https://blog.seancoughlin.me/what-is-a-unit-test\n---\n\n## Unit Testing Background\n\n**Tl;dr** : a unit test is code that tests other code.\n\n[Unit tests](https://en.wikipedia.org/wiki/Unit_testing) are the smallest type of software testing. They are meant to verify that a single piece of code is working as intended. Unit testing is typically automated, and developers run tests as part of the development process to make sure everything is working appropriately.\n\nUnit tests are commonly run on every build or change to the codebase.\n\nUnit testing can fall into the category of [TDD or test-driven development](https://dev.to/scc33/what-is-tdd-1mi7). TDD is a common method in [extreme programming](https://en.wikipedia.org/wiki/Extreme_programming) and [agile](https://en.wikipedia.org/wiki/Agile_software_development) where unit tests are written before the code.\n\nUnit tests can sometimes be difficult to write because code often relies on outside components. In these cases, [stubbing](https://en.wikipedia.org/wiki/Method_stub) or [mocking](https://en.wikipedia.org/wiki/Mock_object) are common techniques to implement unit tests.\n\n## Unit Testing Frameworks\n\nThere are hundreds of testing frameworks in existence because unit testing is so common. Wikipedia maintains a [long list of testing frameworks](https://en.wikipedia.org/wiki/List_of_unit_testing_frameworks#C++) for many languages. Some of the most popular frameworks are [Junit](https://en.wikipedia.org/wiki/JUnit) for Java, [Mocha](https://en.wikipedia.org/wiki/Mocha_(JavaScript_framework)) for JavaScript, and [PyTest](https://docs.pytest.org/en/7.1.x/) for Python.\n\n## Advantages\n\n- Unit tests are small and typically quick to run. The speed makes them easier to check and hastens development.\n- Unit testing can be helpful documentation because it shows how the code is properly used and can give insight into functionality.\n- Developers can use unit tests as a helpful sanity check to make sure their code is working as intended and under many scenarios.\n\n## Disadvantages\n\n- Since unit tests are checking only small chunks of code, they cannot catch large errors that exist on the system level. Other testing methods like [integration tests](https://en.wikipedia.org/wiki/Integration_testing) are required for verifying the system behavior.\n- Writing and maintaining unit tests can often be difficult because developers are focused on writing deliverable code for customers.\n- Unit tests, like all testing, may not cover every edge case or may be incorrect. Therefore, relying too heavily on unit tests creates a false sense of security that the code is working as intended.\n\n## Further Reading\n\nUnit tests are just the first level of testing. More types of testing can be read about in [my series on software testing and its methods](https://blog.seancoughlin.me/series/software-testing).","cached_tag_list":"qa, softwaretesting, unittesting, softwaredevelopment","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Unit Testing Background   Tl;dr : a unit test is code that tests other code.  Unit tests are...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/what-is-a-unit-test-3n9j","public_reactions_count":8,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"unit-testing-background\" href=\"#unit-testing-background\"\u003e\n  \u003c/a\u003e\n  Unit Testing Background\n\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003eTl;dr\u003c/strong\u003e : a unit test is code that tests other code.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Unit_testing\"\u003eUnit tests\u003c/a\u003e are the smallest type of software testing. They are meant to verify that a single piece of code is working as intended. Unit testing is typically automated, and developers run tests as part of the development process to make sure everything is working appropriately.\u003c/p\u003e\n\n\u003cp\u003eUnit tests are commonly run on every build or change to the codebase.\u003c/p\u003e\n\n\u003cp\u003eUnit testing can fall into the category of \u003ca href=\"https://dev.to/scc33/what-is-tdd-1mi7\"\u003eTDD or test-driven development\u003c/a\u003e. TDD is a common method in \u003ca href=\"https://en.wikipedia.org/wiki/Extreme_programming\"\u003eextreme programming\u003c/a\u003e and \u003ca href=\"https://en.wikipedia.org/wiki/Agile_software_development\"\u003eagile\u003c/a\u003e where unit tests are written before the code.\u003c/p\u003e\n\n\u003cp\u003eUnit tests can sometimes be difficult to write because code often relies on outside components. In these cases, \u003ca href=\"https://en.wikipedia.org/wiki/Method_stub\"\u003estubbing\u003c/a\u003e or \u003ca href=\"https://en.wikipedia.org/wiki/Mock_object\"\u003emocking\u003c/a\u003e are common techniques to implement unit tests.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"unit-testing-frameworks\" href=\"#unit-testing-frameworks\"\u003e\n  \u003c/a\u003e\n  Unit Testing Frameworks\n\u003c/h2\u003e\n\n\u003cp\u003eThere are hundreds of testing frameworks in existence because unit testing is so common. Wikipedia maintains a \u003ca href=\"https://en.wikipedia.org/wiki/List_of_unit_testing_frameworks#C++\"\u003elong list of testing frameworks\u003c/a\u003e for many languages. Some of the most popular frameworks are \u003ca href=\"https://en.wikipedia.org/wiki/JUnit\"\u003eJunit\u003c/a\u003e for Java, \u003ca href=\"https://en.wikipedia.org/wiki/Mocha_(JavaScript_framework)\"\u003eMocha\u003c/a\u003e for JavaScript, and \u003ca href=\"https://docs.pytest.org/en/7.1.x/\"\u003ePyTest\u003c/a\u003e for Python.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"advantages\" href=\"#advantages\"\u003e\n  \u003c/a\u003e\n  Advantages\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eUnit tests are small and typically quick to run. The speed makes them easier to check and hastens development.\u003c/li\u003e\n\u003cli\u003eUnit testing can be helpful documentation because it shows how the code is properly used and can give insight into functionality.\u003c/li\u003e\n\u003cli\u003eDevelopers can use unit tests as a helpful sanity check to make sure their code is working as intended and under many scenarios.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"disadvantages\" href=\"#disadvantages\"\u003e\n  \u003c/a\u003e\n  Disadvantages\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eSince unit tests are checking only small chunks of code, they cannot catch large errors that exist on the system level. Other testing methods like \u003ca href=\"https://en.wikipedia.org/wiki/Integration_testing\"\u003eintegration tests\u003c/a\u003e are required for verifying the system behavior.\u003c/li\u003e\n\u003cli\u003eWriting and maintaining unit tests can often be difficult because developers are focused on writing deliverable code for customers.\u003c/li\u003e\n\u003cli\u003eUnit tests, like all testing, may not cover every edge case or may be incorrect. Therefore, relying too heavily on unit tests creates a false sense of security that the code is working as intended.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"further-reading\" href=\"#further-reading\"\u003e\n  \u003c/a\u003e\n  Further Reading\n\u003c/h2\u003e\n\n\u003cp\u003eUnit tests are just the first level of testing. More types of testing can be read about in \u003ca href=\"https://blog.seancoughlin.me/series/software-testing\"\u003emy series on software testing and its methods\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"what-is-a-unit-test-3n9j","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3aoj2rih3vplrgwcdw5r.png","title":"What is a unit test?","video":null,"video_code":null},{"created_at":"2022-03-30T01:00:41.401Z","crossposted_at":"2022-03-30T01:01:11.907Z","edited_at":null,"last_comment_at":"2022-03-30T00:57:19.000Z","published_at":"2022-03-30T00:57:19.000Z","canonical_url":"https://blog.seancoughlin.me/what-is-integration-testing","feed_source_url":"https://blog.seancoughlin.me/what-is-integration-testing","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: What is Integration Testing?\npublished: true\ndate: 2022-03-30 00:57:19 UTC\ntags: #qa #integrationtesting #softwaretesting #softwaredevelopment\ncanonical_url: https://blog.seancoughlin.me/what-is-integration-testing\n---\n\n## Background\n\n[Integration testing](https://en.wikipedia.org/wiki/Integration_testing), also known as integration and testing, is the next step up from [unit testing](https://dev.to/scc33/what-is-a-unit-test-3n9j).\n\nIn unit testing, individual chunks of software are verified. Whereas, integration testing checks multiple components for correctness.\n\nThe goal of integration testing is to confirm software works in a group.\n\nIntegration testing makes common use of [stubs and drives](https://www.geeksforgeeks.org/difference-between-stubs-and-drivers/).\n\n- A stub is a _fake called program_, it allows for the testing of the program calling the stub. \n- A driver is a _fake caller program_, it allows for the testing of the program called by the driver.\n\n## Approaches to Integration Testing\n\nThere are [four main approaches to integration testing](https://www.geeksforgeeks.org/software-engineering-integration-testing/).\n\n- Big-bang: all the software modules are created and combined at once.\n- [Bottom-up](https://en.wikipedia.org/wiki/Top-down_and_bottom-up_design#Programming): low-level components are tested by using drivers before high-level components.\n- [Top-down](https://en.wikipedia.org/wiki/Top-down_and_bottom-up_design#Programming): first high-level modules are tested by using stubs before low-level components.\n- Mix-integration (aka sandwich testing): a combination of the bottom-up and top-down approaches.\n\n## Advantage\n\n- Integration testing is an important way of verifying that larger chunks of code and services work together as intended. \n\n## Disadvantage\n\n- Integration testing often requires a significant amount of extra code in the form of stubs and drivers to be written.\n\n## Further Reading\n\nIntegration tests are just one kind of testing. [My series on software testing and its methods](https://blog.seancoughlin.me/series/software-testing) covers many other testing variations.","cached_tag_list":"qa, integrationtesting, softwaretesting, softwaredevelopment","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Background   Integration testing, also known as integration and testing, is the next step up...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/what-is-integration-testing-eb5","public_reactions_count":4,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"background\" href=\"#background\"\u003e\n  \u003c/a\u003e\n  Background\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Integration_testing\"\u003eIntegration testing\u003c/a\u003e, also known as integration and testing, is the next step up from \u003ca href=\"https://dev.to/scc33/what-is-a-unit-test-3n9j\"\u003eunit testing\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eIn unit testing, individual chunks of software are verified. Whereas, integration testing checks multiple components for correctness.\u003c/p\u003e\n\n\u003cp\u003eThe goal of integration testing is to confirm software works in a group.\u003c/p\u003e\n\n\u003cp\u003eIntegration testing makes common use of \u003ca href=\"https://www.geeksforgeeks.org/difference-between-stubs-and-drivers/\"\u003estubs and drives\u003c/a\u003e.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eA stub is a \u003cem\u003efake called program\u003c/em\u003e, it allows for the testing of the program calling the stub. \u003c/li\u003e\n\u003cli\u003eA driver is a \u003cem\u003efake caller program\u003c/em\u003e, it allows for the testing of the program called by the driver.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"approaches-to-integration-testing\" href=\"#approaches-to-integration-testing\"\u003e\n  \u003c/a\u003e\n  Approaches to Integration Testing\n\u003c/h2\u003e\n\n\u003cp\u003eThere are \u003ca href=\"https://www.geeksforgeeks.org/software-engineering-integration-testing/\"\u003efour main approaches to integration testing\u003c/a\u003e.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eBig-bang: all the software modules are created and combined at once.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://en.wikipedia.org/wiki/Top-down_and_bottom-up_design#Programming\"\u003eBottom-up\u003c/a\u003e: low-level components are tested by using drivers before high-level components.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://en.wikipedia.org/wiki/Top-down_and_bottom-up_design#Programming\"\u003eTop-down\u003c/a\u003e: first high-level modules are tested by using stubs before low-level components.\u003c/li\u003e\n\u003cli\u003eMix-integration (aka sandwich testing): a combination of the bottom-up and top-down approaches.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"advantage\" href=\"#advantage\"\u003e\n  \u003c/a\u003e\n  Advantage\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eIntegration testing is an important way of verifying that larger chunks of code and services work together as intended. \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"disadvantage\" href=\"#disadvantage\"\u003e\n  \u003c/a\u003e\n  Disadvantage\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eIntegration testing often requires a significant amount of extra code in the form of stubs and drivers to be written.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"further-reading\" href=\"#further-reading\"\u003e\n  \u003c/a\u003e\n  Further Reading\n\u003c/h2\u003e\n\n\u003cp\u003eIntegration tests are just one kind of testing. \u003ca href=\"https://blog.seancoughlin.me/series/software-testing\"\u003eMy series on software testing and its methods\u003c/a\u003e covers many other testing variations.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"what-is-integration-testing-eb5","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/glwkszw8ferefim4pl4e.png","title":"What is Integration Testing?","video":null,"video_code":null},{"created_at":"2022-03-31T04:22:50.373Z","crossposted_at":"2022-03-31T04:23:28.412Z","edited_at":null,"last_comment_at":"2022-03-31T04:14:34.000Z","published_at":"2022-03-31T04:14:34.000Z","canonical_url":"https://blog.seancoughlin.me/welcome-to-ios-development","feed_source_url":"https://blog.seancoughlin.me/welcome-to-ios-development","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Welcome to iOS Development\npublished: true\ndate: 2022-03-31 04:14:34 UTC\ntags: #iOS #iOSdevelopment #motivation #softwaredevelopment\ncanonical_url: https://blog.seancoughlin.me/welcome-to-ios-development\n---\n\nHi, my name is Sean, and welcome to my new series, iOS Development. This series will explain everything iOS dev-related and how to create your first app.\n\nI've been a programmer for six years. I studied computer science in college, and currently, I work as a full-stack software engineer. However, I'm new to creating apps for iOS. I think this gives me a unique perspective on the process, and I would like to share what I've learned along the way.\n\nJust a few months ago, I wouldn't even have recognized Swift code if I saw it. I felt lightyears away from ever producing something shippable, and I didn't know where to begin. Since then, I've learned a lot about Swift, and I've released my first app, [Compound Interest Solver](https://apps.apple.com/us/app/compound-interest-solver/id1607884819).\n\nI'm targeting this series to readers who might be in the same boat I was. If you want to create an app, but don't know where to begin, I hope these tutorials will be helpful and engaging.\n\nIn this series, I want to show you three things.\n\n- How I created my first app\n- Resources to learn Swift\n- Methods of engaging with the Swift development community\n\nBest of luck programming, and stay tuned for more.","cached_tag_list":"ios, iosdevelopment, motivation, softwaredevelopment","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Hi, my name is Sean, and welcome to my new series, iOS Development. This series will explain...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/welcome-to-ios-development-kj9","public_reactions_count":9,"processed_html":"\u003cp\u003eHi, my name is Sean, and welcome to my new series, iOS Development. This series will explain everything iOS dev-related and how to create your first app.\u003c/p\u003e\n\n\u003cp\u003eI've been a programmer for six years. I studied computer science in college, and currently, I work as a full-stack software engineer. However, I'm new to creating apps for iOS. I think this gives me a unique perspective on the process, and I would like to share what I've learned along the way.\u003c/p\u003e\n\n\u003cp\u003eJust a few months ago, I wouldn't even have recognized Swift code if I saw it. I felt lightyears away from ever producing something shippable, and I didn't know where to begin. Since then, I've learned a lot about Swift, and I've released my first app, \u003ca href=\"https://apps.apple.com/us/app/compound-interest-solver/id1607884819\"\u003eCompound Interest Solver\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eI'm targeting this series to readers who might be in the same boat I was. If you want to create an app, but don't know where to begin, I hope these tutorials will be helpful and engaging.\u003c/p\u003e\n\n\u003cp\u003eIn this series, I want to show you three things.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eHow I created my first app\u003c/li\u003e\n\u003cli\u003eResources to learn Swift\u003c/li\u003e\n\u003cli\u003eMethods of engaging with the Swift development community\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eBest of luck programming, and stay tuned for more.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"welcome-to-ios-development-kj9","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qpx8vsib2r8cwukv8wil.png","title":"Welcome to iOS Development","video":null,"video_code":null},{"created_at":"2022-03-31T23:01:38.129Z","crossposted_at":"2022-03-31T23:04:06.746Z","edited_at":null,"last_comment_at":"2022-03-31T22:58:26.000Z","published_at":"2022-03-31T22:58:26.000Z","canonical_url":"https://blog.seancoughlin.me/my-journey-to-ios-development","feed_source_url":"https://blog.seancoughlin.me/my-journey-to-ios-development","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: My Journey to iOS development\npublished: true\ndate: 2022-03-31 22:58:26 UTC\ntags: #iOS #iOSdev #appdev #personal \ncanonical_url: https://blog.seancoughlin.me/my-journey-to-ios-development\n---\n\n## Background\n\nBefore creating tutorials for this iOS development series, I wanted to share my path to releasing an app. I come from a programming background, but I felt that the iOS world was unapproachable. Hopefully, my story can be a motivator that makes iOS development seem friendly.\n\n## My Story\n\nI’ve always been a big Apple nerd. I always watch WWDC, and I often stay tuned in to Apple events. So, since I started programming, and really since I was a little kid, the appeal of making an app has always stood out to me.\n\nI felt there was an allure of app development that was unique. Perhaps it stemmed from growing up during the _[there's an app for that era](https://www.wired.com/2010/10/app-for-that/)_. Does anybody remember those ads? Whatever the cause, becoming an app developer always felt aspirational.\n\nI started programming in earnest in high school with AP Computer Science. I built my programming skills in AP Computer Science. However, because it is a Java-based course, I didn't learn much about iOS app development.\n\nI discovered that I loved coding, so I went off to college to study computer science. I learned more about Java, and I stumbled into other classes that taught me Python, C++, and C. Along the way, I dabbled in some Android development, but I never got the chance to create the iOS app that I always wanted to.\n\nUnfortunately, [Swift](https://en.wikipedia.org/wiki/Swift_(programming_language)) is a bit of a niche language. Apple is a huge company and its devices are ultra popular. However, programming is so vast that many other languages get taught first. Additionally, as far as programming languages go, Swift is new. It only emerged in 2014.\n\nI was busy with school, so I never took the time to learn Swift. Another road blocker in my way was [UIKit](https://developer.apple.com/documentation/uikit). UIKit is very popular but obtuse for the beginner to learn. I come from a programming background, and UI isn’t my strong suit. These obstacles were by no means insurmountable, but I always found some reason to not pursue a dream of mine.\n\nI think a few key factors finally pushed me to complete my dream of creating an app.\n\n- First, I had just graduated college and hadn't started my job, so I had free time. \n- Second, the advent of [SwiftUI](https://www.hackingwithswift.com/quick-start/swiftui/what-is-swiftui), a declarative way of creating interfaces, removed my anxiety about creating a user interface. \n- Finally, I discovered [Hacking With Swift](https://www.hackingwithswift.com). Hacking With Swift is the best place to learn about app development. It provided so many excellent and free resources to learn from.\n\nOnce the stars aligned for me, I started studying Swift and working on an app. After just a couple weeks, I had created and launched my first app on the app store. It's called [Compound Interest Solver](https://apps.apple.com/us/app/compound-interest-solver/id1607884819) and it calculates compound interest.\n\n## My Takeaways\n\nI must admit I felt really proud of myself for completing my long-term goal of creating an app. My one regret is I wish I had focused on it sooner. Everything that I thought held me back, only turned into minor obstacles.\n\nIt didn't take me nearly as much time as I thought it would, and Swift was far more digestible than it looked. I wish I had measured the time commitment, but I'd estimate it was perhaps 20 hours of work that I spread across two weeks. That's it.\n\nIf you're interested in app development, go give it a try. I think you'll find it easier than you fear and even more enjoyable than you thought.","cached_tag_list":"ios, iosdev, appdev, personal","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Background   Before creating tutorials for this iOS development series, I wanted to share my...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/my-journey-to-ios-development-1b92","public_reactions_count":7,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"background\" href=\"#background\"\u003e\n  \u003c/a\u003e\n  Background\n\u003c/h2\u003e\n\n\u003cp\u003eBefore creating tutorials for this iOS development series, I wanted to share my path to releasing an app. I come from a programming background, but I felt that the iOS world was unapproachable. Hopefully, my story can be a motivator that makes iOS development seem friendly.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"my-story\" href=\"#my-story\"\u003e\n  \u003c/a\u003e\n  My Story\n\u003c/h2\u003e\n\n\u003cp\u003eI’ve always been a big Apple nerd. I always watch WWDC, and I often stay tuned in to Apple events. So, since I started programming, and really since I was a little kid, the appeal of making an app has always stood out to me.\u003c/p\u003e\n\n\u003cp\u003eI felt there was an allure of app development that was unique. Perhaps it stemmed from growing up during the \u003cem\u003e\u003ca href=\"https://www.wired.com/2010/10/app-for-that/\"\u003ethere's an app for that era\u003c/a\u003e\u003c/em\u003e. Does anybody remember those ads? Whatever the cause, becoming an app developer always felt aspirational.\u003c/p\u003e\n\n\u003cp\u003eI started programming in earnest in high school with AP Computer Science. I built my programming skills in AP Computer Science. However, because it is a Java-based course, I didn't learn much about iOS app development.\u003c/p\u003e\n\n\u003cp\u003eI discovered that I loved coding, so I went off to college to study computer science. I learned more about Java, and I stumbled into other classes that taught me Python, C++, and C. Along the way, I dabbled in some Android development, but I never got the chance to create the iOS app that I always wanted to.\u003c/p\u003e\n\n\u003cp\u003eUnfortunately, \u003ca href=\"https://en.wikipedia.org/wiki/Swift_(programming_language)\"\u003eSwift\u003c/a\u003e is a bit of a niche language. Apple is a huge company and its devices are ultra popular. However, programming is so vast that many other languages get taught first. Additionally, as far as programming languages go, Swift is new. It only emerged in 2014.\u003c/p\u003e\n\n\u003cp\u003eI was busy with school, so I never took the time to learn Swift. Another road blocker in my way was \u003ca href=\"https://developer.apple.com/documentation/uikit\"\u003eUIKit\u003c/a\u003e. UIKit is very popular but obtuse for the beginner to learn. I come from a programming background, and UI isn’t my strong suit. These obstacles were by no means insurmountable, but I always found some reason to not pursue a dream of mine.\u003c/p\u003e\n\n\u003cp\u003eI think a few key factors finally pushed me to complete my dream of creating an app.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eFirst, I had just graduated college and hadn't started my job, so I had free time. \u003c/li\u003e\n\u003cli\u003eSecond, the advent of \u003ca href=\"https://www.hackingwithswift.com/quick-start/swiftui/what-is-swiftui\"\u003eSwiftUI\u003c/a\u003e, a declarative way of creating interfaces, removed my anxiety about creating a user interface. \u003c/li\u003e\n\u003cli\u003eFinally, I discovered \u003ca href=\"https://www.hackingwithswift.com\"\u003eHacking With Swift\u003c/a\u003e. Hacking With Swift is the best place to learn about app development. It provided so many excellent and free resources to learn from.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eOnce the stars aligned for me, I started studying Swift and working on an app. After just a couple weeks, I had created and launched my first app on the app store. It's called \u003ca href=\"https://apps.apple.com/us/app/compound-interest-solver/id1607884819\"\u003eCompound Interest Solver\u003c/a\u003e and it calculates compound interest.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"my-takeaways\" href=\"#my-takeaways\"\u003e\n  \u003c/a\u003e\n  My Takeaways\n\u003c/h2\u003e\n\n\u003cp\u003eI must admit I felt really proud of myself for completing my long-term goal of creating an app. My one regret is I wish I had focused on it sooner. Everything that I thought held me back, only turned into minor obstacles.\u003c/p\u003e\n\n\u003cp\u003eIt didn't take me nearly as much time as I thought it would, and Swift was far more digestible than it looked. I wish I had measured the time commitment, but I'd estimate it was perhaps 20 hours of work that I spread across two weeks. That's it.\u003c/p\u003e\n\n\u003cp\u003eIf you're interested in app development, go give it a try. I think you'll find it easier than you fear and even more enjoyable than you thought.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"my-journey-to-ios-development-1b92","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6epm5okc5xy0a9h2gile.png","title":"My Journey to iOS development","video":null,"video_code":null},{"created_at":"2022-04-01T00:24:44.280Z","crossposted_at":"2022-04-01T00:31:01.017Z","edited_at":null,"last_comment_at":"2022-06-24T05:59:30.287Z","published_at":"2022-04-01T00:20:22.000Z","canonical_url":"https://blog.seancoughlin.me/how-to-save-your-hashnode-articles-to-github","feed_source_url":"https://blog.seancoughlin.me/how-to-save-your-hashnode-articles-to-github","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: How to Save Your Hashnode Articles to GitHub\npublished: true\ndate: 2022-04-01 00:20:22 UTC\ntags: #hashnode #github #crosspost\ncanonical_url: https://blog.seancoughlin.me/how-to-save-your-hashnode-articles-to-github\n---\n\n## Hashnode is Great But Protecting Your Stuff is Important\n\nHashnode is my favorite blogging platform. I enjoy the slick interface, developer focus, custom domain names, and outside integrations.\n\nPerhaps the best feature of Hashnode is the markdown editor. It makes writing stories a breeze. You can even use Hashnode as a full-stack solution and store your articles there.\n\nHowever, as much as I enjoy Hashnode, it could fold one day. Or they could be hacked, or their servers could flood, or catch on fire, or... I think you get the point. Hosting all your content on Hashnode is a dangerous proposition.\n\nThankfully, owning the writing you produce is a crucial feature of Hashnode. The service makes it easy to connect to GitHub for automatic backups. They even recently released a [new feature that makes it super easy to backup all your old content to GitHub](https://engineering.hashnode.com/serverless-github-backups). Having a backup means that in the off chance something happens to Hashnode, you have the resources to recover.\n\n## How to Setup Github Backups\n\n1. First, you will need to create a [new repository](https://github.com/new/) on GitHub. You can title the repo whatever you'd like.\n2. Head over to your blog's dashboard.\n3. Locate the Backup backup button on the side panel.\n4. Click on the install _Hashnode GitHub App_ link. ![Hashnode GitHub App link](https://cdn.hashnode.com/res/hashnode/image/upload/v1648771709451/MqU1ZoFcV.png)\n5. Provide the app permission to access only select repositories. Then select the repository you created in step one. ![Select the one repo you would lie to backup to](https://cdn.hashnode.com/res/hashnode/image/upload/v1648771723364/ZwNSg0g32.png)\n6. Hashnode will now automatically backup your articles upon publishing. You can also click _Back up all my posts_ to backup old posts. ![Automatic backup of all your posts](https://cdn.hashnode.com/res/hashnode/image/upload/v1648771746435/kKCDZlCSU.png)\n\n_That's it!_ You now have all your old posts saved to GitHub. What happens if GitHub goes down? That's too scary a possibility to consider.\n\n## Sources\n\n[https://support.hashnode.com/docs/github-backup](https://support.hashnode.com/docs/github-backup)\n\n[https://engineering.hashnode.com/serverless-github-backups](https://engineering.hashnode.com/serverless-github-backups)","cached_tag_list":"hashnode, github, crosspost","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":1,"description":"Hashnode is Great But Protecting Your Stuff is Important   Hashnode is my favorite blogging...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/how-to-save-your-hashnode-articles-to-github-1fpo","public_reactions_count":14,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"hashnode-is-great-but-protecting-your-stuff-is-important\" href=\"#hashnode-is-great-but-protecting-your-stuff-is-important\"\u003e\n  \u003c/a\u003e\n  Hashnode is Great But Protecting Your Stuff is Important\n\u003c/h2\u003e\n\n\u003cp\u003eHashnode is my favorite blogging platform. I enjoy the slick interface, developer focus, custom domain names, and outside integrations.\u003c/p\u003e\n\n\u003cp\u003ePerhaps the best feature of Hashnode is the markdown editor. It makes writing stories a breeze. You can even use Hashnode as a full-stack solution and store your articles there.\u003c/p\u003e\n\n\u003cp\u003eHowever, as much as I enjoy Hashnode, it could fold one day. Or they could be hacked, or their servers could flood, or catch on fire, or... I think you get the point. Hosting all your content on Hashnode is a dangerous proposition.\u003c/p\u003e\n\n\u003cp\u003eThankfully, owning the writing you produce is a crucial feature of Hashnode. The service makes it easy to connect to GitHub for automatic backups. They even recently released a \u003ca href=\"https://engineering.hashnode.com/serverless-github-backups\"\u003enew feature that makes it super easy to backup all your old content to GitHub\u003c/a\u003e. Having a backup means that in the off chance something happens to Hashnode, you have the resources to recover.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"how-to-setup-github-backups\" href=\"#how-to-setup-github-backups\"\u003e\n  \u003c/a\u003e\n  How to Setup Github Backups\n\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003eFirst, you will need to create a \u003ca href=\"https://github.com/new/\"\u003enew repository\u003c/a\u003e on GitHub. You can title the repo whatever you'd like.\u003c/li\u003e\n\u003cli\u003eHead over to your blog's dashboard.\u003c/li\u003e\n\u003cli\u003eLocate the Backup backup button on the side panel.\u003c/li\u003e\n\u003cli\u003eClick on the install \u003cem\u003eHashnode GitHub App\u003c/em\u003e link. \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--P_Nu2bUQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1648771709451/MqU1ZoFcV.png\" alt=\"Hashnode GitHub App link\" loading=\"lazy\" width=\"800\" height=\"600\"\u003e\n\u003c/li\u003e\n\u003cli\u003eProvide the app permission to access only select repositories. Then select the repository you created in step one. \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--S8yQov1u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1648771723364/ZwNSg0g32.png\" alt=\"Select the one repo you would lie to backup to\" loading=\"lazy\" width=\"773\" height=\"436\"\u003e\n\u003c/li\u003e\n\u003cli\u003eHashnode will now automatically backup your articles upon publishing. You can also click \u003cem\u003eBack up all my posts\u003c/em\u003e to backup old posts. \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--R4xj_shV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1648771746435/kKCDZlCSU.png\" alt=\"Automatic backup of all your posts\" loading=\"lazy\" width=\"800\" height=\"75\"\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003cem\u003eThat's it!\u003c/em\u003e You now have all your old posts saved to GitHub. What happens if GitHub goes down? That's too scary a possibility to consider.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"sources\" href=\"#sources\"\u003e\n  \u003c/a\u003e\n  Sources\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://support.hashnode.com/docs/github-backup\"\u003ehttps://support.hashnode.com/docs/github-backup\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://engineering.hashnode.com/serverless-github-backups\"\u003ehttps://engineering.hashnode.com/serverless-github-backups\u003c/a\u003e\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"how-to-save-your-hashnode-articles-to-github-1fpo","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c35fzadte4b40za0xaw7.png","title":"How to Save Your Hashnode Articles to GitHub","video":null,"video_code":null},{"created_at":"2022-04-03T19:07:46.122Z","crossposted_at":"2022-04-03T19:08:18.972Z","edited_at":null,"last_comment_at":"2022-04-03T19:03:34.000Z","published_at":"2022-04-03T19:03:34.000Z","canonical_url":"https://blog.seancoughlin.me/compound-interest-solver","feed_source_url":"https://blog.seancoughlin.me/compound-interest-solver","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Compound Interest Solver\npublished: true\ndate: 2022-04-03 19:03:34 UTC\ntags: #iOS #appdev #apps\ncanonical_url: https://blog.seancoughlin.me/compound-interest-solver\n---\n\nRecently, I released my first app on the App Store! The app is called **[Compound Interest Solver](https://apps.apple.com/us/app/compound-interest-solver/id1607884819)**. The app's main functionality is to calculate compound interest. Over time, I plan to add additional formulas and math explanations to the app.\n\nCompound interest calculators are very much a solved problem. A quick search will turn up countless varieties. Despite having been done before, I still thought this was a good first idea for a few reasons.\n\n- First, it is a simple idea. The simplicity made it easy for a beginner, like myself, to design and implement. \n- Second, the UI could be easily created with some forms and graphs. I thought working with graphing would be a good opportunity to see Swift libraries and find insights into the Swift community. \n- Third, it was an idea where the current solutions didn't satisfy me, and I was interested in creating something better.\n\nI'm not above plugging my own software, so please give [Compound Interest Solver](https://apps.apple.com/us/app/compound-interest-solver/id1607884819) a download and a review. The app is totally free, and I don't collect any data because I don't advertise. I created it for the learning opportunity, and I'd appreciate the feedback.\n\n#### What's the takeaway?\n\nIf you want to create an app, I bet you have something grandiose in mind. That's great! However, if you're just starting out on your first app, I'd recommend picking a simple idea. Your first app doesn't have to be the next Uber or Airbnb. Reinventing the world is difficult!\n\nI struggled with many false starts. I would start to learn Swift then quickly get distracted and frustrated and give up. By starting with something small, I made myself more likely to finish. Along the way of building the app, I learned a lot. Now I've started to build momentum that I can turn into developing new apps, learning more Swift, and writing this series.\n\nPick something small and get to building. Great things can come from just getting started.","cached_tag_list":"ios, appdev, apps","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Recently, I released my first app on the App Store! The app is called Compound Interest Solver. The...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/compound-interest-solver-293p","public_reactions_count":7,"processed_html":"\u003cp\u003eRecently, I released my first app on the App Store! The app is called \u003cstrong\u003e\u003ca href=\"https://apps.apple.com/us/app/compound-interest-solver/id1607884819\"\u003eCompound Interest Solver\u003c/a\u003e\u003c/strong\u003e. The app's main functionality is to calculate compound interest. Over time, I plan to add additional formulas and math explanations to the app.\u003c/p\u003e\n\n\u003cp\u003eCompound interest calculators are very much a solved problem. A quick search will turn up countless varieties. Despite having been done before, I still thought this was a good first idea for a few reasons.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eFirst, it is a simple idea. The simplicity made it easy for a beginner, like myself, to design and implement. \u003c/li\u003e\n\u003cli\u003eSecond, the UI could be easily created with some forms and graphs. I thought working with graphing would be a good opportunity to see Swift libraries and find insights into the Swift community. \u003c/li\u003e\n\u003cli\u003eThird, it was an idea where the current solutions didn't satisfy me, and I was interested in creating something better.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eI'm not above plugging my own software, so please give \u003ca href=\"https://apps.apple.com/us/app/compound-interest-solver/id1607884819\"\u003eCompound Interest Solver\u003c/a\u003e a download and a review. The app is totally free, and I don't collect any data because I don't advertise. I created it for the learning opportunity, and I'd appreciate the feedback.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"whats-the-takeaway\" href=\"#whats-the-takeaway\"\u003e\n  \u003c/a\u003e\n  What's the takeaway?\n\u003c/h4\u003e\n\n\u003cp\u003eIf you want to create an app, I bet you have something grandiose in mind. That's great! However, if you're just starting out on your first app, I'd recommend picking a simple idea. Your first app doesn't have to be the next Uber or Airbnb. Reinventing the world is difficult!\u003c/p\u003e\n\n\u003cp\u003eI struggled with many false starts. I would start to learn Swift then quickly get distracted and frustrated and give up. By starting with something small, I made myself more likely to finish. Along the way of building the app, I learned a lot. Now I've started to build momentum that I can turn into developing new apps, learning more Swift, and writing this series.\u003c/p\u003e\n\n\u003cp\u003ePick something small and get to building. Great things can come from just getting started.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"compound-interest-solver-293p","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m3cfeqsmombxtlw02xgj.png","title":"Compound Interest Solver","video":null,"video_code":null},{"created_at":"2022-04-08T22:41:14.027Z","crossposted_at":"2022-04-08T22:41:44.934Z","edited_at":null,"last_comment_at":"2022-04-08T22:34:03.000Z","published_at":"2022-04-08T22:34:03.000Z","canonical_url":"https://blog.seancoughlin.me/the-best-way-to-learn-to-create-apps-is-by-creating-an-app","feed_source_url":"https://blog.seancoughlin.me/the-best-way-to-learn-to-create-apps-is-by-creating-an-app","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: The Best Way to Learn to Create Apps is By Creating an App\npublished: true\ndate: 2022-04-08 22:34:03 UTC\ntags: #appdev #iOS #iOSappdev #learntocode\ncanonical_url: https://blog.seancoughlin.me/the-best-way-to-learn-to-create-apps-is-by-creating-an-app\n---\n\n## My Experience\n\nThe biggest impediment to learning something new is commitment. It isn't hard to work on something for a day or a week, but can you stick it out for a month or a year? If you have that level of willpower, please DM me. I would love to pick your brain.\n\nFor the average individual finding the willpower to stick with something is hard. Distractions are everywhere, and it is often easiest to just give up. I decided I wanted to learn app development at least half a dozen times. With each effort, I would buy a class or start a YouTube tutorial. And each time, I quickly gave up.\n\nNo one was proverbially holding my hand to the fire, and on my own, I simply could not muster the willpower to learn by sitting through a class.\n\nI finally succeeded in my attempt to learn app development by giving up on the learning part and **jumping straight into doing it**. I began working on [a simple app to calculate compound interest](https://apps.apple.com/us/app/compound-interest-solver/id1607884819). I designed a UI, mocked up an app icon, and before long I had fallen in love with my idea. I cannot claim that it was an amazing idea, but I learned a ton along the way.\n\n## Nothing Beats Learning by Doing\n\nIf you want to create an app, I bet you have something grandiose in mind and that's great! However, if you're just starting out on your first app, I'd recommend picking a simple idea. Your first app doesn't have to be the next Uber or Airbnb. Reinventing the world is difficult!\n\nYou will learn far more by working with a simple idea than by trying and failing with your larger vision. This goes back to the old saying, walk before you can run. **Once you've developed something, then the next app will be much easier to develop.**\n\nAnother benefit of developing and shipping an app, even a simple one, is **building your portfolio**. iOS development is a lucrative profession, Glassdoor estimates the average salary for a Swift developer is [$109,000](https://www.glassdoor.com/Salaries/swift-developer-salary-SRCH_KO0,15.htm). That is a pretty good chunk of cheddar. Releasing an app will build your portfolio and give you something to market yourself with as you hunt for jobs.\n\nFinally, by building an app you'll learn **if you actually enjoy the experience**. Perhaps you will discover another opportunity along the way that is a better fit. _The only way to truly know is by trying your hand at the process._","cached_tag_list":"appdev, ios, iosappdev, learntocode","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"My Experience   The biggest impediment to learning something new is commitment. It isn't...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/the-best-way-to-learn-to-create-apps-is-by-creating-an-app-1h3m","public_reactions_count":10,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"my-experience\" href=\"#my-experience\"\u003e\n  \u003c/a\u003e\n  My Experience\n\u003c/h2\u003e\n\n\u003cp\u003eThe biggest impediment to learning something new is commitment. It isn't hard to work on something for a day or a week, but can you stick it out for a month or a year? If you have that level of willpower, please DM me. I would love to pick your brain.\u003c/p\u003e\n\n\u003cp\u003eFor the average individual finding the willpower to stick with something is hard. Distractions are everywhere, and it is often easiest to just give up. I decided I wanted to learn app development at least half a dozen times. With each effort, I would buy a class or start a YouTube tutorial. And each time, I quickly gave up.\u003c/p\u003e\n\n\u003cp\u003eNo one was proverbially holding my hand to the fire, and on my own, I simply could not muster the willpower to learn by sitting through a class.\u003c/p\u003e\n\n\u003cp\u003eI finally succeeded in my attempt to learn app development by giving up on the learning part and \u003cstrong\u003ejumping straight into doing it\u003c/strong\u003e. I began working on \u003ca href=\"https://apps.apple.com/us/app/compound-interest-solver/id1607884819\"\u003ea simple app to calculate compound interest\u003c/a\u003e. I designed a UI, mocked up an app icon, and before long I had fallen in love with my idea. I cannot claim that it was an amazing idea, but I learned a ton along the way.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"nothing-beats-learning-by-doing\" href=\"#nothing-beats-learning-by-doing\"\u003e\n  \u003c/a\u003e\n  Nothing Beats Learning by Doing\n\u003c/h2\u003e\n\n\u003cp\u003eIf you want to create an app, I bet you have something grandiose in mind and that's great! However, if you're just starting out on your first app, I'd recommend picking a simple idea. Your first app doesn't have to be the next Uber or Airbnb. Reinventing the world is difficult!\u003c/p\u003e\n\n\u003cp\u003eYou will learn far more by working with a simple idea than by trying and failing with your larger vision. This goes back to the old saying, walk before you can run. \u003cstrong\u003eOnce you've developed something, then the next app will be much easier to develop.\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eAnother benefit of developing and shipping an app, even a simple one, is \u003cstrong\u003ebuilding your portfolio\u003c/strong\u003e. iOS development is a lucrative profession, Glassdoor estimates the average salary for a Swift developer is \u003ca href=\"https://www.glassdoor.com/Salaries/swift-developer-salary-SRCH_KO0,15.htm\"\u003e$109,000\u003c/a\u003e. That is a pretty good chunk of cheddar. Releasing an app will build your portfolio and give you something to market yourself with as you hunt for jobs.\u003c/p\u003e\n\n\u003cp\u003eFinally, by building an app you'll learn \u003cstrong\u003eif you actually enjoy the experience\u003c/strong\u003e. Perhaps you will discover another opportunity along the way that is a better fit. \u003cem\u003eThe only way to truly know is by trying your hand at the process.\u003c/em\u003e\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"the-best-way-to-learn-to-create-apps-is-by-creating-an-app-1h3m","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jcagrsqhzzc4ewuvr1z.png","title":"The Best Way to Learn to Create Apps is By Creating an App","video":null,"video_code":null},{"created_at":"2022-09-22T19:51:57.010Z","crossposted_at":"2022-09-22T19:53:05.796Z","edited_at":null,"last_comment_at":"2022-09-22T19:41:05.000Z","published_at":"2022-09-22T19:41:05.000Z","canonical_url":"https://blog.seancoughlin.me/how-to-create-charts-on-ios-using-swiftui","feed_source_url":"https://blog.seancoughlin.me/how-to-create-charts-on-ios-using-swiftui","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: How to Create Charts on iOS using SwiftUI\npublished: true\ndate: 2022-09-22 19:41:05 UTC\ntags: #iOS #mobiledev #SwiftUI #charting\ncanonical_url: https://blog.seancoughlin.me/how-to-create-charts-on-ios-using-swiftui\n---\n\n### SwiftUI Natively Supports Charting\n\nStarting with iOS 16, iPadOS 16, and watchOS 9, SwiftUI supports the native creation of charts. Before those versions were released in 2022, creating a chart required tons of development work or an [outside dependency](https://github.com/danielgindi/Charts).\n\n#### Requirements\n\nCreating charts using SwiftUI requires developing an iOS app targeted at iOS 16 and above.\n\n![Charts requires a version about iOS 16](https://cdn.hashnode.com/res/hashnode/image/upload/v1663872946884/n5-YsGxhP.png)\n\n#### Mark Types\n\nMark types are used to plot data onto charts. Apple defines six mark types.\n\n- [`AreaMark(x: , y: )`](https://developer.apple.com/documentation/charts/areamark)\n- [`LineMark(x: , y: )`](https://developer.apple.com/documentation/charts/linemark)\n- [`PointMark(x: , y: )`](https://developer.apple.com/documentation/charts/pointmark)\n- [`RectangleMark(x: , y: )`](https://developer.apple.com/documentation/charts/rectanglemark)\n- [`RuleMark(xStart: , xEnd: , y:)`](https://developer.apple.com/documentation/charts/rulemark)\n- [`BarMark(x: , y: )`](https://developer.apple.com/documentation/charts/barmark)\n\n## How to Create a Basic Bar Chart\n\nEvery chart starts with a [Chart view](https://developer.apple.com/documentation/charts/chart). The Chart view is the container for the data. Inside the Chart view, you can start providing data using one of Apple's predefined marks.\n\n```\nChart {\n    BarMark(\n        x: .value(\"Type\", \"Swift\"),\n        y: .value(\"Total Count\", 5)\n    )\n    BarMark(\n        x: .value(\"Type\", \"UI\"),\n        y: .value(\"Total Count\", 4)\n    )\n    BarMark(\n        x: .value(\"Type\", \"Chart\"),\n        y: .value(\"Total Count\", 3)\n    )\n }\n\n```\n\n![A basic SwiftUI bar chart example](https://cdn.hashnode.com/res/hashnode/image/upload/v1663873545920/X8V2H6GkF.png)\n\nA more advanced bar graph example can be found over on [my Github](https://github.com/Scc33/iOS-SwiftUI-chart-example/tree/main).\n\n![Created a color SwiftUI bar chart](https://cdn.hashnode.com/res/hashnode/image/upload/v1663873398167/uxNqxFN1c.png)\n\n## How to Create a Line Graph\n\nA line graph can be created by using LineMark inside a Chart view.\n\n```\nChart {\n    LineMark(\n        x: .value(\"Type\", \"Swift\"),\n        y: .value(\"Total Count\", 5)\n    )\n    LineMark(\n        x: .value(\"Type\", \"UI\"),\n        y: .value(\"Total Count\", 4)\n    )\n    LineMark(\n        x: .value(\"Type\", \"Chart\"),\n        y: .value(\"Total Count\", 3)\n    )\n }\n\n```\n\n![Creating a line chart requires using LineMark](https://cdn.hashnode.com/res/hashnode/image/upload/v1663873704077/XrHCFwzSr.png)\n\n## How to Create a Scatter Plot\n\nFinally, a scatter graph can be created by using PointMark inside a Chart view.\n\n```\nChart {\n    PointMark(\n        x: .value(\"Type\", \"Swift\"),\n        y: .value(\"Total Count\", 5)\n    )\n    PointMark(\n        x: .value(\"Type\", \"UI\"),\n        y: .value(\"Total Count\", 4)\n    )\n    PointMark(\n        x: .value(\"Type\", \"Chart\"),\n        y: .value(\"Total Count\", 3)\n    )\n }\n\n```\n\n![image.png](https://cdn.hashnode.com/res/hashnode/image/upload/v1663873793285/lL1uZRMqC.png)\n\n## How to Label Chart Data\n\n- Data can be labeled using a [PlottableValue](https://developer.apple.com/documentation/charts/plottablevalue).\n```\nPointMark(\n    x: .value(\"Type\", \"Swift\"),\n    y: .value(\"Total Count\", 5)\n).foregroundStyle(by: .value(\"Series\", \"Swift\"))\n\n```\n\n### Conclusion\n\nSwiftUI Charts is a powerful and easy-to-use option that brings crucial functionality to native support. Try including it in your next app hacking project.\n\n#### Sources\n\n- [Chart documentation](https://developer.apple.com/documentation/charts)\n- [Creating a chart using Swift Charts](https://developer.apple.com/documentation/charts/creating-a-chart-using-swift-charts)","cached_tag_list":"ios, mobiledev, swiftui, charting","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"SwiftUI Natively Supports Charting   Starting with iOS 16, iPadOS 16, and watchOS 9, SwiftUI...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/how-to-create-charts-on-ios-using-swiftui-6f7","public_reactions_count":5,"processed_html":"\u003ch3\u003e\n  \u003ca name=\"swiftui-natively-supports-charting\" href=\"#swiftui-natively-supports-charting\"\u003e\n  \u003c/a\u003e\n  SwiftUI Natively Supports Charting\n\u003c/h3\u003e\n\n\u003cp\u003eStarting with iOS 16, iPadOS 16, and watchOS 9, SwiftUI supports the native creation of charts. Before those versions were released in 2022, creating a chart required tons of development work or an \u003ca href=\"https://github.com/danielgindi/Charts\"\u003eoutside dependency\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"requirements\" href=\"#requirements\"\u003e\n  \u003c/a\u003e\n  Requirements\n\u003c/h4\u003e\n\n\u003cp\u003eCreating charts using SwiftUI requires developing an iOS app targeted at iOS 16 and above.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ndjbjzoD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1663872946884/n5-YsGxhP.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ndjbjzoD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1663872946884/n5-YsGxhP.png\" alt=\"Charts requires a version about iOS 16\" loading=\"lazy\" width=\"800\" height=\"190\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"mark-types\" href=\"#mark-types\"\u003e\n  \u003c/a\u003e\n  Mark Types\n\u003c/h4\u003e\n\n\u003cp\u003eMark types are used to plot data onto charts. Apple defines six mark types.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.apple.com/documentation/charts/areamark\"\u003e\u003ccode\u003eAreaMark(x: , y: )\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.apple.com/documentation/charts/linemark\"\u003e\u003ccode\u003eLineMark(x: , y: )\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.apple.com/documentation/charts/pointmark\"\u003e\u003ccode\u003ePointMark(x: , y: )\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.apple.com/documentation/charts/rectanglemark\"\u003e\u003ccode\u003eRectangleMark(x: , y: )\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.apple.com/documentation/charts/rulemark\"\u003e\u003ccode\u003eRuleMark(xStart: , xEnd: , y:)\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.apple.com/documentation/charts/barmark\"\u003e\u003ccode\u003eBarMark(x: , y: )\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"how-to-create-a-basic-bar-chart\" href=\"#how-to-create-a-basic-bar-chart\"\u003e\n  \u003c/a\u003e\n  How to Create a Basic Bar Chart\n\u003c/h2\u003e\n\n\u003cp\u003eEvery chart starts with a \u003ca href=\"https://developer.apple.com/documentation/charts/chart\"\u003eChart view\u003c/a\u003e. The Chart view is the container for the data. Inside the Chart view, you can start providing data using one of Apple's predefined marks.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eChart {\n    BarMark(\n        x: .value(\"Type\", \"Swift\"),\n        y: .value(\"Total Count\", 5)\n    )\n    BarMark(\n        x: .value(\"Type\", \"UI\"),\n        y: .value(\"Total Count\", 4)\n    )\n    BarMark(\n        x: .value(\"Type\", \"Chart\"),\n        y: .value(\"Total Count\", 3)\n    )\n }\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--OoaERxub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1663873545920/X8V2H6GkF.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--OoaERxub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1663873545920/X8V2H6GkF.png\" alt=\"A basic SwiftUI bar chart example\" loading=\"lazy\" width=\"800\" height=\"1511\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eA more advanced bar graph example can be found over on \u003ca href=\"https://github.com/Scc33/iOS-SwiftUI-chart-example/tree/main\"\u003emy Github\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--xFVzazzr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1663873398167/uxNqxFN1c.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--xFVzazzr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1663873398167/uxNqxFN1c.png\" alt=\"Created a color SwiftUI bar chart\" loading=\"lazy\" width=\"800\" height=\"1511\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"how-to-create-a-line-graph\" href=\"#how-to-create-a-line-graph\"\u003e\n  \u003c/a\u003e\n  How to Create a Line Graph\n\u003c/h2\u003e\n\n\u003cp\u003eA line graph can be created by using LineMark inside a Chart view.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eChart {\n    LineMark(\n        x: .value(\"Type\", \"Swift\"),\n        y: .value(\"Total Count\", 5)\n    )\n    LineMark(\n        x: .value(\"Type\", \"UI\"),\n        y: .value(\"Total Count\", 4)\n    )\n    LineMark(\n        x: .value(\"Type\", \"Chart\"),\n        y: .value(\"Total Count\", 3)\n    )\n }\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--NNyKmzPp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1663873704077/XrHCFwzSr.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--NNyKmzPp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1663873704077/XrHCFwzSr.png\" alt=\"Creating a line chart requires using LineMark\" loading=\"lazy\" width=\"800\" height=\"1511\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"how-to-create-a-scatter-plot\" href=\"#how-to-create-a-scatter-plot\"\u003e\n  \u003c/a\u003e\n  How to Create a Scatter Plot\n\u003c/h2\u003e\n\n\u003cp\u003eFinally, a scatter graph can be created by using PointMark inside a Chart view.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eChart {\n    PointMark(\n        x: .value(\"Type\", \"Swift\"),\n        y: .value(\"Total Count\", 5)\n    )\n    PointMark(\n        x: .value(\"Type\", \"UI\"),\n        y: .value(\"Total Count\", 4)\n    )\n    PointMark(\n        x: .value(\"Type\", \"Chart\"),\n        y: .value(\"Total Count\", 3)\n    )\n }\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--oHGfOgI4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1663873793285/lL1uZRMqC.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--oHGfOgI4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1663873793285/lL1uZRMqC.png\" alt=\"image.png\" loading=\"lazy\" width=\"800\" height=\"1511\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"how-to-label-chart-data\" href=\"#how-to-label-chart-data\"\u003e\n  \u003c/a\u003e\n  How to Label Chart Data\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eData can be labeled using a \u003ca href=\"https://developer.apple.com/documentation/charts/plottablevalue\"\u003ePlottableValue\u003c/a\u003e.\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ePointMark(\n    x: .value(\"Type\", \"Swift\"),\n    y: .value(\"Total Count\", 5)\n).foregroundStyle(by: .value(\"Series\", \"Swift\"))\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eSwiftUI Charts is a powerful and easy-to-use option that brings crucial functionality to native support. Try including it in your next app hacking project.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"sources\" href=\"#sources\"\u003e\n  \u003c/a\u003e\n  Sources\n\u003c/h4\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.apple.com/documentation/charts\"\u003eChart documentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.apple.com/documentation/charts/creating-a-chart-using-swift-charts\"\u003eCreating a chart using Swift Charts\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"how-to-create-charts-on-ios-using-swiftui-6f7","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oixuay3sx6w8bmx9po84.png","title":"How to Create Charts on iOS using SwiftUI","video":null,"video_code":null},{"created_at":"2022-12-11T04:37:14.407Z","crossposted_at":"2022-12-11T04:39:17.361Z","edited_at":null,"last_comment_at":"2022-12-11T04:29:19.000Z","published_at":"2022-12-11T04:29:19.000Z","canonical_url":"https://blog.seancoughlin.me/uiuc-mcs-cs-427-review-software-engineering","feed_source_url":"https://blog.seancoughlin.me/uiuc-mcs-cs-427-review-software-engineering","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: UIUC MCS - CS 427 Review - Software Engineering\npublished: true\ndate: 2022-12-11 04:29:19 UTC\ntags: university, school, review, softwareengineering\ncanonical_url: https://blog.seancoughlin.me/uiuc-mcs-cs-427-review-software-engineering\n---\n\n## Overview\n\n- **TLDR:** For undergrads or those changing professions to software engineering this could be a good (even challenging) course. If you are already a software engineer, this class won't be worth your time.\n\n- **Difficulty:** Easy\n\n- **Opinion:** Disliked\n\n- **Weekly workload:** 6 hours\n\n- **Semester taken:** Fall 2022\n\n## Class Content\n\n### Lecture Content\n\nThe course was a survey of broad software engineering principles. The lectures covered software engineering and methodologies, requirements designing, a few architecture paradigms, object-oriented design, testing, debugging, and maintenance.\n\nThe only topics that were particularly in-depth were object-oriented design and testing because those each had two weeks' worth of lectures. There were also several optional interviews to watch with industry professionals. Each week had a corresponding for-credit quiz with unlimited attempts.\n\n### MPs\n\nThere are five machine problems. None of the assignments took me longer than two to three hours, and the last one I completed in less than an hour. The MPs had been recently redesigned and tied together nicely. Each one covered a different course topic in the [jsoup](https://jsoup.org) code base.\n\n- MP One - Java build systems (Gradle and Maven)\n\n- MP Two - Design Patterns\n\n- MP Three - Testing (JUnit and random test creation)\n\n- MP Four - Debugging\n\n- MP Five - Code Smells\n\n### Final Project\n\nThe final project was building an Android app according to a specification provided by the instructors. The project was completed in groups of eight. One member of the group acted as manager, one member acted as a tech lead, and the others were regular developers. Groups are assigned semi-randomly, as they take into account experience and time availability.\n\nThe project is split into five deliverables with deadlines spaced two weeks apart. They would not release the next section until the previous one was completed. While working full-time, I found this unreasonable and difficult to time budget for.\n\nIf you have previous Android or app development experience, then the assignment will be rather trivial. However, if Android development is brand new, expect to put some effort into this assignment.\n\n### Essay\n\nGrad students, or any student in the 4 credit hour version, write a 5-10 page, single-spaced paper on a software engineering book. The course staff provides a list of acceptable books but is open to suggestions for additional books. There were quite a few complaints about the assignment on the course forums, but I rather liked the assignment and my book choice. I read _The_ _Pragmatic Programmer_ which ended up being quite good and an easy read.\n\n### The Final\n\nThe final was 15% of the final grade, one and one-half hours, and hosted on ProctorU. I find using ProctorU very distasteful, but unfortunately, there was no alternative. The final was closed-book.\n\nOverall, the final was relatively easy, but also quite nit-picky and required an above-average amount of memorization. I would highly recommend keeping a list of key terms throughout the semester as it will help your study process.\n\n## My takeaways\n\nI would say the course quality was overall pretty good and it seemed like the instructors were passionate about making it better. Easily the best part of the class was the responsiveness of TAs and professors. They would quickly fix any course issues and respond to questions. The course offered up to 5% for participating in the forums (Campuswire), so students were also active and readily answered any questions.\n\nDespite the overall quality of the course, I still was not the biggest fan. The content was too trivial if you already have engineering experience. I studied computer science as an undergrad, had two software engineering internships, and have been working as an entry-level software engineer for a year. By no means am I an expert software engineer, but I do have some experience which made this class feel elementary. Most of the students and my entire final project group were undergrads, which left me feeling out of place as a grad student.\n\nMy recommendation is to skip this course if you already have the experience. However, if you don't have much experience, this is a good class, and you will learn a lot.\n\n---\n\nOriginally published at https://blog.seancoughlin.me.\n","cached_tag_list":"university, school, review, softwareengineering","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Overview    TLDR: For undergrads or those changing professions to software engineering this...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/uiuc-mcs-cs-427-review-software-engineering-3cbo","public_reactions_count":2,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"overview\" href=\"#overview\"\u003e\n  \u003c/a\u003e\n  Overview\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eTLDR:\u003c/strong\u003e For undergrads or those changing professions to software engineering this could be a good (even challenging) course. If you are already a software engineer, this class won't be worth your time.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eDifficulty:\u003c/strong\u003e Easy\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eOpinion:\u003c/strong\u003e Disliked\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eWeekly workload:\u003c/strong\u003e 6 hours\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSemester taken:\u003c/strong\u003e Fall 2022\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"class-content\" href=\"#class-content\"\u003e\n  \u003c/a\u003e\n  Class Content\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"lecture-content\" href=\"#lecture-content\"\u003e\n  \u003c/a\u003e\n  Lecture Content\n\u003c/h3\u003e\n\n\u003cp\u003eThe course was a survey of broad software engineering principles. The lectures covered software engineering and methodologies, requirements designing, a few architecture paradigms, object-oriented design, testing, debugging, and maintenance.\u003c/p\u003e\n\n\u003cp\u003eThe only topics that were particularly in-depth were object-oriented design and testing because those each had two weeks' worth of lectures. There were also several optional interviews to watch with industry professionals. Each week had a corresponding for-credit quiz with unlimited attempts.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"mps\" href=\"#mps\"\u003e\n  \u003c/a\u003e\n  MPs\n\u003c/h3\u003e\n\n\u003cp\u003eThere are five machine problems. None of the assignments took me longer than two to three hours, and the last one I completed in less than an hour. The MPs had been recently redesigned and tied together nicely. Each one covered a different course topic in the \u003ca href=\"https://jsoup.org\"\u003ejsoup\u003c/a\u003e code base.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eMP One - Java build systems (Gradle and Maven)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eMP Two - Design Patterns\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eMP Three - Testing (JUnit and random test creation)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eMP Four - Debugging\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eMP Five - Code Smells\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"final-project\" href=\"#final-project\"\u003e\n  \u003c/a\u003e\n  Final Project\n\u003c/h3\u003e\n\n\u003cp\u003eThe final project was building an Android app according to a specification provided by the instructors. The project was completed in groups of eight. One member of the group acted as manager, one member acted as a tech lead, and the others were regular developers. Groups are assigned semi-randomly, as they take into account experience and time availability.\u003c/p\u003e\n\n\u003cp\u003eThe project is split into five deliverables with deadlines spaced two weeks apart. They would not release the next section until the previous one was completed. While working full-time, I found this unreasonable and difficult to time budget for.\u003c/p\u003e\n\n\u003cp\u003eIf you have previous Android or app development experience, then the assignment will be rather trivial. However, if Android development is brand new, expect to put some effort into this assignment.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"essay\" href=\"#essay\"\u003e\n  \u003c/a\u003e\n  Essay\n\u003c/h3\u003e\n\n\u003cp\u003eGrad students, or any student in the 4 credit hour version, write a 5-10 page, single-spaced paper on a software engineering book. The course staff provides a list of acceptable books but is open to suggestions for additional books. There were quite a few complaints about the assignment on the course forums, but I rather liked the assignment and my book choice. I read \u003cem\u003eThe\u003c/em\u003e \u003cem\u003ePragmatic Programmer\u003c/em\u003e which ended up being quite good and an easy read.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"the-final\" href=\"#the-final\"\u003e\n  \u003c/a\u003e\n  The Final\n\u003c/h3\u003e\n\n\u003cp\u003eThe final was 15% of the final grade, one and one-half hours, and hosted on ProctorU. I find using ProctorU very distasteful, but unfortunately, there was no alternative. The final was closed-book.\u003c/p\u003e\n\n\u003cp\u003eOverall, the final was relatively easy, but also quite nit-picky and required an above-average amount of memorization. I would highly recommend keeping a list of key terms throughout the semester as it will help your study process.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"my-takeaways\" href=\"#my-takeaways\"\u003e\n  \u003c/a\u003e\n  My takeaways\n\u003c/h2\u003e\n\n\u003cp\u003eI would say the course quality was overall pretty good and it seemed like the instructors were passionate about making it better. Easily the best part of the class was the responsiveness of TAs and professors. They would quickly fix any course issues and respond to questions. The course offered up to 5% for participating in the forums (Campuswire), so students were also active and readily answered any questions.\u003c/p\u003e\n\n\u003cp\u003eDespite the overall quality of the course, I still was not the biggest fan. The content was too trivial if you already have engineering experience. I studied computer science as an undergrad, had two software engineering internships, and have been working as an entry-level software engineer for a year. By no means am I an expert software engineer, but I do have some experience which made this class feel elementary. Most of the students and my entire final project group were undergrads, which left me feeling out of place as a grad student.\u003c/p\u003e\n\n\u003cp\u003eMy recommendation is to skip this course if you already have the experience. However, if you don't have much experience, this is a good class, and you will learn a lot.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"uiuc-mcs-cs-427-review-software-engineering-3cbo","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v9d9bxkpxkr6qet40zq6.png","title":"UIUC MCS - CS 427 Review - Software Engineering","video":null,"video_code":null},{"created_at":"2022-12-14T04:32:24.207Z","crossposted_at":"2022-12-14T04:34:02.358Z","edited_at":null,"last_comment_at":"2022-12-14T04:23:01.000Z","published_at":"2022-12-14T04:23:01.000Z","canonical_url":"https://blog.seancoughlin.me/uiuc-mcs-cs-435-review-cloud-computer-networking","feed_source_url":"https://blog.seancoughlin.me/uiuc-mcs-cs-435-review-cloud-computer-networking","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: UIUC MCS - CS 435 Review - Cloud Computer Networking\npublished: true\ndate: 2022-12-14 04:23:01 UTC\ntags: #softwareengineering #cloudnetworking #university #gradschool\ncanonical_url: https://blog.seancoughlin.me/uiuc-mcs-cs-435-review-cloud-computer-networking\n---\n\n## Overview\n\n- **TLDR:** 435 is a high workload, high reward class with a dedicated professor and practical assignments that provide a solid basis for understanding computer networking.\n\n- **Difficulty:** Hard\n\n- **Opinion:** Enjoyed\n\n- **Weekly workload:** 12 hours\n\n- **Semester taken:** Fall 2022\n\n## Class Content\n\n### Lecture Content\n\nThe class was roughly split into two components. The first half of the semester focused on routing and how the internet works. These lectures were very high quality and instructive. They cover the networking layer model, routing algorithms like BGP, transport layer TCP/UDP, and application layer functionality like DNS.\n\nThe second half of the semester focused on data center networking including, Clos topologies, virtualization, SDN, CDN, and more. There were many attached research papers explaining the academic underpinnings of these applications. This portion of the class was outdated and felt like it did not cover any innovations past the mid-2010s.\n\n### MPs\n\nThe course had three machine problems. MP 1 was a good warmup exercise in client and server interaction. It required implementing HTTP GET requests using C socket programming.\n\nThe second MP was monstrous. Going into the class, I had seen a lot of posts online about the rigor of this assignment which I brushed off. I felt confident in my C skills and had the expectation that most embellish workloads. I was terribly wrong.\n\nMP 2 requires building an entire router from the ground up. You must implement in C/C++ either link-state or distance-vector routing, the data and control plane, and a protocol for message exchange. My solution was almost two thousand lines of dense, multithreaded, low-level code. I would recommend brushing up on C and clearing a few weekends in preparation for this assignment.\n\nThe last MP was the easiest and shortest. The assignment simulates a data center running a streaming application, and you provide routing instructions using software-defined networking instructions. Based on the routing instructions you give the simulated data center, you see the quality of the streaming application change.\n\n- MP 1 - HTTP Client (5-10 hours of work and 15% of the final grade)\n\n- MP 2 - Routing (50+ hours of work and 30% of the final grade)\n\n- MP 3/4 - Software Defined Networking (5 hours of work and 15% of the final grade)\n\n### Final\n\nThe final was thirty percent of the final grade and two hours long. The exam was comprehensive and open-note. It was a mixture of multiple choice, select multiple, and math calculations. The difficulty was manageable, but the assignment was unfortunately hosted on ProctorU.\n\n## My takeaways\n\nCS 435 was a great class. The lecture quality was solid, the assignments were a good use of time, and the professor cared a lot. The course used Campuswire as the forum, and the professor and TAs were very responsive to questions.\n\nThe one bad mark on the class was the cloud portion felt outdated and not as rigorous. The course has _cloud_ in the title which offers a certain appealing buzz. I wouldn't say that it was bad content. You definitely will learn about cloud networks, but this section could use a refactor.\n\nThe class workload was highly varied. Some weeks I put zero to five hours of work in. In October, I was easily putting in 20-30 hours a week to keep up with the second MP. I would recommend staying as far ahead on lectures as possible which gives more wiggle room for when MP 2 time comes.\n\nOverall, I would recommend this class. I learned a lot about networking, and I found the material engaging.\n\n### More Reviews\n\nCheck out [uiucmcs.org](https://uiucmcs.org/courses/CS-435-Cloud-Networking) for more reviews of MCS courses. I don't know who maintains this site, but it's a good collection of reviews from many semesters.\n\nI have also written up a [CS 427 review](https://blog.seancoughlin.me/uiuc-mcs-cs-427-review-software-engineering#write-comment).\n\n---\n\n\nOriginally published at https://blog.seancoughlin.me.","cached_tag_list":"softwareengineering, cloudnetworking, university, gradschool","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Overview    TLDR: 435 is a high workload, high reward class with a dedicated professor and...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/uiuc-mcs-cs-435-review-cloud-computer-networking-58c5","public_reactions_count":2,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"overview\" href=\"#overview\"\u003e\n  \u003c/a\u003e\n  Overview\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eTLDR:\u003c/strong\u003e 435 is a high workload, high reward class with a dedicated professor and practical assignments that provide a solid basis for understanding computer networking.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eDifficulty:\u003c/strong\u003e Hard\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eOpinion:\u003c/strong\u003e Enjoyed\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eWeekly workload:\u003c/strong\u003e 12 hours\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSemester taken:\u003c/strong\u003e Fall 2022\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"class-content\" href=\"#class-content\"\u003e\n  \u003c/a\u003e\n  Class Content\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"lecture-content\" href=\"#lecture-content\"\u003e\n  \u003c/a\u003e\n  Lecture Content\n\u003c/h3\u003e\n\n\u003cp\u003eThe class was roughly split into two components. The first half of the semester focused on routing and how the internet works. These lectures were very high quality and instructive. They cover the networking layer model, routing algorithms like BGP, transport layer TCP/UDP, and application layer functionality like DNS.\u003c/p\u003e\n\n\u003cp\u003eThe second half of the semester focused on data center networking including, Clos topologies, virtualization, SDN, CDN, and more. There were many attached research papers explaining the academic underpinnings of these applications. This portion of the class was outdated and felt like it did not cover any innovations past the mid-2010s.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"mps\" href=\"#mps\"\u003e\n  \u003c/a\u003e\n  MPs\n\u003c/h3\u003e\n\n\u003cp\u003eThe course had three machine problems. MP 1 was a good warmup exercise in client and server interaction. It required implementing HTTP GET requests using C socket programming.\u003c/p\u003e\n\n\u003cp\u003eThe second MP was monstrous. Going into the class, I had seen a lot of posts online about the rigor of this assignment which I brushed off. I felt confident in my C skills and had the expectation that most embellish workloads. I was terribly wrong.\u003c/p\u003e\n\n\u003cp\u003eMP 2 requires building an entire router from the ground up. You must implement in C/C++ either link-state or distance-vector routing, the data and control plane, and a protocol for message exchange. My solution was almost two thousand lines of dense, multithreaded, low-level code. I would recommend brushing up on C and clearing a few weekends in preparation for this assignment.\u003c/p\u003e\n\n\u003cp\u003eThe last MP was the easiest and shortest. The assignment simulates a data center running a streaming application, and you provide routing instructions using software-defined networking instructions. Based on the routing instructions you give the simulated data center, you see the quality of the streaming application change.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eMP 1 - HTTP Client (5-10 hours of work and 15% of the final grade)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eMP 2 - Routing (50+ hours of work and 30% of the final grade)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eMP 3/4 - Software Defined Networking (5 hours of work and 15% of the final grade)\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"final\" href=\"#final\"\u003e\n  \u003c/a\u003e\n  Final\n\u003c/h3\u003e\n\n\u003cp\u003eThe final was thirty percent of the final grade and two hours long. The exam was comprehensive and open-note. It was a mixture of multiple choice, select multiple, and math calculations. The difficulty was manageable, but the assignment was unfortunately hosted on ProctorU.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"my-takeaways\" href=\"#my-takeaways\"\u003e\n  \u003c/a\u003e\n  My takeaways\n\u003c/h2\u003e\n\n\u003cp\u003eCS 435 was a great class. The lecture quality was solid, the assignments were a good use of time, and the professor cared a lot. The course used Campuswire as the forum, and the professor and TAs were very responsive to questions.\u003c/p\u003e\n\n\u003cp\u003eThe one bad mark on the class was the cloud portion felt outdated and not as rigorous. The course has \u003cem\u003ecloud\u003c/em\u003e in the title which offers a certain appealing buzz. I wouldn't say that it was bad content. You definitely will learn about cloud networks, but this section could use a refactor.\u003c/p\u003e\n\n\u003cp\u003eThe class workload was highly varied. Some weeks I put zero to five hours of work in. In October, I was easily putting in 20-30 hours a week to keep up with the second MP. I would recommend staying as far ahead on lectures as possible which gives more wiggle room for when MP 2 time comes.\u003c/p\u003e\n\n\u003cp\u003eOverall, I would recommend this class. I learned a lot about networking, and I found the material engaging.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"more-reviews\" href=\"#more-reviews\"\u003e\n  \u003c/a\u003e\n  More Reviews\n\u003c/h3\u003e\n\n\u003cp\u003eCheck out \u003ca href=\"https://uiucmcs.org/courses/CS-435-Cloud-Networking\"\u003euiucmcs.org\u003c/a\u003e for more reviews of MCS courses. I don't know who maintains this site, but it's a good collection of reviews from many semesters.\u003c/p\u003e\n\n\u003cp\u003eI have also written up a \u003ca href=\"https://blog.seancoughlin.me/uiuc-mcs-cs-427-review-software-engineering#write-comment\"\u003eCS 427 review\u003c/a\u003e.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"uiuc-mcs-cs-435-review-cloud-computer-networking-58c5","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5pzb36rzs7waqh8zawz3.png","title":"UIUC MCS - CS 435 Review - Cloud Computer Networking","video":null,"video_code":null},{"created_at":"2023-01-04T23:41:10.634Z","crossposted_at":"2023-01-04T23:42:32.110Z","edited_at":null,"last_comment_at":"2023-01-04T23:35:41.000Z","published_at":"2023-01-04T23:35:41.000Z","canonical_url":"https://blog.seancoughlin.me/the-pragmatic-programmer-book-review","feed_source_url":"https://blog.seancoughlin.me/the-pragmatic-programmer-book-review","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: The Pragmatic Programmer - Book Review\npublished: true\ndate: 2023-01-04 23:35:41 UTC\ntags: #review #bookreview #softwareengineering\ncanonical_url: https://blog.seancoughlin.me/the-pragmatic-programmer-book-review\n---\n\n## Background\n\nI wrote this as the final report for CS 427 at UIUC which I took as part of the Master of Computer Science program. This review is based on the 20th Anniversary Edition.\n\nThe essay format follows a summary of each section and my personal software engineering experiences. Please enjoy!\n\nCredit: The image is generated by [Dall-E 2](https://openai.com/dall-e-2/).\n\n## **Section 1: A Pragmatic Philosophy**\n\n### **Summary**\n\nThe authors of _The Pragmatic Programmer_, David Thomas and Andrew Hunt, begin the book by poignantly stating, this book is about you. They define a pragmatic programmer as someone who takes responsibility for their actions. Their definition of a pragmatic programmer leads to the first conclusion of the book: you have agency. Having agency means that you can take action. For example, if you work in a bad environment, try to improve it. Or, if you want to work remotely, ask for that perk. It is easy to forget that we can always try to make changes. That does not mean our changes will always be successful, but a pragmatic person will at least try.\n\nNext, Mr. Thomas and Mr. Hunt dive into their second topic, humorously titled: The Cat Ate My Source Code. The key to this topic is that a programmers job is to provide solutions, not excuses. By discovering problems, providing findings, and developing solutions, you can earn team trust, create better products, and advance your career.\n\nPart of the job of a pragmatic programmer is to avoid what the authors dub software entropy. More widely known as technical debt, software entropy emerges as engineers develop a lax attitude toward the quality of their codebase. Tech debt happens once broken windows occur in the code. A broken window exists in code wherever there are poor designs or mediocre code. As soon as some substandard code emerges, future developers are more likely to feel alright adding more poor-quality code. Avoiding technical debt growth requires ensuring it does not ever appear in the first place. More simply put, a culture of high quality perpetuates itself, and a culture of low quality will lead to more low-quality software. The parallel suggestion is software can be just good enough. It does not have to be perfect. Handling every bug or edge case might not be necessary to hit the requirements, and it can add unnecessary complexity and effort to a project.\n\nThe last tidbit of information in this chapter is to invest in your knowledge portfolio. Similar to investments in stocks and bonds, the authors advise investing wisely in your technical skills. Maintaining steady investments in new technologies, diversifying your knowledge base, and getting in early (or buying low in investing parlance) are pivotal for advancing your career and becoming a more effective engineer.\n\n### **Experience**\n\nIn my final semester of college, I worked on a comprehensive React application for a web development course. The project went end to end, from idea generation to demonstrating a final product. Along the way, my group realized many of our pitched ideas were not feasible as we had imagined. However, we had already started much of the implementation. To still meet project requirements, we altered many of our initial ideas. The sudden change of goals left the code base in a sorry state because we originally designed it with different use cases in mind. The project ran for one semester, and our group was only four large, so we stuck bandages on our code and limped the repository to the finish line.\n\nI think there are two main reasons why we accumulated so much technical debt. First, we drastically altered what we were trying to do. Shifting requirements are routine and lead to engineering dead ends. Second, we knew this would only be a one-semester project, so we quickly fell prey to what the authors called broken window syndrome. Our focus as college students was to minimize effort and maximize grades. Frankly, that optimization problem does not lend itself well to writing good code.\n\nOne perk of working on this React project was I picked up frontend development skills with an in-demand skill. That was a decisive investment in my knowledge portfolio which has paid dividends. I currently work as a developer using React nearly every day. Perhaps my Senior year group did not create a great project, but I grew my knowledge portfolio, and I have used that ever since.\n\n## **Section 2: A Pragmatic Approach**\n\n### **Summary**\n\nThe second section of _The Pragmatic Programmer_ dives deeper into the elements of good design and how programmers can bring high-quality design into their daily roles. First, the authors claim that a vital element of good design is that it is easy to change. Being easy to change is more important than other elements because it is fundamental to meet many requirements. In later topics, the authors will address many elements of good design; however, they posit that all these other design principles are motivated by the easy-to-change principle.\n\nSecond, the authors reveal their views on one of the most common software engineering principles: DRY or dont repeat yourself. DRY is important because having a single source of truth will make maintenance easier and bugs easier to find. There are many techniques, like functions and object-oriented programming, that assist in living out DRY principles. A companion to DRY is coupling. Highly coupled code will cause changes in one location to have effects elsewhere. To avoid coupling code should be orthogonal or independent. Ideally, code will be more reversible when design, DRY, and orthogonality are combined. Reversibility is desirable because business requirements are fluid, and mistakes happen. If the system is too rigid, it will be difficult to retrace your steps if required.\n\nThe last topic in this section is on estimating. Estimating time to completion is an essential component of project management in the business world. Estimation is challenging because projects are so complicated and specialized. The authors advise breaking each system into components and estimating the time to completion for each piece. A technique they recommend is PERT. PERT tasks have optimistic, likely, and pessimistic estimates that construct an overall project estimate. Even with good estimation techniques, it is almost impossible to give accurate dates, so avoiding the question and saying, Ill get back to you, is often the best technique.\n\n### **Experience**\n\nThere are many desirable outcomes that good design can strive to achieve. These outcomes include reliability, cost, simplicity, flexibility, and many more. In my experience, flexibility is the number one goal of good software design.\n\nI work on a user-facing application in my job as a software engineer. We must build our applications exactly to comparables from our business partners. The comparables, or comps as we colloquially call them, are designed to fit our brand promise. Our business partners put these comparables through many rounds of review and are constantly changing. As the engineer implementing these specifications, the code I am writing must be flexible and extensible enough to adjust to morphing requirements.\n\nI believe that second to flexibility, simplicity is the next most important trait of quality software design. Simplicity is fundamental to onboarding new employees, scaling applications, adding new features, and ensuring reliability. After all, if an application is too complex, how will anyone know how to maintain it?\n\nKey to the idea of simple software development is the DRY principle. DRY forces simplicity because there will be less code overall. One of the main enemies of DRY is the copy-paste functionality which makes it too easy to duplicate code. I find that when I am using Ctrl-C and Ctrl-V I often violate DRY. I have also found that to not repeat myself, I must think harder. When I think more deeply about a problem, I arrive at better solutions. I interact with the DRY principle every day as a professional software engineer at a large company. Codebases at work easily number in the tens of thousands of lines. To make that scale manageable, and adhere to DRY, we use the MVCS pattern.\n\nMVCS stands for model, view, controller, and service. Under MVCS, the model represents some data stored in an object, the view is a user-interactable layer, the controller routes requests, and services handle all the logic. Splitting the codebase up into these four chunkable ideas improves simplicity. Additionally, a well-designed service and model can often be reused by multiple controllers adhering to the DRY principle. When I first onboarded, this entire paradigm was brand new to me. I had more experience with haphazardly throwing code together (an approach that had worked well in college). However, I have come to appreciate working with a formal paradigm. MVCS improves the code quality and makes my job easier.\n\n## **Section 3: The Basic Tools**\n\n### **Summary**\n\nThe third section of _The Pragmatic Programmer_ builds on the idea that good tools extend what the human brain can do. According to the authors, programmers, like any craftsman, rely on tools. First among these tools is the powerfully simple plain text. The authors' plain text love comes from its human readability. Any data format that is human readable can be used long after the original application that used it is sunset or the developer who created it is gone. That sort of permanence is the friend of a developer trying to understand and maintain others' code.\n\nThe next tool is the old, reliable shell. This section brings the interesting acronyms WYSIWYG, or what you see is what you get, and WYSIAYG, or what you see is all you get. The authors explain that GUIs exhibit both WYSIWYG and WYSIAYG. It is simultaneously their paramount advantage and disadvantage. On the other hand, shells are harder to learn but unbelievably powerful. Stitching their simple instructions together can complete an infinite array of actions. The authors advise never to forget the power of the shell, even in our modern GUI age.\n\nAt last, the authors broach one of the most zealous parts of programming; the editor. Mr. Thomas and Mr. Hunt instruct that the editor you use does not matter. Instead, focus on improving the efficiency of your skills with your chosen editor. Over time learning the shortcuts and features of a given platform will improve your productivity and allow you to write more code or write code faster.\n\nAnother crucial component of modern software engineering is version control. Or, as the authors describe it: the giant undo key. Version control allows you to track the history of a project, manage multiple versions, and coordinate development across a team. Version control systems often come with an external repository like GitHub or Bitbucket, where you can backup versions, share work, and set up automation. For all these reasons, version control should track every project. As an engineer, you will thank yourself for using version control.\n\n### **Experience**\n\nFor most of my programming history, I have been a Java developer. In the seven years I have been writing Java code, I have used a variety of editors. However, most commonly, I stick to using IntelliJ. IntelliJ is a tremendously powerful integrated development environment. The debugging features, test runners, Git integrations, and plugins have saved me a lot of time and drive most of my workflow. However, all that power comes with a lot of complexity. Every feature requires a button which makes for a cluttered GUI, and the number of keyboard shortcuts rivals the number of stars in the sky. Marching along that learning curve has been arduous.\n\nWhen I started programming, I considered myself a println warrior. I stuck to adding print statements whenever I needed to debug, but this proved untenable once I started working with larger projects. The IntelliJ debugger was a major skill I needed to dedicate time to understand. When I started using it, I was not as productive as I had been with my original print statement method, but my skills have since grown, and now my debugging skills far outstrip those early days. This experience corresponds with Messrs Thomas and Hunts advice to Achieve Editor Fluency. I spent too much time ignoring the powerful features lying just a few clicks away. My purposeful ignorance led to years of lower productivity. Estimating is difficult, but I would feel confident to guess that achieving my editor fluency was an order of magnitude increase in my debugging skills. It was not even hard to learn. It just required a little dedicated effort.\n\n## **Section 4: Pragmatic Paranoia**\n\n### **Summary**\n\nIn the fourth section, the authors expound on the idea that no software is perfect. The pragmatic programmer recognizes software flaws and uses their skills to adjust. One tool for adjusting is contract design. Designing software by contract is when behavior is defined before programming begins. When constructing the contract two parties will agree on valid scenarios. The key to making contracts that are feasible to implement is strictly defining what inputs you will accept and promising little in return. Contract design should be a give-and-take where the parties come to the minimal requirements necessary to implement the project.\n\nNext, recognizing that software is imperfect, the authors lay out their position on fault tolerance. They fall squarely into the let the program crash camp. The authors steelman argument is that a crashed program does far less harm than a crippled program. A faulty program could do dangerous things like write bad data to the database or needlessly consume expensive computing resources. Additionally, an engineer is apt to notice a crashed program sooner than other bugs. Noticing errors early and fast is crucial to speeding up any development cycle.\n\nThe final pivotal topic of the chapter is to take small steps. The authors instruct to take small steps at the code and design level. At the code level, writing a small code chunk and a unit test together results in higher-quality code with fewer errors. At a higher level, we can only design so far into the future. New technologies, requirements, or black swan events will completely alter the ideal design. By and large, these are all unpredictable events, so there is no use expending effort trying to design your way around distant corners.\n\n### **Experience**\n\nWhen I started learning to drive, my dad advised me to be a defensive driver. Similar to that advice, _The Pragmatic Programmer_ says that pragmatic programmers build defenses against their own mistakes. Programmers must be aware that other programmers are not perfect, just like drivers must always be aware that other drivers are flawed. Assuming others make mistakes, a programmer can develop more fault-tolerant solutions. However, fault tolerance is only valuable up to a limited point.\n\nMy job involves handling sensitive user information. For legal and business reasons, we must be extremely careful and accurate when collecting and moving that data. A security vulnerability or corrupt user information in our systems would be a terrible outcome for the business and our customers. We have built into our work systems a measure of fault tolerance. However, when that fails, we show our users a technical difficulty page. The technical difficulty page simply says, \"We are sorry. Please try again later.\" Showing the technical difficulty page is the equivalent of the program throwing up its arms and saying I cannot process this. I like to think of it as a graceful crash. By showing a sorry page, we are being forthright with our users and protecting the business.\n\n## **Section 5: Bend, or Break**\n\n### **Summary**\n\nIn Chapter 5, the book explores flexible writing code. The world is rapidly changing, and software systems must be malleable enough to adjust. The first way to add flexibility is through decoupling at the code level. Decoupling is similar to the previously mentioned orthogonality. Ideally, code should be local and only affect internal structures. Decoupling code makes it easier to change in the future.\n\nNext, the authors write about events. Events are newly available information. For example, a mouse click, a keyboard press, or a Google search are all events. The authors first describe using finite state machines to model events and what should happen for each event. Then they describe various event handling patterns like observer, pubsub, streams, and reactive programming. These techniques are all useful for managing and processing events.\n\nThe last topic in this section is configuration. Programs typically have constants that are required but have fungible values. For example, feature flags, logging levels, API keys, and ports are all common configuration targets. Whenever there are values that can be abstracted out, it is worthwhile to put these into separate configuration files. Config files are written in dedicated config languages like YAML or JSON. They can also be hosted externally, which minimizes application deployments or restarts. Rather than needing to make a code change to update simple values, configuration files centrally host data and make it easier to change, thus improving program flexibility.\n\n### **Experience**\n\nI have often thought that flexibility is the antithesis of code. Computers are crude instruments. They are only capable of memory and rapidly computing simple calculations. To do anything, computers must explicitly be programmed to the tiniest command. Since their nature is so rigid, any flexibility must be engineered which is a demanding problem. Two ways I have experienced designing for flexibility are with message queues and configuration servers.\n\nAt work, I rely heavily on RabbitMQ software. We use RabbitMQ as a message broker, or in pragmatic programming terms, for event management. When users complete nearly any action, it goes into a RabbitMQ queue. The queue is then processed by other services whenever they have resources available. For example, when a user completes a form, that information is published in a queue. Then all the subscribers can pop that queue and use the data at their leisure. If any service ever goes down (and they often do go down, as evidenced by the repeated paging of my phone in the middle of the night), the queue will still collect the information. Then it can be emptied by the program whenever it comes back online. Maintaining these queues supplies a good balance of flexibility and performance, and they support many of the systems I regularly interact with.\n\nConfiguration files are another common characteristic of my job. We use a microservices architecture with dozens of separate programs providing overall functionality. If configurations change then it would be a pain to manually update each service. Instead, we have another program humbly called the configuration server. The config server maintains all the configurations for every service we have. Whenever we change these values we can update them in just one place, and the configuration server will take care of making sure every program has the most up-to-date configurations. The configuration server is a massive time saver.\n\n## **Section 6: Concurrency**\n\n### **Summary**\n\nA majority of modern software is happening concurrently at some level. Concurrency is acting like two or more items of code are running together, while parallelism is when code items are running at the same time. Concurrency and parallelism are common ways of increasing program performance and better using a computer's resources. _The Pragmatic Programmer_ says analyzing workflows is a must to improve concurrency. One form of analysis is drawing out activities. Drawing activities makes it possible to see what possibilities exist for leveraging concurrency.\n\nOnce concurrency comes into play, then shared data is also an open question. The authors strongly advise against sharing any state between concurrent code. They give the example of ordering a slice of pie. If one customer orders the last slice of pie, then all the other customers will be disappointed. It would be better to have a different piece of pie available to every customer. Similarly, data can be replicated or put in a queue. Concurrent code should never directly share data. That will lead to random failures and race conditions.\n\n### **Experience**\n\nIn my first semester of graduate school, I took a networking course. In the networking class, I had to build a router from scratch. The assignment was graded based on how well the solution scaled on large networks, so performance was critical. I used an efficient implementation of Djikstras for pathfinding, kept the code simple, and wrote in C. However, none of that gave me quite the performance required.\n\nI ended up using five threads to handle all of the tasks. Unfortunately, multithreading this assignment was a minefield of bugs. Threads can execute at various speeds depending on the whims of the kernel; therefore, knowing the order of execution of code cannot be deterministic. Indeterminism leads to the punishing aspect of debugging multiple threads: bugs happen randomly. Many of my bugs arose from sharing data. The authors wisdom to avoid sharing data is prescient. It is all too easy to forget to manage data correctly because the human brain was not built for parallelism. This project was my widest foray into parallel programming. In future endeavors, I would be wise to remember _The Pragmatic Programmers_ advise against sharing data. It will save me countless hours of hair-pulling.\n\n## **Section 7: While You Are Coding**\n\n### **Summary**\n\nThe seventh section of the book lays out an overview of considerations to remember while coding. First and foremost, the authors advise against programming through coincidence. If you write code that unexpectedly works, do not continue happily onward. Stop to ensure you understand why that code is working. Understanding code is key to building larger systems and crucial to debugging. The way to avoid accidental programming is to think beforehand. While staring at a blank editor is scary, there is nothing wrong with organizing your thoughts first. Building a plan and a mental model will lead to better quality and a deeper understanding.\n\nOne skill that many developers forget is algorithm speed. Big-O notation is the practice of estimating how fast a given algorithm will run with arbitrary input. Naive solutions to many problems are commonly not the most efficient. Depending on the application, using Big-O analysis to find a better solution can be appropriate.\n\nPerhaps more widely applicable is refactoring and testing. The authors define refactoring to mean restructuring existing code. Testing and refactoring go hand in hand because testing informs what code needs refactoring and simplification. Refactoring should not change the behavior of the code. Instead, refactoring should improve the code to ease future maintenance. One aspect of refactoring is renaming. Renaming is necessary because the codebase will drift over time. Eventually, the names will no longer align with the actual use case.\n\nFinally, this section touches on five principles to improve program security. The principles are: minimizing surface area, least privilege, secure defaults, encryption, and security updates. Categorically, surface area and security updates are about preventing bad actors from accessing the program. Least privilege and secure defaults limit reach once a hacker is inside. And encryption will minimize any damage done by a hack.\n\n### **Experience**\n\nAs a programmer, I have spent countless hours sitting at a keyboard coding away. It is one of my favorite activities. My enthusiasm to dive into code has led me into traps more times than I would care to admit. I do not think this is unique to me. I think most programmers prefer to dive straight in. Diving straight into coding goes against the authors advice to program on purpose. Two conscious programming techniques I have been exploring are TDD and BDD.\n\nTDD or test-driven development involves writing tests before coding implementation. The test defines the smallest unit of work and gives insight into the minimally required implementation. Since the test comes first, it will initially fail. TDD helps me stop and think about the code I am writing. I will admit TDD is a tough ideal to strive for because writing tests is not my favorite activity. Tests are boring and often tedious. Despite the monotony that comes with the testing territory, I still think it is an important part of my thinking process.\n\nBDD or behavior-driven development focuses on connecting the requirements of the business to code. In my job, I implement BDD with Cucumber. Cucumber tests look like English sentences and are some of my favorite pieces of code to write. I like writing cucumber tests because they feel conversational and mimic how users interact with the program. Combining TDD and BDD forces me to think harder and leads to better code.\n\n## **Section 8: Before the Project**\n\n### **Summary**\n\nIn the eighth section, _The Pragmatic Programmer_ describes the start of a project. The authors strongly dislike what they call the requirements myth. They view the world as too messy and complex to define complete requirements at the start. According to the book, requirements are learned in a feedback loop between programmers and their partners.\n\nAn aspect of a feedback loop is interactions. There are two types of interactions that the book focuses on developers to users and developers with developers. Developers must interact with their users to know what those users want. Parallelly, developers must interact with other developers to solve tricky problems.\n\nCommon techniques for developer collaboration are pair programming and mob programming. Pair programming occurs when two developers work together. One engineer will have their hands on the keyboard typing out code. The typist focuses on nitty-gritty details like syntax. The other developer will watch and contribute higher-level ideas. The book emphasizes this approach and its popularity because it puts more mental power into solving problems.\n\nThe second developer collaboration approach is mob programming. Mob programming is an extension of pair programming. The general thought process is if two developers can solve problems better together, scale that up to N number of stakeholders. The book says to think of mob programming as tight collaboration with live coding involved.\n\n### **Experience**\n\nIn every project-based course I took in school, I heard about the requirements gathering phase. I completed a user interface design course, a web development course, and a software engineering course where requirements gathering was a dedicated field of study. Many of the projects of these courses mandated a requirements step where groups defined what they would build. Since I learned about requirements gathering in many classes, it felt like a fact. I thought this approach seemed reasonable because planning was feasible due to the defined rubrics and limited durations.\n\n_The Pragmatic Programmer_ takes a contrarian approach to requirements gathering. It declares that requirements are a myth because no one knows what they want. Unlike school, where there are many one-off assignments, work endeavors are long-running projects that can sometimes last for years or longer. Knowing all of the requirements beforehand is just not going to happen. The book's opinion matches what I experience in the work world. The business associates that I regularly interact with have an idea of what they want, and they provide comparables to describe the UI and UX. However, these often change and can even change based on seeing the implementation. After seeing requirements in the real world, I wholeheartedly agree with the authors approach. School teaches requirements gathering too rigidly. Designing a project is about experimentation and feeling out what works.\n\n## **Section 9: Pragmatic Projects**\n\n### **Summary**\n\nFinally, in the last chapter, the authors dive into the relationship between project management and software engineering teams. Messrs Thomas and Hunt do not seem to adhere to a particular framework of team management like Agile. Instead, they opt for a higher-level view of how teams should work together. In large brush strokes, they paint the picture of small teams complete with a range of skills from software engineering to quality assurance to databases and operations. When engineering teams contain a breadth of skills, they become fully functional and deliver finished work independently. Ideally, a team would be long-standing with a portfolio of collective knowledge. Long-standing teammates are better communicators and can refine their processes, thus becoming more efficient over time.\n\n_The Pragmatic Programmer_ concludes with a holistic picture of the importance of being pragmatic. Automation, version control, continuous delivery, testing, and more are not ends alone. They are just the means to the goal of delivering more code. Even delivering more code is not the true end. The end goal of all engineering efficiency is to delight users. Software engineers can delight people because their fundamental goal is to solve their problems. Any engineer solving problems for people should take pride in that and own their accomplishments. Ultimately, solving problems for people makes a pragmatic programmer.\n\n### **Experience**\n\nI am only a recent graduate, so the corpus of my work remains limited. However, I appreciate the authors' flexibility on what can be a dogmatic industry. The software engineering community likes to throw its entire weight behind trends. At every company I have been at, I constantly hear about Agile. David Thomas and Andrew Hunt are more freewheeling than that. They recognize that engineering is about improving lives. I appreciate their refreshing attitude because I got into software engineering to help people. Becoming a pragmatic programmer is one way to get better at that goal.\n\n--- \n\nOriginally published at https://blog.seancoughlin.me.","cached_tag_list":"review, bookreview, softwareengineering","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Background   I wrote this as the final report for CS 427 at UIUC which I took as part of the...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/the-pragmatic-programmer-book-review-31mh","public_reactions_count":3,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"background\" href=\"#background\"\u003e\n  \u003c/a\u003e\n  Background\n\u003c/h2\u003e\n\n\u003cp\u003eI wrote this as the final report for CS 427 at UIUC which I took as part of the Master of Computer Science program. This review is based on the 20th Anniversary Edition.\u003c/p\u003e\n\n\u003cp\u003eThe essay format follows a summary of each section and my personal software engineering experiences. Please enjoy!\u003c/p\u003e\n\n\u003cp\u003eCredit: The image is generated by \u003ca href=\"https://openai.com/dall-e-2/\"\u003eDall-E 2\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"section-1-a-pragmatic-philosophy\" href=\"#section-1-a-pragmatic-philosophy\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eSection 1: A Pragmatic Philosophy\u003c/strong\u003e\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"summary\" href=\"#summary\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eSummary\u003c/strong\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eThe authors of \u003cem\u003eThe Pragmatic Programmer\u003c/em\u003e, David Thomas and Andrew Hunt, begin the book by poignantly stating, this book is about you. They define a pragmatic programmer as someone who takes responsibility for their actions. Their definition of a pragmatic programmer leads to the first conclusion of the book: you have agency. Having agency means that you can take action. For example, if you work in a bad environment, try to improve it. Or, if you want to work remotely, ask for that perk. It is easy to forget that we can always try to make changes. That does not mean our changes will always be successful, but a pragmatic person will at least try.\u003c/p\u003e\n\n\u003cp\u003eNext, Mr. Thomas and Mr. Hunt dive into their second topic, humorously titled: The Cat Ate My Source Code. The key to this topic is that a programmers job is to provide solutions, not excuses. By discovering problems, providing findings, and developing solutions, you can earn team trust, create better products, and advance your career.\u003c/p\u003e\n\n\u003cp\u003ePart of the job of a pragmatic programmer is to avoid what the authors dub software entropy. More widely known as technical debt, software entropy emerges as engineers develop a lax attitude toward the quality of their codebase. Tech debt happens once broken windows occur in the code. A broken window exists in code wherever there are poor designs or mediocre code. As soon as some substandard code emerges, future developers are more likely to feel alright adding more poor-quality code. Avoiding technical debt growth requires ensuring it does not ever appear in the first place. More simply put, a culture of high quality perpetuates itself, and a culture of low quality will lead to more low-quality software. The parallel suggestion is software can be just good enough. It does not have to be perfect. Handling every bug or edge case might not be necessary to hit the requirements, and it can add unnecessary complexity and effort to a project.\u003c/p\u003e\n\n\u003cp\u003eThe last tidbit of information in this chapter is to invest in your knowledge portfolio. Similar to investments in stocks and bonds, the authors advise investing wisely in your technical skills. Maintaining steady investments in new technologies, diversifying your knowledge base, and getting in early (or buying low in investing parlance) are pivotal for advancing your career and becoming a more effective engineer.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"experience\" href=\"#experience\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eExperience\u003c/strong\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eIn my final semester of college, I worked on a comprehensive React application for a web development course. The project went end to end, from idea generation to demonstrating a final product. Along the way, my group realized many of our pitched ideas were not feasible as we had imagined. However, we had already started much of the implementation. To still meet project requirements, we altered many of our initial ideas. The sudden change of goals left the code base in a sorry state because we originally designed it with different use cases in mind. The project ran for one semester, and our group was only four large, so we stuck bandages on our code and limped the repository to the finish line.\u003c/p\u003e\n\n\u003cp\u003eI think there are two main reasons why we accumulated so much technical debt. First, we drastically altered what we were trying to do. Shifting requirements are routine and lead to engineering dead ends. Second, we knew this would only be a one-semester project, so we quickly fell prey to what the authors called broken window syndrome. Our focus as college students was to minimize effort and maximize grades. Frankly, that optimization problem does not lend itself well to writing good code.\u003c/p\u003e\n\n\u003cp\u003eOne perk of working on this React project was I picked up frontend development skills with an in-demand skill. That was a decisive investment in my knowledge portfolio which has paid dividends. I currently work as a developer using React nearly every day. Perhaps my Senior year group did not create a great project, but I grew my knowledge portfolio, and I have used that ever since.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"section-2-a-pragmatic-approach\" href=\"#section-2-a-pragmatic-approach\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eSection 2: A Pragmatic Approach\u003c/strong\u003e\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"summary\" href=\"#summary\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eSummary\u003c/strong\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eThe second section of \u003cem\u003eThe Pragmatic Programmer\u003c/em\u003e dives deeper into the elements of good design and how programmers can bring high-quality design into their daily roles. First, the authors claim that a vital element of good design is that it is easy to change. Being easy to change is more important than other elements because it is fundamental to meet many requirements. In later topics, the authors will address many elements of good design; however, they posit that all these other design principles are motivated by the easy-to-change principle.\u003c/p\u003e\n\n\u003cp\u003eSecond, the authors reveal their views on one of the most common software engineering principles: DRY or dont repeat yourself. DRY is important because having a single source of truth will make maintenance easier and bugs easier to find. There are many techniques, like functions and object-oriented programming, that assist in living out DRY principles. A companion to DRY is coupling. Highly coupled code will cause changes in one location to have effects elsewhere. To avoid coupling code should be orthogonal or independent. Ideally, code will be more reversible when design, DRY, and orthogonality are combined. Reversibility is desirable because business requirements are fluid, and mistakes happen. If the system is too rigid, it will be difficult to retrace your steps if required.\u003c/p\u003e\n\n\u003cp\u003eThe last topic in this section is on estimating. Estimating time to completion is an essential component of project management in the business world. Estimation is challenging because projects are so complicated and specialized. The authors advise breaking each system into components and estimating the time to completion for each piece. A technique they recommend is PERT. PERT tasks have optimistic, likely, and pessimistic estimates that construct an overall project estimate. Even with good estimation techniques, it is almost impossible to give accurate dates, so avoiding the question and saying, Ill get back to you, is often the best technique.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"experience\" href=\"#experience\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eExperience\u003c/strong\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eThere are many desirable outcomes that good design can strive to achieve. These outcomes include reliability, cost, simplicity, flexibility, and many more. In my experience, flexibility is the number one goal of good software design.\u003c/p\u003e\n\n\u003cp\u003eI work on a user-facing application in my job as a software engineer. We must build our applications exactly to comparables from our business partners. The comparables, or comps as we colloquially call them, are designed to fit our brand promise. Our business partners put these comparables through many rounds of review and are constantly changing. As the engineer implementing these specifications, the code I am writing must be flexible and extensible enough to adjust to morphing requirements.\u003c/p\u003e\n\n\u003cp\u003eI believe that second to flexibility, simplicity is the next most important trait of quality software design. Simplicity is fundamental to onboarding new employees, scaling applications, adding new features, and ensuring reliability. After all, if an application is too complex, how will anyone know how to maintain it?\u003c/p\u003e\n\n\u003cp\u003eKey to the idea of simple software development is the DRY principle. DRY forces simplicity because there will be less code overall. One of the main enemies of DRY is the copy-paste functionality which makes it too easy to duplicate code. I find that when I am using Ctrl-C and Ctrl-V I often violate DRY. I have also found that to not repeat myself, I must think harder. When I think more deeply about a problem, I arrive at better solutions. I interact with the DRY principle every day as a professional software engineer at a large company. Codebases at work easily number in the tens of thousands of lines. To make that scale manageable, and adhere to DRY, we use the MVCS pattern.\u003c/p\u003e\n\n\u003cp\u003eMVCS stands for model, view, controller, and service. Under MVCS, the model represents some data stored in an object, the view is a user-interactable layer, the controller routes requests, and services handle all the logic. Splitting the codebase up into these four chunkable ideas improves simplicity. Additionally, a well-designed service and model can often be reused by multiple controllers adhering to the DRY principle. When I first onboarded, this entire paradigm was brand new to me. I had more experience with haphazardly throwing code together (an approach that had worked well in college). However, I have come to appreciate working with a formal paradigm. MVCS improves the code quality and makes my job easier.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"section-3-the-basic-tools\" href=\"#section-3-the-basic-tools\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eSection 3: The Basic Tools\u003c/strong\u003e\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"summary\" href=\"#summary\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eSummary\u003c/strong\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eThe third section of \u003cem\u003eThe Pragmatic Programmer\u003c/em\u003e builds on the idea that good tools extend what the human brain can do. According to the authors, programmers, like any craftsman, rely on tools. First among these tools is the powerfully simple plain text. The authors' plain text love comes from its human readability. Any data format that is human readable can be used long after the original application that used it is sunset or the developer who created it is gone. That sort of permanence is the friend of a developer trying to understand and maintain others' code.\u003c/p\u003e\n\n\u003cp\u003eThe next tool is the old, reliable shell. This section brings the interesting acronyms WYSIWYG, or what you see is what you get, and WYSIAYG, or what you see is all you get. The authors explain that GUIs exhibit both WYSIWYG and WYSIAYG. It is simultaneously their paramount advantage and disadvantage. On the other hand, shells are harder to learn but unbelievably powerful. Stitching their simple instructions together can complete an infinite array of actions. The authors advise never to forget the power of the shell, even in our modern GUI age.\u003c/p\u003e\n\n\u003cp\u003eAt last, the authors broach one of the most zealous parts of programming; the editor. Mr. Thomas and Mr. Hunt instruct that the editor you use does not matter. Instead, focus on improving the efficiency of your skills with your chosen editor. Over time learning the shortcuts and features of a given platform will improve your productivity and allow you to write more code or write code faster.\u003c/p\u003e\n\n\u003cp\u003eAnother crucial component of modern software engineering is version control. Or, as the authors describe it: the giant undo key. Version control allows you to track the history of a project, manage multiple versions, and coordinate development across a team. Version control systems often come with an external repository like GitHub or Bitbucket, where you can backup versions, share work, and set up automation. For all these reasons, version control should track every project. As an engineer, you will thank yourself for using version control.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"experience\" href=\"#experience\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eExperience\u003c/strong\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eFor most of my programming history, I have been a Java developer. In the seven years I have been writing Java code, I have used a variety of editors. However, most commonly, I stick to using IntelliJ. IntelliJ is a tremendously powerful integrated development environment. The debugging features, test runners, Git integrations, and plugins have saved me a lot of time and drive most of my workflow. However, all that power comes with a lot of complexity. Every feature requires a button which makes for a cluttered GUI, and the number of keyboard shortcuts rivals the number of stars in the sky. Marching along that learning curve has been arduous.\u003c/p\u003e\n\n\u003cp\u003eWhen I started programming, I considered myself a println warrior. I stuck to adding print statements whenever I needed to debug, but this proved untenable once I started working with larger projects. The IntelliJ debugger was a major skill I needed to dedicate time to understand. When I started using it, I was not as productive as I had been with my original print statement method, but my skills have since grown, and now my debugging skills far outstrip those early days. This experience corresponds with Messrs Thomas and Hunts advice to Achieve Editor Fluency. I spent too much time ignoring the powerful features lying just a few clicks away. My purposeful ignorance led to years of lower productivity. Estimating is difficult, but I would feel confident to guess that achieving my editor fluency was an order of magnitude increase in my debugging skills. It was not even hard to learn. It just required a little dedicated effort.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"section-4-pragmatic-paranoia\" href=\"#section-4-pragmatic-paranoia\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eSection 4: Pragmatic Paranoia\u003c/strong\u003e\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"summary\" href=\"#summary\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eSummary\u003c/strong\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eIn the fourth section, the authors expound on the idea that no software is perfect. The pragmatic programmer recognizes software flaws and uses their skills to adjust. One tool for adjusting is contract design. Designing software by contract is when behavior is defined before programming begins. When constructing the contract two parties will agree on valid scenarios. The key to making contracts that are feasible to implement is strictly defining what inputs you will accept and promising little in return. Contract design should be a give-and-take where the parties come to the minimal requirements necessary to implement the project.\u003c/p\u003e\n\n\u003cp\u003eNext, recognizing that software is imperfect, the authors lay out their position on fault tolerance. They fall squarely into the let the program crash camp. The authors steelman argument is that a crashed program does far less harm than a crippled program. A faulty program could do dangerous things like write bad data to the database or needlessly consume expensive computing resources. Additionally, an engineer is apt to notice a crashed program sooner than other bugs. Noticing errors early and fast is crucial to speeding up any development cycle.\u003c/p\u003e\n\n\u003cp\u003eThe final pivotal topic of the chapter is to take small steps. The authors instruct to take small steps at the code and design level. At the code level, writing a small code chunk and a unit test together results in higher-quality code with fewer errors. At a higher level, we can only design so far into the future. New technologies, requirements, or black swan events will completely alter the ideal design. By and large, these are all unpredictable events, so there is no use expending effort trying to design your way around distant corners.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"experience\" href=\"#experience\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eExperience\u003c/strong\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eWhen I started learning to drive, my dad advised me to be a defensive driver. Similar to that advice, \u003cem\u003eThe Pragmatic Programmer\u003c/em\u003e says that pragmatic programmers build defenses against their own mistakes. Programmers must be aware that other programmers are not perfect, just like drivers must always be aware that other drivers are flawed. Assuming others make mistakes, a programmer can develop more fault-tolerant solutions. However, fault tolerance is only valuable up to a limited point.\u003c/p\u003e\n\n\u003cp\u003eMy job involves handling sensitive user information. For legal and business reasons, we must be extremely careful and accurate when collecting and moving that data. A security vulnerability or corrupt user information in our systems would be a terrible outcome for the business and our customers. We have built into our work systems a measure of fault tolerance. However, when that fails, we show our users a technical difficulty page. The technical difficulty page simply says, \"We are sorry. Please try again later.\" Showing the technical difficulty page is the equivalent of the program throwing up its arms and saying I cannot process this. I like to think of it as a graceful crash. By showing a sorry page, we are being forthright with our users and protecting the business.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"section-5-bend-or-break\" href=\"#section-5-bend-or-break\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eSection 5: Bend, or Break\u003c/strong\u003e\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"summary\" href=\"#summary\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eSummary\u003c/strong\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eIn Chapter 5, the book explores flexible writing code. The world is rapidly changing, and software systems must be malleable enough to adjust. The first way to add flexibility is through decoupling at the code level. Decoupling is similar to the previously mentioned orthogonality. Ideally, code should be local and only affect internal structures. Decoupling code makes it easier to change in the future.\u003c/p\u003e\n\n\u003cp\u003eNext, the authors write about events. Events are newly available information. For example, a mouse click, a keyboard press, or a Google search are all events. The authors first describe using finite state machines to model events and what should happen for each event. Then they describe various event handling patterns like observer, pubsub, streams, and reactive programming. These techniques are all useful for managing and processing events.\u003c/p\u003e\n\n\u003cp\u003eThe last topic in this section is configuration. Programs typically have constants that are required but have fungible values. For example, feature flags, logging levels, API keys, and ports are all common configuration targets. Whenever there are values that can be abstracted out, it is worthwhile to put these into separate configuration files. Config files are written in dedicated config languages like YAML or JSON. They can also be hosted externally, which minimizes application deployments or restarts. Rather than needing to make a code change to update simple values, configuration files centrally host data and make it easier to change, thus improving program flexibility.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"experience\" href=\"#experience\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eExperience\u003c/strong\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eI have often thought that flexibility is the antithesis of code. Computers are crude instruments. They are only capable of memory and rapidly computing simple calculations. To do anything, computers must explicitly be programmed to the tiniest command. Since their nature is so rigid, any flexibility must be engineered which is a demanding problem. Two ways I have experienced designing for flexibility are with message queues and configuration servers.\u003c/p\u003e\n\n\u003cp\u003eAt work, I rely heavily on RabbitMQ software. We use RabbitMQ as a message broker, or in pragmatic programming terms, for event management. When users complete nearly any action, it goes into a RabbitMQ queue. The queue is then processed by other services whenever they have resources available. For example, when a user completes a form, that information is published in a queue. Then all the subscribers can pop that queue and use the data at their leisure. If any service ever goes down (and they often do go down, as evidenced by the repeated paging of my phone in the middle of the night), the queue will still collect the information. Then it can be emptied by the program whenever it comes back online. Maintaining these queues supplies a good balance of flexibility and performance, and they support many of the systems I regularly interact with.\u003c/p\u003e\n\n\u003cp\u003eConfiguration files are another common characteristic of my job. We use a microservices architecture with dozens of separate programs providing overall functionality. If configurations change then it would be a pain to manually update each service. Instead, we have another program humbly called the configuration server. The config server maintains all the configurations for every service we have. Whenever we change these values we can update them in just one place, and the configuration server will take care of making sure every program has the most up-to-date configurations. The configuration server is a massive time saver.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"section-6-concurrency\" href=\"#section-6-concurrency\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eSection 6: Concurrency\u003c/strong\u003e\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"summary\" href=\"#summary\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eSummary\u003c/strong\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eA majority of modern software is happening concurrently at some level. Concurrency is acting like two or more items of code are running together, while parallelism is when code items are running at the same time. Concurrency and parallelism are common ways of increasing program performance and better using a computer's resources. \u003cem\u003eThe Pragmatic Programmer\u003c/em\u003e says analyzing workflows is a must to improve concurrency. One form of analysis is drawing out activities. Drawing activities makes it possible to see what possibilities exist for leveraging concurrency.\u003c/p\u003e\n\n\u003cp\u003eOnce concurrency comes into play, then shared data is also an open question. The authors strongly advise against sharing any state between concurrent code. They give the example of ordering a slice of pie. If one customer orders the last slice of pie, then all the other customers will be disappointed. It would be better to have a different piece of pie available to every customer. Similarly, data can be replicated or put in a queue. Concurrent code should never directly share data. That will lead to random failures and race conditions.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"experience\" href=\"#experience\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eExperience\u003c/strong\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eIn my first semester of graduate school, I took a networking course. In the networking class, I had to build a router from scratch. The assignment was graded based on how well the solution scaled on large networks, so performance was critical. I used an efficient implementation of Djikstras for pathfinding, kept the code simple, and wrote in C. However, none of that gave me quite the performance required.\u003c/p\u003e\n\n\u003cp\u003eI ended up using five threads to handle all of the tasks. Unfortunately, multithreading this assignment was a minefield of bugs. Threads can execute at various speeds depending on the whims of the kernel; therefore, knowing the order of execution of code cannot be deterministic. Indeterminism leads to the punishing aspect of debugging multiple threads: bugs happen randomly. Many of my bugs arose from sharing data. The authors wisdom to avoid sharing data is prescient. It is all too easy to forget to manage data correctly because the human brain was not built for parallelism. This project was my widest foray into parallel programming. In future endeavors, I would be wise to remember \u003cem\u003eThe Pragmatic Programmers\u003c/em\u003e advise against sharing data. It will save me countless hours of hair-pulling.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"section-7-while-you-are-coding\" href=\"#section-7-while-you-are-coding\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eSection 7: While You Are Coding\u003c/strong\u003e\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"summary\" href=\"#summary\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eSummary\u003c/strong\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eThe seventh section of the book lays out an overview of considerations to remember while coding. First and foremost, the authors advise against programming through coincidence. If you write code that unexpectedly works, do not continue happily onward. Stop to ensure you understand why that code is working. Understanding code is key to building larger systems and crucial to debugging. The way to avoid accidental programming is to think beforehand. While staring at a blank editor is scary, there is nothing wrong with organizing your thoughts first. Building a plan and a mental model will lead to better quality and a deeper understanding.\u003c/p\u003e\n\n\u003cp\u003eOne skill that many developers forget is algorithm speed. Big-O notation is the practice of estimating how fast a given algorithm will run with arbitrary input. Naive solutions to many problems are commonly not the most efficient. Depending on the application, using Big-O analysis to find a better solution can be appropriate.\u003c/p\u003e\n\n\u003cp\u003ePerhaps more widely applicable is refactoring and testing. The authors define refactoring to mean restructuring existing code. Testing and refactoring go hand in hand because testing informs what code needs refactoring and simplification. Refactoring should not change the behavior of the code. Instead, refactoring should improve the code to ease future maintenance. One aspect of refactoring is renaming. Renaming is necessary because the codebase will drift over time. Eventually, the names will no longer align with the actual use case.\u003c/p\u003e\n\n\u003cp\u003eFinally, this section touches on five principles to improve program security. The principles are: minimizing surface area, least privilege, secure defaults, encryption, and security updates. Categorically, surface area and security updates are about preventing bad actors from accessing the program. Least privilege and secure defaults limit reach once a hacker is inside. And encryption will minimize any damage done by a hack.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"experience\" href=\"#experience\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eExperience\u003c/strong\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eAs a programmer, I have spent countless hours sitting at a keyboard coding away. It is one of my favorite activities. My enthusiasm to dive into code has led me into traps more times than I would care to admit. I do not think this is unique to me. I think most programmers prefer to dive straight in. Diving straight into coding goes against the authors advice to program on purpose. Two conscious programming techniques I have been exploring are TDD and BDD.\u003c/p\u003e\n\n\u003cp\u003eTDD or test-driven development involves writing tests before coding implementation. The test defines the smallest unit of work and gives insight into the minimally required implementation. Since the test comes first, it will initially fail. TDD helps me stop and think about the code I am writing. I will admit TDD is a tough ideal to strive for because writing tests is not my favorite activity. Tests are boring and often tedious. Despite the monotony that comes with the testing territory, I still think it is an important part of my thinking process.\u003c/p\u003e\n\n\u003cp\u003eBDD or behavior-driven development focuses on connecting the requirements of the business to code. In my job, I implement BDD with Cucumber. Cucumber tests look like English sentences and are some of my favorite pieces of code to write. I like writing cucumber tests because they feel conversational and mimic how users interact with the program. Combining TDD and BDD forces me to think harder and leads to better code.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"section-8-before-the-project\" href=\"#section-8-before-the-project\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eSection 8: Before the Project\u003c/strong\u003e\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"summary\" href=\"#summary\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eSummary\u003c/strong\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eIn the eighth section, \u003cem\u003eThe Pragmatic Programmer\u003c/em\u003e describes the start of a project. The authors strongly dislike what they call the requirements myth. They view the world as too messy and complex to define complete requirements at the start. According to the book, requirements are learned in a feedback loop between programmers and their partners.\u003c/p\u003e\n\n\u003cp\u003eAn aspect of a feedback loop is interactions. There are two types of interactions that the book focuses on developers to users and developers with developers. Developers must interact with their users to know what those users want. Parallelly, developers must interact with other developers to solve tricky problems.\u003c/p\u003e\n\n\u003cp\u003eCommon techniques for developer collaboration are pair programming and mob programming. Pair programming occurs when two developers work together. One engineer will have their hands on the keyboard typing out code. The typist focuses on nitty-gritty details like syntax. The other developer will watch and contribute higher-level ideas. The book emphasizes this approach and its popularity because it puts more mental power into solving problems.\u003c/p\u003e\n\n\u003cp\u003eThe second developer collaboration approach is mob programming. Mob programming is an extension of pair programming. The general thought process is if two developers can solve problems better together, scale that up to N number of stakeholders. The book says to think of mob programming as tight collaboration with live coding involved.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"experience\" href=\"#experience\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eExperience\u003c/strong\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eIn every project-based course I took in school, I heard about the requirements gathering phase. I completed a user interface design course, a web development course, and a software engineering course where requirements gathering was a dedicated field of study. Many of the projects of these courses mandated a requirements step where groups defined what they would build. Since I learned about requirements gathering in many classes, it felt like a fact. I thought this approach seemed reasonable because planning was feasible due to the defined rubrics and limited durations.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eThe Pragmatic Programmer\u003c/em\u003e takes a contrarian approach to requirements gathering. It declares that requirements are a myth because no one knows what they want. Unlike school, where there are many one-off assignments, work endeavors are long-running projects that can sometimes last for years or longer. Knowing all of the requirements beforehand is just not going to happen. The book's opinion matches what I experience in the work world. The business associates that I regularly interact with have an idea of what they want, and they provide comparables to describe the UI and UX. However, these often change and can even change based on seeing the implementation. After seeing requirements in the real world, I wholeheartedly agree with the authors approach. School teaches requirements gathering too rigidly. Designing a project is about experimentation and feeling out what works.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"section-9-pragmatic-projects\" href=\"#section-9-pragmatic-projects\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eSection 9: Pragmatic Projects\u003c/strong\u003e\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"summary\" href=\"#summary\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eSummary\u003c/strong\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eFinally, in the last chapter, the authors dive into the relationship between project management and software engineering teams. Messrs Thomas and Hunt do not seem to adhere to a particular framework of team management like Agile. Instead, they opt for a higher-level view of how teams should work together. In large brush strokes, they paint the picture of small teams complete with a range of skills from software engineering to quality assurance to databases and operations. When engineering teams contain a breadth of skills, they become fully functional and deliver finished work independently. Ideally, a team would be long-standing with a portfolio of collective knowledge. Long-standing teammates are better communicators and can refine their processes, thus becoming more efficient over time.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eThe Pragmatic Programmer\u003c/em\u003e concludes with a holistic picture of the importance of being pragmatic. Automation, version control, continuous delivery, testing, and more are not ends alone. They are just the means to the goal of delivering more code. Even delivering more code is not the true end. The end goal of all engineering efficiency is to delight users. Software engineers can delight people because their fundamental goal is to solve their problems. Any engineer solving problems for people should take pride in that and own their accomplishments. Ultimately, solving problems for people makes a pragmatic programmer.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"experience\" href=\"#experience\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eExperience\u003c/strong\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eI am only a recent graduate, so the corpus of my work remains limited. However, I appreciate the authors' flexibility on what can be a dogmatic industry. The software engineering community likes to throw its entire weight behind trends. At every company I have been at, I constantly hear about Agile. David Thomas and Andrew Hunt are more freewheeling than that. They recognize that engineering is about improving lives. I appreciate their refreshing attitude because I got into software engineering to help people. Becoming a pragmatic programmer is one way to get better at that goal.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"the-pragmatic-programmer-book-review-31mh","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9c1nph09dttj8qweh2y.png","title":"The Pragmatic Programmer - Book Review","video":null,"video_code":null},{"created_at":"2023-04-04T18:33:34.864Z","crossposted_at":"2023-04-04T18:46:48.501Z","edited_at":null,"last_comment_at":"2023-04-04T18:27:02.000Z","published_at":"2023-04-04T18:27:02.000Z","canonical_url":"https://blog.seancoughlin.me/uiuc-mcs-cs-498-review-cloud-computing-applications","feed_source_url":"https://blog.seancoughlin.me/uiuc-mcs-cs-498-review-cloud-computing-applications","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: UIUC MCS - CS 498 Review - Cloud Computing Applications\npublished: true\ndate: 2023-04-04 18:27:02 UTC\ntags: #uiuc #aws #cloudcomputing\ncanonical_url: https://blog.seancoughlin.me/uiuc-mcs-cs-498-review-cloud-computing-applications\n---\nComputer Science 498 covers broad range of topics from cloud computing and virtualization to big data in the cloud.\n\n## Overview\n\n- **TLDR:** 498 Cloud Computing is a high-workload class with practical assignments that provide a solid basis for understanding the cloud.\n\n- **Difficulty:** Medium\n\n- **Opinion:** Enjoyed\n\n- **Weekly workload:** 10 hours (3-4 for lectures, 6ish for MPs)\n\n- **Semester:** Spring 2023\n\n## Class Content\n\n### Lecture Content\n\nThis class is a comprehensive survey-like course that covers a vast range of topics and has many lectures throughout the semester. Topics covered include Cloud economics, Cloud Communication, Virtual Private Clouds, Serverless Computing, MapReduce, Data Storage, Cloud Databases, Large Scale Data Storage, Cloud Based Analytics, Big Data, Graphs, ML, Data Streaming, Virtualization, Containerization, Container Orchestration, and Architecting Cloud Applications. This is a crazy amount of content, so don't expect to become an expert in these topics.\n\nOverall, the lectures were informative and well-structured, providing a high-level understanding of the subject matter. However, lectures often became monotonous, and I struggled to stay engaged. Some weeks had over 4+ lecture hours, and I often watched at 1.5x speed to keep the pace up.\n\nDespite this occasional boredom, I still found the lectures highly beneficial. I'm a software engineer, and the material leveled up my cloud understanding. I believe that of the courses offered in the MCS program, this is the most practical one for software engineers.\n\nOutside of the lectures, 14 weekly quizzes make up a total of 14% of the final grade. Each quiz was worth 1%, and the quizzes only cover the material taught in the particular week, which allowed me to review and reinforce my understanding of the concepts. The quizzes can be taken an unlimited number of times which was nice for increasing understanding, but very nice for a low-pressure way to improve grades. So far every class I've taken in this Master's program has had weekly quizzes with unlimited attempts, and I appreciate the low-pressure stakes.\n\n### MPs\n\nThere were 12 MPs. MPs were 55% of the final grade. Some MPs were completed on AWS, and some locally in Docker containers. MP instructions and the autograder could be unclear at times, but the Campuswire forums were active, and I could get misunderstandings cleared up quickly.\n\nMPs covered topics like MapReduce, Spark, SparkSQL, HBase, Apache Storm, Virtualization, and AWS services like Load Balancer, ElastiCache, Lambda, and Aurora.\n\nI couldn't acquire any AWS education credits (I don't think they offer them anymore, or maybe I had previously used them all I'm not sure), so I was on the hook to pay for any cloud expenses. To keep costs down, I would try to complete the AWS MPs in just one sitting or terminate any instances in between sessions. Most of the MPs could be completed on small resources keeping costs down, and I spent just a few dollars on resources over the whole semester.\n\n### Exams\n\nThere were two exams, a midterm and a final. Unfortunately, they were hosted on the dreaded ProctorU. For privacy reasons, I detest taking exams with ProctorU, but there was no way around it for this class.\n\nThe midterm and final cover almost anything from each half of the term, even extremely obscure content only mentioned once. You will need strong memorization skills and good notes to do well. Thankfully, each exam was 15% and all multiple choice, so the stakes weren't too high.\n\n## My Takeaways\n\nI enjoyed this class and learned a lot. I think I could confidently have conversations about almost every cloud computing topic. I couldn't talk in crazy technical depth, but the breadth of this course has made me far more comfortable with the cloud. I think this class is a good springboard for learning more about specific cloud topics or studying for [cloud certifications](https://aws.amazon.com/certification/).\n\nSince cloud computing is ubiquitous at this point, I would recommend this course to everyone in the MCS program.\n\n### Banner Credit\n\nThe banner was generated using the [UIUC LinkedIn Banner Generator](https://d7.cs.illinois.edu/projects/linkedin-banner-image/). It is an awesome tool if you need an Illinois-themed banner for anything.\n\n### More Reviews\n\nCheck out [uiucmcs.org](https://uiucmcs.org/courses/CS-435-Cloud-Networking) for more reviews of MCS courses. I don't know who maintains this site, but it's a good review collection from many semesters.\n\nI have also written up a [CS 427 review](https://dev.to/scc33/uiuc-mcs-cs-427-review-software-engineering-3cbo) and [CS 435 review](https://dev.to/scc33/uiuc-mcs-cs-435-review-cloud-computer-networking-58c5).\n\n---\n\nOriginally published at https://blog.seancoughlin.me.","cached_tag_list":"uiuc, aws, cloudcomputing","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Computer Science 498 covers broad range of topics from cloud computing and virtualization to big data...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/uiuc-mcs-cs-498-review-cloud-computing-applications-b6i","public_reactions_count":6,"processed_html":"\u003cp\u003eComputer Science 498 covers broad range of topics from cloud computing and virtualization to big data in the cloud.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"overview\" href=\"#overview\"\u003e\n  \u003c/a\u003e\n  Overview\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eTLDR:\u003c/strong\u003e 498 Cloud Computing is a high-workload class with practical assignments that provide a solid basis for understanding the cloud.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eDifficulty:\u003c/strong\u003e Medium\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eOpinion:\u003c/strong\u003e Enjoyed\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eWeekly workload:\u003c/strong\u003e 10 hours (3-4 for lectures, 6ish for MPs)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSemester:\u003c/strong\u003e Spring 2023\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"class-content\" href=\"#class-content\"\u003e\n  \u003c/a\u003e\n  Class Content\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"lecture-content\" href=\"#lecture-content\"\u003e\n  \u003c/a\u003e\n  Lecture Content\n\u003c/h3\u003e\n\n\u003cp\u003eThis class is a comprehensive survey-like course that covers a vast range of topics and has many lectures throughout the semester. Topics covered include Cloud economics, Cloud Communication, Virtual Private Clouds, Serverless Computing, MapReduce, Data Storage, Cloud Databases, Large Scale Data Storage, Cloud Based Analytics, Big Data, Graphs, ML, Data Streaming, Virtualization, Containerization, Container Orchestration, and Architecting Cloud Applications. This is a crazy amount of content, so don't expect to become an expert in these topics.\u003c/p\u003e\n\n\u003cp\u003eOverall, the lectures were informative and well-structured, providing a high-level understanding of the subject matter. However, lectures often became monotonous, and I struggled to stay engaged. Some weeks had over 4+ lecture hours, and I often watched at 1.5x speed to keep the pace up.\u003c/p\u003e\n\n\u003cp\u003eDespite this occasional boredom, I still found the lectures highly beneficial. I'm a software engineer, and the material leveled up my cloud understanding. I believe that of the courses offered in the MCS program, this is the most practical one for software engineers.\u003c/p\u003e\n\n\u003cp\u003eOutside of the lectures, 14 weekly quizzes make up a total of 14% of the final grade. Each quiz was worth 1%, and the quizzes only cover the material taught in the particular week, which allowed me to review and reinforce my understanding of the concepts. The quizzes can be taken an unlimited number of times which was nice for increasing understanding, but very nice for a low-pressure way to improve grades. So far every class I've taken in this Master's program has had weekly quizzes with unlimited attempts, and I appreciate the low-pressure stakes.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"mps\" href=\"#mps\"\u003e\n  \u003c/a\u003e\n  MPs\n\u003c/h3\u003e\n\n\u003cp\u003eThere were 12 MPs. MPs were 55% of the final grade. Some MPs were completed on AWS, and some locally in Docker containers. MP instructions and the autograder could be unclear at times, but the Campuswire forums were active, and I could get misunderstandings cleared up quickly.\u003c/p\u003e\n\n\u003cp\u003eMPs covered topics like MapReduce, Spark, SparkSQL, HBase, Apache Storm, Virtualization, and AWS services like Load Balancer, ElastiCache, Lambda, and Aurora.\u003c/p\u003e\n\n\u003cp\u003eI couldn't acquire any AWS education credits (I don't think they offer them anymore, or maybe I had previously used them all I'm not sure), so I was on the hook to pay for any cloud expenses. To keep costs down, I would try to complete the AWS MPs in just one sitting or terminate any instances in between sessions. Most of the MPs could be completed on small resources keeping costs down, and I spent just a few dollars on resources over the whole semester.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"exams\" href=\"#exams\"\u003e\n  \u003c/a\u003e\n  Exams\n\u003c/h3\u003e\n\n\u003cp\u003eThere were two exams, a midterm and a final. Unfortunately, they were hosted on the dreaded ProctorU. For privacy reasons, I detest taking exams with ProctorU, but there was no way around it for this class.\u003c/p\u003e\n\n\u003cp\u003eThe midterm and final cover almost anything from each half of the term, even extremely obscure content only mentioned once. You will need strong memorization skills and good notes to do well. Thankfully, each exam was 15% and all multiple choice, so the stakes weren't too high.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"my-takeaways\" href=\"#my-takeaways\"\u003e\n  \u003c/a\u003e\n  My Takeaways\n\u003c/h2\u003e\n\n\u003cp\u003eI enjoyed this class and learned a lot. I think I could confidently have conversations about almost every cloud computing topic. I couldn't talk in crazy technical depth, but the breadth of this course has made me far more comfortable with the cloud. I think this class is a good springboard for learning more about specific cloud topics or studying for \u003ca href=\"https://aws.amazon.com/certification/\"\u003ecloud certifications\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eSince cloud computing is ubiquitous at this point, I would recommend this course to everyone in the MCS program.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"banner-credit\" href=\"#banner-credit\"\u003e\n  \u003c/a\u003e\n  Banner Credit\n\u003c/h3\u003e\n\n\u003cp\u003eThe banner was generated using the \u003ca href=\"https://d7.cs.illinois.edu/projects/linkedin-banner-image/\"\u003eUIUC LinkedIn Banner Generator\u003c/a\u003e. It is an awesome tool if you need an Illinois-themed banner for anything.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"more-reviews\" href=\"#more-reviews\"\u003e\n  \u003c/a\u003e\n  More Reviews\n\u003c/h3\u003e\n\n\u003cp\u003eCheck out \u003ca href=\"https://uiucmcs.org/courses/CS-435-Cloud-Networking\"\u003euiucmcs.org\u003c/a\u003e for more reviews of MCS courses. I don't know who maintains this site, but it's a good review collection from many semesters.\u003c/p\u003e\n\n\u003cp\u003eI have also written up a \u003ca href=\"https://dev.to/scc33/uiuc-mcs-cs-427-review-software-engineering-3cbo\"\u003eCS 427 review\u003c/a\u003e and \u003ca href=\"https://dev.to/scc33/uiuc-mcs-cs-435-review-cloud-computer-networking-58c5\"\u003eCS 435 review\u003c/a\u003e.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"uiuc-mcs-cs-498-review-cloud-computing-applications-b6i","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aax8yu4pnwhxaucfof11.png","title":"UIUC MCS - CS 498 Review - Cloud Computing Applications","video":null,"video_code":null},{"created_at":"2023-04-05T20:41:03.270Z","crossposted_at":"2023-04-05T20:42:40.979Z","edited_at":null,"last_comment_at":"2023-04-05T20:33:52.000Z","published_at":"2023-04-05T20:33:52.000Z","canonical_url":"https://blog.seancoughlin.me/intro-to-software-engineering-interview-prep-and-system-design-tips-and-resources-for-success","feed_source_url":"https://blog.seancoughlin.me/intro-to-software-engineering-interview-prep-and-system-design-tips-and-resources-for-success","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Intro to Software Engineering Interview Prep and System Design: Tips and Resources for Success\npublished: true\ndate: 2023-04-05 20:33:52 UTC\ntags: #interview #interviewprep #swe #softwareenginer\ncanonical_url: https://blog.seancoughlin.me/intro-to-software-engineering-interview-prep-and-system-design-tips-and-resources-for-success\n---\n\nTake your software engineering skills to the next level with practical tips, resources, and real-world examples in my new series.\n\n![An old computer with a keyboard and mouse generated by Dalle](https://cdn.hashnode.com/res/hashnode/image/upload/v1680705121146/0348209f-f730-488c-897e-1304b046a2bc.png)\n\nAs a software engineer, preparing for technical interviews and staying up-to-date with the latest system design techniques is crucial to staying ahead of the game and landing your next job. In this blogging series, I'm going to dive into software engineering interview preparation and system design, covering everything from foundational data structures and algorithms to more advanced distributed systems concepts.\n\nThroughout the series, I'll be exploring a variety of Leetcode problems and discussing the most effective approaches to solving them. I'll also be sharing my favorite books and online resources for studying, providing you with the tools you need to excel in your next interview.\n\nIn addition to interview preparation, I'll also be delving into the fascinating world of system design. I'll be breaking down complex concepts and discussing real-world examples, giving you a better understanding of how to design scalable and fault-tolerant systems.\n\nAs a software engineer with a couple of years of experience, a bachelor's and a master's degree in computer science, and a general passion for all things nerdy, maybe you would expect me to be good at this stuff. In fact, I've always struggled with this side of software engineering. My goal in writing this series is to _learn in the open_. I am writing this series while I embark on my journey of learning more. I'm hoping to keep myself engaged with learning, and maybe I can teach a potential reader a thing or two as well.\n\nYou can find the series at [https://blog.seancoughlin.me/series/interview-prep](https://blog.seancoughlin.me/series/interview-prep).\n\nLet's get started.\n\nThe image was generated using [Dalle2](https://openai.com/product/dall-e-2) and the prompt \"a computer from the 90s in the style of vaporwave.\"\n\n---\n\nOriginally published at https://blog.seancoughlin.me.","cached_tag_list":"interview, interviewprep, swe, softwareenginer","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Take your software engineering skills to the next level with practical tips, resources, and...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/intro-to-software-engineering-interview-prep-and-system-design-tips-and-resources-for-success-1hon","public_reactions_count":0,"processed_html":"\u003cp\u003eTake your software engineering skills to the next level with practical tips, resources, and real-world examples in my new series.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--JJ_g8fF0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1680705121146/0348209f-f730-488c-897e-1304b046a2bc.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--JJ_g8fF0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1680705121146/0348209f-f730-488c-897e-1304b046a2bc.png\" alt=\"An old computer with a keyboard and mouse generated by Dalle\" loading=\"lazy\" width=\"800\" height=\"800\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eAs a software engineer, preparing for technical interviews and staying up-to-date with the latest system design techniques is crucial to staying ahead of the game and landing your next job. In this blogging series, I'm going to dive into software engineering interview preparation and system design, covering everything from foundational data structures and algorithms to more advanced distributed systems concepts.\u003c/p\u003e\n\n\u003cp\u003eThroughout the series, I'll be exploring a variety of Leetcode problems and discussing the most effective approaches to solving them. I'll also be sharing my favorite books and online resources for studying, providing you with the tools you need to excel in your next interview.\u003c/p\u003e\n\n\u003cp\u003eIn addition to interview preparation, I'll also be delving into the fascinating world of system design. I'll be breaking down complex concepts and discussing real-world examples, giving you a better understanding of how to design scalable and fault-tolerant systems.\u003c/p\u003e\n\n\u003cp\u003eAs a software engineer with a couple of years of experience, a bachelor's and a master's degree in computer science, and a general passion for all things nerdy, maybe you would expect me to be good at this stuff. In fact, I've always struggled with this side of software engineering. My goal in writing this series is to \u003cem\u003elearn in the open\u003c/em\u003e. I am writing this series while I embark on my journey of learning more. I'm hoping to keep myself engaged with learning, and maybe I can teach a potential reader a thing or two as well.\u003c/p\u003e\n\n\u003cp\u003eYou can find the series at \u003ca href=\"https://blog.seancoughlin.me/series/interview-prep\"\u003ehttps://blog.seancoughlin.me/series/interview-prep\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eLet's get started.\u003c/p\u003e\n\n\u003cp\u003eThe image was generated using \u003ca href=\"https://openai.com/product/dall-e-2\"\u003eDalle2\u003c/a\u003e and the prompt \"a computer from the 90s in the style of vaporwave.\"\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"intro-to-software-engineering-interview-prep-and-system-design-tips-and-resources-for-success-1hon","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bnrpowz3lrtqlazc176l.png","title":"Intro to Software Engineering Interview Prep and System Design: Tips and Resources for Success","video":null,"video_code":null},{"created_at":"2023-04-05T21:07:14.791Z","crossposted_at":"2023-04-05T21:19:16.050Z","edited_at":null,"last_comment_at":"2023-04-05T20:56:51.000Z","published_at":"2023-04-05T20:56:51.000Z","canonical_url":"https://blog.seancoughlin.me/find-the-index-of-the-first-occurrence-in-a-string-naive-and-kmp-solutions","feed_source_url":"https://blog.seancoughlin.me/find-the-index-of-the-first-occurrence-in-a-string-naive-and-kmp-solutions","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Find the Index of the First Occurrence in a String (Naive and KMP Solutions)\npublished: true\ndate: 2023-04-05 20:56:51 UTC\ntags: #interview #python #strings #kmp\ncanonical_url: https://blog.seancoughlin.me/find-the-index-of-the-first-occurrence-in-a-string-naive-and-kmp-solutions\n---\n\nLearn how to improve string matching efficiency with the Knuth-Morris-Pratt (KMP) algorithm.\n\n![Binary on a screen generated by AI](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ltpstoy2s71qq9bf91oj.png)\n\n## Problem\n\nLet's take a look at the problem [Find the Index of the First Occurance in a String](https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string/).\n\nIn this problem, you have two strings: a needle and a haystack. The goal is to return the index of the needle in the haystack or -1 if the needle does not exist in the haystack.\n\nThis is a Leetcode easy-level problem. I think the naive solution fits that definition, however as you will see, the faster runtime solution requires some heavy lifting. That solution makes it feels more like a medium problem to me.\n\nI'll be tackling this problem using Python.\n\n## Naive Solution\n\nFirst, let's consider the naive solution. At the very basic level, we can use the [built-in find function](https://www.w3schools.com/python/ref_string_find.asp).\n\n```\nclass Solution(object):\n    def strStr(self, haystack, needle):\n            return haystack.find(needle)\n```\n\nIf you don't have access to _find_ or are a Python warrior and want to grind things out, then you could implement the following.\n\n```\nclass Solution(object):\n    def strStr(self, haystack, needle):\n        searchLen = len(needle)\n        for i in range(len(haystack)):\n            if haystack[i:i+searchLen] == needle:\n                return i\n        return -1\n```\n\nThis line uses string slicing to extract a substring of length `searchLen` starting at the current index `i` of the `haystack` string, and then checks if it matches the `needle` string. If there's a match, the function returns the current index `i`. If we reach the end of the `haystack` then we return `-1` as the needle was not found.\n\n### Naive Solution Runtime\n\nAssume _m_ is the length of the haystack and _n_ is the length of the needle. We are looping over the entire length of the haystack giving at least _O(m)._ In each iteration, we are taking a substring and comparing it to the needle which gives O(_n)_. Therefore, the overall time complexity of this Naive solution is **_O(mn)_**.\n\n## KMP Solution\n\n_O(mn)_ isn't a very good solution and we can certainly do better by using an algorithm known as KnuthMorrisPratt or simply KMP. Before diving into code, it is helpful to understand what KMP is, so let's look at some definitions.\n\nChatGPT describes KMP as the following.\n\n\u003e The Knuth-Morris-Pratt (KMP) algorithm is a string-matching algorithm that searches for occurrences of a pattern within a longer text. It was developed by Donald Knuth, Vaughan Pratt, and James Morris in 1977.\n\u003e \n\u003e The KMP algorithm uses a pre-processing step to build a partial match table, which is used to determine the largest possible suffix of the pattern that matches a prefix of the text. This information is then used to avoid unnecessary comparisons when searching for occurrences of the pattern within the text.\n\u003e \n\u003e The KMP algorithm has a time complexity of O(m + n), where m is the length of the pattern and n is the length of the text. This makes it more efficient than other string-matching algorithms such as the naive algorithm, which has a time complexity of O(m \\* n).\n\u003e \n\u003e Overall, the KMP algorithm is a useful tool for applications such as text search, data compression, and bioinformatics.\n\nThank you GPT. However, I prefer [Wikipedia's more succinct KMP description](https://en.wikipedia.org/wiki/Knuth%E2%80%93Morris%E2%80%93Pratt_algorithm).\n\n\u003e [KMP Algorithm] searches for occurrences of a \"word\" `W` within a main \"text string\" `S` by employing the observation that when a mismatch occurs, the word itself embodies sufficient information to determine where the next match could begin, thus bypassing re-examination of previously matched characters.\n\nFinally, let's consider one last definition from [GeeksForGeeks](https://www.geeksforgeeks.org/kmp-algorithm-for-pattern-searching/).\n\n\u003e The basic idea behind KMPs algorithm is: whenever we detect a mismatch (after some matches), we already know some of the characters in the text of the next window. We take advantage of this information to avoid matching the characters that we know will anyway match.\n\nEquipped with these three definitions of KMP we can begin to see this technique offers a speed-up because we avoid unnecessary comparisons on each iteration over the haystack.\n\nThe key leverage point needed to make this speed up is that we will use a helper array to do prefix and suffix matching.\n\n### KMP Implementation\n\n```\nclass Solution(object):\n    def strStr(self, haystack, needle):\n        needleLen = len(needle)\n        haystackLen = len(haystack)\n        i = 1\n        j = 0\n        patternArr = [-1] + [0] * needleLen\n        while i \u003c needleLen: # calculate helper array\n            if j == -1 or needle[i] == needle[j]:   \n                i += 1\n                j += 1\n                patternArr[i] = j\n            else:\n                j = patternArr[j]\n        i = 0\n        j = 0\n        while i \u003c haystackLen and j \u003c needleLen: # process haystack with helper array\n            if j == -1 or haystack[i] == needle[j]:\n                i += 1\n                j += 1\n            else:\n                j = patternArr[j]\n        if j == needleLen: \n            return i-j\n        else: \n            return -1\n```\n\nFirst, we set up the necessary variables including the length of the needle, the length of the haystack, and the pattern array that we will use to speed up matching.\n\nNext, we loop over the needle string. `i` leads and will always be ahead while `j` follows (because `i` starts at one and `j` starts at zero). If there is a match then we write the value of `j` into the helper/pattern array at `i`. You can think of a match as when some part of the suffix is the same as some part of the prefix.\n\nAfter populating the helper array we can finally look through the haystack for a match. In this loop, `i` will represent our place in the haystack and `j` our position in the needle. I've used the same variable names for brevity but you could easily name them something else if that helps you understand and document your code.\n\nIf there is a match between the haystack and the needle we increment both counters, otherwise we reset `j` to the previous value in the pattern array.\n\nIf `j` equals the length of the needle then we know we have matched the entire needle. The location of the needle in the haystack is calculated by `i-j`. Otherwise, if no needle is found and we will return -1 to indicate that there is no match.\n\n### Example Execution\n\nThat is a fairly complex piece of code so let's set through it to see how the parts are working together.\n\nSuppose we have the needle `abac` and the haystack of `abyabgabac`.\n\nUpon processing the needle we will generate the following helper array.\n\n![Helper array](https://cdn.hashnode.com/res/hashnode/image/upload/v1680707435645/0cadf349-8118-45aa-97d9-b41c63fa9b97.png)\n\nThe one and two underneath the second `ab` represent a match between that suffix and the earlier prefix `ab`. Now we use that array to process the haystack.\n\n![Processing the haystack](https://cdn.hashnode.com/res/hashnode/image/upload/v1680708215104/aa779722-48f7-48a8-801e-f5626c1e810b.png)\n\nNotice the `i` counter variable which is tracking our position in the haystack is monotonically increasing while the `j` value jumps around. The `j` value is jumping around because it is tracking how much of a match we have seen. If we reach the end of the haystack and `j` equals the length of the needle that means we have seen a complete match.\n\nIf you want to see more examples I would recommend adding print statements to the code snippet above. Seeing the output of `i` and `j` on different inputs is really helpful for understanding this problem.\n\n### KMP Solution Runtime\n\nAssume _m_ is the length of the haystack and _n_ is the length of the needle. At the start, we calculate the needle suffix array which is _O(n)._ Then we loop over the entire length of the haystack which is _O(m)._ Therefore, the overall time complexity of the KMP solution is _O(m + n)_.\n\nBy taking this more advanced approach we have sped up the big O runtime from _O(mn)_ to _O(m + n)_. Not too bad for a day's work.\n\n## Where to Learn More\n\nIf you find video explanations helpful then I would highly recommend [this video by Coding Made Simple](https://www.youtube.com/watch?v=GTJr8OvyEVQ).\n\nYou can also read more interview prep with my [series on SWE interviewing](https://blog.seancoughlin.me/series/interview-prep).\n\nThe cover image was generated using [Dalle2](https://openai.com/product/dall-e-2) and the prompt \"binary on a computer screen.\"\n\n---\n\nOriginally published at https://blog.seancoughlin.me.","cached_tag_list":"interview, python, strings, kmp","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Learn how to improve string matching efficiency with the Knuth-Morris-Pratt (KMP) algorithm.         ...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/find-the-index-of-the-first-occurrence-in-a-string-naive-and-kmp-solutions-2ma","public_reactions_count":0,"processed_html":"\u003cp\u003eLearn how to improve string matching efficiency with the Knuth-Morris-Pratt (KMP) algorithm.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--rVR9PYRJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ltpstoy2s71qq9bf91oj.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--rVR9PYRJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ltpstoy2s71qq9bf91oj.png\" alt=\"Binary on a screen generated by AI\" loading=\"lazy\" width=\"800\" height=\"800\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"problem\" href=\"#problem\"\u003e\n  \u003c/a\u003e\n  Problem\n\u003c/h2\u003e\n\n\u003cp\u003eLet's take a look at the problem \u003ca href=\"https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string/\"\u003eFind the Index of the First Occurance in a String\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eIn this problem, you have two strings: a needle and a haystack. The goal is to return the index of the needle in the haystack or -1 if the needle does not exist in the haystack.\u003c/p\u003e\n\n\u003cp\u003eThis is a Leetcode easy-level problem. I think the naive solution fits that definition, however as you will see, the faster runtime solution requires some heavy lifting. That solution makes it feels more like a medium problem to me.\u003c/p\u003e\n\n\u003cp\u003eI'll be tackling this problem using Python.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"naive-solution\" href=\"#naive-solution\"\u003e\n  \u003c/a\u003e\n  Naive Solution\n\u003c/h2\u003e\n\n\u003cp\u003eFirst, let's consider the naive solution. At the very basic level, we can use the \u003ca href=\"https://www.w3schools.com/python/ref_string_find.asp\"\u003ebuilt-in find function\u003c/a\u003e.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eclass Solution(object):\n    def strStr(self, haystack, needle):\n            return haystack.find(needle)\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eIf you don't have access to \u003cem\u003efind\u003c/em\u003e or are a Python warrior and want to grind things out, then you could implement the following.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eclass Solution(object):\n    def strStr(self, haystack, needle):\n        searchLen = len(needle)\n        for i in range(len(haystack)):\n            if haystack[i:i+searchLen] == needle:\n                return i\n        return -1\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eThis line uses string slicing to extract a substring of length \u003ccode\u003esearchLen\u003c/code\u003e starting at the current index \u003ccode\u003ei\u003c/code\u003e of the \u003ccode\u003ehaystack\u003c/code\u003e string, and then checks if it matches the \u003ccode\u003eneedle\u003c/code\u003e string. If there's a match, the function returns the current index \u003ccode\u003ei\u003c/code\u003e. If we reach the end of the \u003ccode\u003ehaystack\u003c/code\u003e then we return \u003ccode\u003e-1\u003c/code\u003e as the needle was not found.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"naive-solution-runtime\" href=\"#naive-solution-runtime\"\u003e\n  \u003c/a\u003e\n  Naive Solution Runtime\n\u003c/h3\u003e\n\n\u003cp\u003eAssume \u003cem\u003em\u003c/em\u003e is the length of the haystack and \u003cem\u003en\u003c/em\u003e is the length of the needle. We are looping over the entire length of the haystack giving at least \u003cem\u003eO(m).\u003c/em\u003e In each iteration, we are taking a substring and comparing it to the needle which gives O(\u003cem\u003en)\u003c/em\u003e. Therefore, the overall time complexity of this Naive solution is \u003cstrong\u003e\u003cem\u003eO(mn)\u003c/em\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"kmp-solution\" href=\"#kmp-solution\"\u003e\n  \u003c/a\u003e\n  KMP Solution\n\u003c/h2\u003e\n\n\u003cp\u003e\u003cem\u003eO(mn)\u003c/em\u003e isn't a very good solution and we can certainly do better by using an algorithm known as KnuthMorrisPratt or simply KMP. Before diving into code, it is helpful to understand what KMP is, so let's look at some definitions.\u003c/p\u003e\n\n\u003cp\u003eChatGPT describes KMP as the following.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe Knuth-Morris-Pratt (KMP) algorithm is a string-matching algorithm that searches for occurrences of a pattern within a longer text. It was developed by Donald Knuth, Vaughan Pratt, and James Morris in 1977.\u003c/p\u003e\n\n\u003cp\u003eThe KMP algorithm uses a pre-processing step to build a partial match table, which is used to determine the largest possible suffix of the pattern that matches a prefix of the text. This information is then used to avoid unnecessary comparisons when searching for occurrences of the pattern within the text.\u003c/p\u003e\n\n\u003cp\u003eThe KMP algorithm has a time complexity of O(m + n), where m is the length of the pattern and n is the length of the text. This makes it more efficient than other string-matching algorithms such as the naive algorithm, which has a time complexity of O(m * n).\u003c/p\u003e\n\n\u003cp\u003eOverall, the KMP algorithm is a useful tool for applications such as text search, data compression, and bioinformatics.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThank you GPT. However, I prefer \u003ca href=\"https://en.wikipedia.org/wiki/Knuth%E2%80%93Morris%E2%80%93Pratt_algorithm\"\u003eWikipedia's more succinct KMP description\u003c/a\u003e.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e[KMP Algorithm] searches for occurrences of a \"word\" \u003ccode\u003eW\u003c/code\u003e within a main \"text string\" \u003ccode\u003eS\u003c/code\u003e by employing the observation that when a mismatch occurs, the word itself embodies sufficient information to determine where the next match could begin, thus bypassing re-examination of previously matched characters.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eFinally, let's consider one last definition from \u003ca href=\"https://www.geeksforgeeks.org/kmp-algorithm-for-pattern-searching/\"\u003eGeeksForGeeks\u003c/a\u003e.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe basic idea behind KMPs algorithm is: whenever we detect a mismatch (after some matches), we already know some of the characters in the text of the next window. We take advantage of this information to avoid matching the characters that we know will anyway match.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eEquipped with these three definitions of KMP we can begin to see this technique offers a speed-up because we avoid unnecessary comparisons on each iteration over the haystack.\u003c/p\u003e\n\n\u003cp\u003eThe key leverage point needed to make this speed up is that we will use a helper array to do prefix and suffix matching.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"kmp-implementation\" href=\"#kmp-implementation\"\u003e\n  \u003c/a\u003e\n  KMP Implementation\n\u003c/h3\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eclass Solution(object):\n    def strStr(self, haystack, needle):\n        needleLen = len(needle)\n        haystackLen = len(haystack)\n        i = 1\n        j = 0\n        patternArr = [-1] + [0] * needleLen\n        while i \u0026lt; needleLen: # calculate helper array\n            if j == -1 or needle[i] == needle[j]:   \n                i += 1\n                j += 1\n                patternArr[i] = j\n            else:\n                j = patternArr[j]\n        i = 0\n        j = 0\n        while i \u0026lt; haystackLen and j \u0026lt; needleLen: # process haystack with helper array\n            if j == -1 or haystack[i] == needle[j]:\n                i += 1\n                j += 1\n            else:\n                j = patternArr[j]\n        if j == needleLen: \n            return i-j\n        else: \n            return -1\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eFirst, we set up the necessary variables including the length of the needle, the length of the haystack, and the pattern array that we will use to speed up matching.\u003c/p\u003e\n\n\u003cp\u003eNext, we loop over the needle string. \u003ccode\u003ei\u003c/code\u003e leads and will always be ahead while \u003ccode\u003ej\u003c/code\u003e follows (because \u003ccode\u003ei\u003c/code\u003e starts at one and \u003ccode\u003ej\u003c/code\u003e starts at zero). If there is a match then we write the value of \u003ccode\u003ej\u003c/code\u003e into the helper/pattern array at \u003ccode\u003ei\u003c/code\u003e. You can think of a match as when some part of the suffix is the same as some part of the prefix.\u003c/p\u003e\n\n\u003cp\u003eAfter populating the helper array we can finally look through the haystack for a match. In this loop, \u003ccode\u003ei\u003c/code\u003e will represent our place in the haystack and \u003ccode\u003ej\u003c/code\u003e our position in the needle. I've used the same variable names for brevity but you could easily name them something else if that helps you understand and document your code.\u003c/p\u003e\n\n\u003cp\u003eIf there is a match between the haystack and the needle we increment both counters, otherwise we reset \u003ccode\u003ej\u003c/code\u003e to the previous value in the pattern array.\u003c/p\u003e\n\n\u003cp\u003eIf \u003ccode\u003ej\u003c/code\u003e equals the length of the needle then we know we have matched the entire needle. The location of the needle in the haystack is calculated by \u003ccode\u003ei-j\u003c/code\u003e. Otherwise, if no needle is found and we will return -1 to indicate that there is no match.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"example-execution\" href=\"#example-execution\"\u003e\n  \u003c/a\u003e\n  Example Execution\n\u003c/h3\u003e\n\n\u003cp\u003eThat is a fairly complex piece of code so let's set through it to see how the parts are working together.\u003c/p\u003e\n\n\u003cp\u003eSuppose we have the needle \u003ccode\u003eabac\u003c/code\u003e and the haystack of \u003ccode\u003eabyabgabac\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eUpon processing the needle we will generate the following helper array.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Wl9rcBpe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1680707435645/0cadf349-8118-45aa-97d9-b41c63fa9b97.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Wl9rcBpe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1680707435645/0cadf349-8118-45aa-97d9-b41c63fa9b97.png\" alt=\"Helper array\" loading=\"lazy\" width=\"232\" height=\"92\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe one and two underneath the second \u003ccode\u003eab\u003c/code\u003e represent a match between that suffix and the earlier prefix \u003ccode\u003eab\u003c/code\u003e. Now we use that array to process the haystack.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--w3ktLlB1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1680708215104/aa779722-48f7-48a8-801e-f5626c1e810b.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--w3ktLlB1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1680708215104/aa779722-48f7-48a8-801e-f5626c1e810b.png\" alt=\"Processing the haystack\" loading=\"lazy\" width=\"640\" height=\"144\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eNotice the \u003ccode\u003ei\u003c/code\u003e counter variable which is tracking our position in the haystack is monotonically increasing while the \u003ccode\u003ej\u003c/code\u003e value jumps around. The \u003ccode\u003ej\u003c/code\u003e value is jumping around because it is tracking how much of a match we have seen. If we reach the end of the haystack and \u003ccode\u003ej\u003c/code\u003e equals the length of the needle that means we have seen a complete match.\u003c/p\u003e\n\n\u003cp\u003eIf you want to see more examples I would recommend adding print statements to the code snippet above. Seeing the output of \u003ccode\u003ei\u003c/code\u003e and \u003ccode\u003ej\u003c/code\u003e on different inputs is really helpful for understanding this problem.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"kmp-solution-runtime\" href=\"#kmp-solution-runtime\"\u003e\n  \u003c/a\u003e\n  KMP Solution Runtime\n\u003c/h3\u003e\n\n\u003cp\u003eAssume \u003cem\u003em\u003c/em\u003e is the length of the haystack and \u003cem\u003en\u003c/em\u003e is the length of the needle. At the start, we calculate the needle suffix array which is \u003cem\u003eO(n).\u003c/em\u003e Then we loop over the entire length of the haystack which is \u003cem\u003eO(m).\u003c/em\u003e Therefore, the overall time complexity of the KMP solution is \u003cem\u003eO(m + n)\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eBy taking this more advanced approach we have sped up the big O runtime from \u003cem\u003eO(mn)\u003c/em\u003e to \u003cem\u003eO(m + n)\u003c/em\u003e. Not too bad for a day's work.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"where-to-learn-more\" href=\"#where-to-learn-more\"\u003e\n  \u003c/a\u003e\n  Where to Learn More\n\u003c/h2\u003e\n\n\u003cp\u003eIf you find video explanations helpful then I would highly recommend \u003ca href=\"https://www.youtube.com/watch?v=GTJr8OvyEVQ\"\u003ethis video by Coding Made Simple\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eYou can also read more interview prep with my \u003ca href=\"https://blog.seancoughlin.me/series/interview-prep\"\u003eseries on SWE interviewing\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe cover image was generated using \u003ca href=\"https://openai.com/product/dall-e-2\"\u003eDalle2\u003c/a\u003e and the prompt \"binary on a computer screen.\"\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"find-the-index-of-the-first-occurrence-in-a-string-naive-and-kmp-solutions-2ma","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b2hiuymtd0t6mh0k0b8r.png","title":"Find the Index of the First Occurrence in a String (Naive and KMP Solutions)","video":null,"video_code":null},{"created_at":"2023-04-08T19:30:02.751Z","crossposted_at":"2023-04-08T19:33:35.019Z","edited_at":null,"last_comment_at":"2023-04-08T19:21:23.000Z","published_at":"2023-04-08T19:21:23.000Z","canonical_url":"https://blog.seancoughlin.me/how-to-determine-valid-parentheses","feed_source_url":"https://blog.seancoughlin.me/how-to-determine-valid-parentheses","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: How to Determine Valid Parentheses\npublished: true\ndate: 2023-04-08 19:21:23 UTC\ntags: #leetcode #interview #tutorial #swe\ncanonical_url: https://blog.seancoughlin.me/how-to-determine-valid-parentheses\n---\n\nMastering the Art of String Validation: A Guide to Check the Validity of Parentheses, Brackets, and Braces.\n\n![Math symbols](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ltz5gz7b855bhncvxtyq.png)\n\n## The Problem\n\nWith this article, I will be covering the [Leetcode Valid Parentheses problem](https://leetcode.com/problems/valid-parentheses/description/). Leetcode describes the problem with the following.\n\n\u003e Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.\n\u003e \n\u003e An input string is valid if:\n\u003e \n\u003e 1. Open brackets must be closed by the same type of brackets.\n\u003e \n\u003e 2. Open brackets must be closed in the correct order.\n\u003e \n\u003e 3. Every close bracket has a corresponding open bracket of the same type.\n\nOne key note in the problem description is that the string `s` will only contain parenthesis-type characters. This simplification makes the problem easier because we only need to worry about six characters and don't have any concerns with trimming or stripping out irrelevant characters.\n\nWith this problem, and with most coding challenges, I followed a three-step process:\n\n1. First, I like to understand the problem with an incorrect solution\n\n2. Then I'll determine a solution that works\n\n3. Finally, I'll optimize that solution to be fast and clean\n\nWith that framework, let's get into tackling this problem using Python.\n\n## ~~Solution 1~~ - Getting Things Wrong\n\nMy kneejerk reaction was to count the number of parenthesis types. Since every opening parenthesis type will need a corresponding closing parenthesis, the counts need to be equal.\n\n```python\n# Note - this doesn't work\nclass Solution(object):\n    def isValid(self, s):\n        stack = []\n        for letter in s:\n            stack.append(letter)\n        forwardParen = 0\n        backwardParen = 0\n        forwardCurly = 0\n        backwardCurly = 0\n        forwardSquare = 0\n        backwardSquare = 0\n        while stack:\n            letter = stack.pop()\n            if letter == '(':\n                forwardParen += 1\n            elif letter == ')':\n                backwardParen += 1\n            elif letter == '{':\n                forwardCurly += 1\n            elif letter == '}':\n                backwardCurly += 1\n            elif letter == '[':\n                forwardSquare += 1\n            else:\n                backwardSquare += 1\n        valid = forwardParen == backwardParen and forwardCurly == backwardCurly and forwardSquare == backwardSquare\n        return valid # this solution will not work\n\n```\n\nThis is a nice starting point, however, this solution is inaccurate. An example like `[(])` has an equivalent number of each type, but the alignment of those types does not form a valid set of parentheses.\n\nComing up with an incorrect solution is an _okay_ way to start. An incorrect solution is often a good way to organize thoughts, understand the problem better, and rule out possibilities. From an incorrect solution, we can continue to optimize until we have something correct. Then from a correct solution, we can optimize further until we have a fast solution.\n\nIn this incorrect first step, I came across the kernel of understanding that leads to a solution. A stack.\n\n## Solution 2 - Finding the Answer\n\nThe stack data structure will allow us to maintain the ordering of the characters in the string. For our stack, we will append each forward character. For example, `[({})]` would produce:\n\n1. `{`\n\n2. `(`\n\n3. `[`\n\nFor any non-forward characters, we will pop the stack and compare if there is a match between our position in the string and the character in the stack we can continue onwards. If there is a mismatch then we know this isn't valid, and we can return false.\n\nUsing our previous example. The `}` matches the `{` on the top of the stack. Then `)` matches the `(` that follows on the stack. And finally, `]` matches `[` which is the last value in the stack. Since the stack is empty we know we have a valid string.\n\n```python\nclass Solution(object):\n    def isValid(self, s):\n        stack = []\n        for i in s:\n            if i == '(' or i == '{' or i == '[':\n                stack.append(i)\n            else:\n                if len(stack) == 0:\n                    return False\n                else:\n                    value = stack.pop()\n                    if value == '(' and i != ')':\n                        return False\n                    elif value == '{' and i != '}':\n                        return False\n                    elif value == '[' and i != ']':\n                        return False\n        return len(stack) == 0\n\n```\n\n## Final Optimized Solution\n\nI think the second solution is good, however, we can do better by incorporating a dictionary. Using a dictionary will allow for the compression of all the messy conditional logic into one simple check using the `in` keyword.\n\n```python\nclass Solution(object):\n    def isValid(self, s):\n        parens = {'(':')', '{':'}','[':']'}\n        stack = []\n        for i in s:\n            if i in parens:\n                stack.append(i)\n            elif len(stack) == 0 or parens[stack.pop()] != i:\n                return False\n        return len(stack) == 0\n\n```\n\nFirst, define a dictionary containing forward parentheses as the key and backward parentheses as the value. Once again we will also need a stack.\n\nOnce we have the dictionary and a stack we can start our iteration over the string. If a character is in the dictionary then we add that to the stack. Here a character being in the dictionary implies that it is a forward character. If a character doesn't fit that description we drop to that second conditional.\n\nThe first condition in the elif covers cases when there is no opening character to a backward. For example, `))))))` has all backward characters and no forward characters. That will cause the stack to be empty, and then we know that this would not be a valid string.\n\nThe second condition in the elif covers mismatches in the ordering. For example, `{(})[]` has the correct number of forward and backward characters, but the ordering isn't valid. Here the `{` would be added to the stack and then `(` would follow. However, once we hit `}` then `(` would be popped from the stack. That does not match, so we bomb out and return false.\n\nFinally, we return if the stack is empty or not. For example, the string `{` doesn't have a closing counterpart, so the stack would not be empty and that would not be a valid string. And that's it, the solution is complete!\n\n### Big O Calculation\n\nLookups in our dictionary are _O(1)_. Appending to and popping from the array, which we are using as the underlying data structure for the stack, is also [_O(1)_](https://stackoverflow.com/questions/195625/what-is-the-time-complexity-of-popping-elements-from-list-in-python). We loop over the entire string so that is _O(n)_. Therefore the overall runtime is **_O(n)_**.\n\n## Where to Learn More\n\nYou can also read more interview prep with my [series on SWE interviewing](https://blog.seancoughlin.me/series/interview-prep).\n\nThe cover image was generated using [Dalle2](https://openai.com/product/dall-e-2) and the prompt create an image incorporating mathematical symbols and a lot of parentheses in an impressionist style.\n\n---\n\nOriginally published at https://blog.seancoughlin.me.","cached_tag_list":"leetcode, interview, tutorial, swe","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Mastering the Art of String Validation: A Guide to Check the Validity of Parentheses, Brackets, and...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/how-to-determine-valid-parentheses-50fg","public_reactions_count":0,"processed_html":"\u003cp\u003eMastering the Art of String Validation: A Guide to Check the Validity of Parentheses, Brackets, and Braces.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--qDqeuosN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ltz5gz7b855bhncvxtyq.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--qDqeuosN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ltz5gz7b855bhncvxtyq.png\" alt=\"Math symbols\" loading=\"lazy\" width=\"800\" height=\"800\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"the-problem\" href=\"#the-problem\"\u003e\n  \u003c/a\u003e\n  The Problem\n\u003c/h2\u003e\n\n\u003cp\u003eWith this article, I will be covering the \u003ca href=\"https://leetcode.com/problems/valid-parentheses/description/\"\u003eLeetcode Valid Parentheses problem\u003c/a\u003e. Leetcode describes the problem with the following.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eGiven a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.\u003c/p\u003e\n\n\u003cp\u003eAn input string is valid if:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eOpen brackets must be closed by the same type of brackets.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eOpen brackets must be closed in the correct order.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eEvery close bracket has a corresponding open bracket of the same type.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eOne key note in the problem description is that the string \u003ccode\u003es\u003c/code\u003e will only contain parenthesis-type characters. This simplification makes the problem easier because we only need to worry about six characters and don't have any concerns with trimming or stripping out irrelevant characters.\u003c/p\u003e\n\n\u003cp\u003eWith this problem, and with most coding challenges, I followed a three-step process:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eFirst, I like to understand the problem with an incorrect solution\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThen I'll determine a solution that works\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eFinally, I'll optimize that solution to be fast and clean\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eWith that framework, let's get into tackling this problem using Python.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"solution-1-getting-things-wrong\" href=\"#solution-1-getting-things-wrong\"\u003e\n  \u003c/a\u003e\n  \u003cdel\u003eSolution 1\u003c/del\u003e - Getting Things Wrong\n\u003c/h2\u003e\n\n\u003cp\u003eMy kneejerk reaction was to count the number of parenthesis types. Since every opening parenthesis type will need a corresponding closing parenthesis, the counts need to be equal.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e# Note - this doesn't work\n\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSolution\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eobject\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eisValid\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estack\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eletter\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n            \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eletter\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eforwardParen\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ebackwardParen\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eforwardCurly\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ebackwardCurly\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eforwardSquare\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ebackwardSquare\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eletter\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epop\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eletter\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003e(\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eforwardParen\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"n\"\u003eletter\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003e)\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003ebackwardParen\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"n\"\u003eletter\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003e{\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eforwardCurly\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"n\"\u003eletter\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003e}\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003ebackwardCurly\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"n\"\u003eletter\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003e[\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eforwardSquare\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003ebackwardSquare\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n        \u003cspan class=\"n\"\u003evalid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eforwardParen\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003ebackwardParen\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003eforwardCurly\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003ebackwardCurly\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003eforwardSquare\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003ebackwardSquare\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003evalid\u003c/span\u003e \u003cspan class=\"c1\"\u003e# this solution will not work\n\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eThis is a nice starting point, however, this solution is inaccurate. An example like \u003ccode\u003e[(])\u003c/code\u003e has an equivalent number of each type, but the alignment of those types does not form a valid set of parentheses.\u003c/p\u003e\n\n\u003cp\u003eComing up with an incorrect solution is an \u003cem\u003eokay\u003c/em\u003e way to start. An incorrect solution is often a good way to organize thoughts, understand the problem better, and rule out possibilities. From an incorrect solution, we can continue to optimize until we have something correct. Then from a correct solution, we can optimize further until we have a fast solution.\u003c/p\u003e\n\n\u003cp\u003eIn this incorrect first step, I came across the kernel of understanding that leads to a solution. A stack.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"solution-2-finding-the-answer\" href=\"#solution-2-finding-the-answer\"\u003e\n  \u003c/a\u003e\n  Solution 2 - Finding the Answer\n\u003c/h2\u003e\n\n\u003cp\u003eThe stack data structure will allow us to maintain the ordering of the characters in the string. For our stack, we will append each forward character. For example, \u003ccode\u003e[({})]\u003c/code\u003e would produce:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e{\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e(\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e[\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eFor any non-forward characters, we will pop the stack and compare if there is a match between our position in the string and the character in the stack we can continue onwards. If there is a mismatch then we know this isn't valid, and we can return false.\u003c/p\u003e\n\n\u003cp\u003eUsing our previous example. The \u003ccode\u003e}\u003c/code\u003e matches the \u003ccode\u003e{\u003c/code\u003e on the top of the stack. Then \u003ccode\u003e)\u003c/code\u003e matches the \u003ccode\u003e(\u003c/code\u003e that follows on the stack. And finally, \u003ccode\u003e]\u003c/code\u003e matches \u003ccode\u003e[\u003c/code\u003e which is the last value in the stack. Since the stack is empty we know we have a valid string.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSolution\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eobject\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eisValid\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estack\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003e(\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003e{\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003e[\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nf\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003eFalse\u003c/span\u003e\n                \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                    \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epop\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n                    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003e(\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003e)\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003eFalse\u003c/span\u003e\n                    \u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003e{\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003e}\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003eFalse\u003c/span\u003e\n                    \u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003e[\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003e]\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003eFalse\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nf\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"final-optimized-solution\" href=\"#final-optimized-solution\"\u003e\n  \u003c/a\u003e\n  Final Optimized Solution\n\u003c/h2\u003e\n\n\u003cp\u003eI think the second solution is good, however, we can do better by incorporating a dictionary. Using a dictionary will allow for the compression of all the messy conditional logic into one simple check using the \u003ccode\u003ein\u003c/code\u003e keyword.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSolution\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eobject\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eisValid\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eparens\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003e(\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003e)\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003e{\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003e}\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003e[\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003e]\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estack\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eparens\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"nf\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"n\"\u003eparens\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epop\u003c/span\u003e\u003cspan class=\"p\"\u003e()]\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003eFalse\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nf\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estack\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eFirst, define a dictionary containing forward parentheses as the key and backward parentheses as the value. Once again we will also need a stack.\u003c/p\u003e\n\n\u003cp\u003eOnce we have the dictionary and a stack we can start our iteration over the string. If a character is in the dictionary then we add that to the stack. Here a character being in the dictionary implies that it is a forward character. If a character doesn't fit that description we drop to that second conditional.\u003c/p\u003e\n\n\u003cp\u003eThe first condition in the elif covers cases when there is no opening character to a backward. For example, \u003ccode\u003e))))))\u003c/code\u003e has all backward characters and no forward characters. That will cause the stack to be empty, and then we know that this would not be a valid string.\u003c/p\u003e\n\n\u003cp\u003eThe second condition in the elif covers mismatches in the ordering. For example, \u003ccode\u003e{(})[]\u003c/code\u003e has the correct number of forward and backward characters, but the ordering isn't valid. Here the \u003ccode\u003e{\u003c/code\u003e would be added to the stack and then \u003ccode\u003e(\u003c/code\u003e would follow. However, once we hit \u003ccode\u003e}\u003c/code\u003e then \u003ccode\u003e(\u003c/code\u003e would be popped from the stack. That does not match, so we bomb out and return false.\u003c/p\u003e\n\n\u003cp\u003eFinally, we return if the stack is empty or not. For example, the string \u003ccode\u003e{\u003c/code\u003e doesn't have a closing counterpart, so the stack would not be empty and that would not be a valid string. And that's it, the solution is complete!\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"big-o-calculation\" href=\"#big-o-calculation\"\u003e\n  \u003c/a\u003e\n  Big O Calculation\n\u003c/h3\u003e\n\n\u003cp\u003eLookups in our dictionary are \u003cem\u003eO(1)\u003c/em\u003e. Appending to and popping from the array, which we are using as the underlying data structure for the stack, is also \u003ca href=\"https://stackoverflow.com/questions/195625/what-is-the-time-complexity-of-popping-elements-from-list-in-python\"\u003e\u003cem\u003eO(1)\u003c/em\u003e\u003c/a\u003e. We loop over the entire string so that is \u003cem\u003eO(n)\u003c/em\u003e. Therefore the overall runtime is \u003cstrong\u003e\u003cem\u003eO(n)\u003c/em\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"where-to-learn-more\" href=\"#where-to-learn-more\"\u003e\n  \u003c/a\u003e\n  Where to Learn More\n\u003c/h2\u003e\n\n\u003cp\u003eYou can also read more interview prep with my \u003ca href=\"https://blog.seancoughlin.me/series/interview-prep\"\u003eseries on SWE interviewing\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe cover image was generated using \u003ca href=\"https://openai.com/product/dall-e-2\"\u003eDalle2\u003c/a\u003e and the prompt create an image incorporating mathematical symbols and a lot of parentheses in an impressionist style.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"how-to-determine-valid-parentheses-50fg","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ft7co79ymzihhv8ghvv.png","title":"How to Determine Valid Parentheses","video":null,"video_code":null},{"created_at":"2023-04-10T01:20:46.635Z","crossposted_at":"2023-04-10T01:35:31.396Z","edited_at":null,"last_comment_at":"2023-04-10T00:54:27.000Z","published_at":"2023-04-10T00:54:27.000Z","canonical_url":"https://blog.seancoughlin.me/welcome-to-cloud-computing","feed_source_url":"https://blog.seancoughlin.me/welcome-to-cloud-computing","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Welcome to Cloud Computing!\npublished: true\ndate: 2023-04-10 00:54:27 UTC\ntags: #cloud #cloudcomputing #blogging\ncanonical_url: https://blog.seancoughlin.me/welcome-to-cloud-computing\n---\n\nEmbarking on a Journey Through the Cloud: Exploring the Technologies, Services, and Innovations Shaping the Future of Computing\n\n![Cloud](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zb54pygc3lmu9qooxjn6.png)\n\nWelcome to the first installment of an in-depth blog series on cloud computing. As the world becomes increasingly connected and technology rapidly advances, cloud computing has emerged as a powerful force, transforming businesses and revolutionizing how we develop, deploy, and manage software applications. This blog series aims to provide a comprehensive understanding of cloud computing, delving into its various aspects, services, and technologies, while highlighting its impact on modern software development and IT infrastructure management.\n\nI'll explore a wide range of topics, from the fundamentals of cloud computing, such as Infrastructure as a Service (IaaS), Platform as a Service (PaaS), and Software as a Service (SaaS), to more specialized services like serverless computing and container orchestration. We'll also delve into the intricacies of cloud security, data storage, and networking, discussing best practices and strategies for building secure, scalable, and resilient cloud-based applications.\n\nThis blog series will shed light on the challenges and opportunities that cloud computing presents. I'll investigate how organizations of all sizes have leveraged the power of the cloud to streamline their operations, reduce costs, and innovate faster. Additionally, I'll explore the future of cloud computing, examining emerging trends and technologies that have the potential to shape the cloud landscape in the coming years.\n\nWhether you're a seasoned software engineer, an IT professional, or a tech enthusiast, I hope this blog series will serve as a valuable resource, providing you with the knowledge and inspiration needed to harness the full potential of cloud computing. Stay tuned to embark on this exciting journey, diving deep into cloud computing and discovering how it continues to reshape the technology landscape and drive digital transformation.\n\n* * *\n\nThis is just one part of a series I am writing about cloud computing. You can read more at [https://blog.seancoughlin.me/series/cloud-computing](https://blog.seancoughlin.me/series/cloud-computing).\n\n---\n\nOriginally published at https://blog.seancoughlin.me.","cached_tag_list":"cloud, cloudcomputing, blogging","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Embarking on a Journey Through the Cloud: Exploring the Technologies, Services, and Innovations...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/welcome-to-cloud-computing-4o22","public_reactions_count":5,"processed_html":"\u003cp\u003eEmbarking on a Journey Through the Cloud: Exploring the Technologies, Services, and Innovations Shaping the Future of Computing\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--2ZcxN2Sf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zb54pygc3lmu9qooxjn6.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--2ZcxN2Sf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zb54pygc3lmu9qooxjn6.png\" alt=\"Cloud\" loading=\"lazy\" width=\"800\" height=\"800\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eWelcome to the first installment of an in-depth blog series on cloud computing. As the world becomes increasingly connected and technology rapidly advances, cloud computing has emerged as a powerful force, transforming businesses and revolutionizing how we develop, deploy, and manage software applications. This blog series aims to provide a comprehensive understanding of cloud computing, delving into its various aspects, services, and technologies, while highlighting its impact on modern software development and IT infrastructure management.\u003c/p\u003e\n\n\u003cp\u003eI'll explore a wide range of topics, from the fundamentals of cloud computing, such as Infrastructure as a Service (IaaS), Platform as a Service (PaaS), and Software as a Service (SaaS), to more specialized services like serverless computing and container orchestration. We'll also delve into the intricacies of cloud security, data storage, and networking, discussing best practices and strategies for building secure, scalable, and resilient cloud-based applications.\u003c/p\u003e\n\n\u003cp\u003eThis blog series will shed light on the challenges and opportunities that cloud computing presents. I'll investigate how organizations of all sizes have leveraged the power of the cloud to streamline their operations, reduce costs, and innovate faster. Additionally, I'll explore the future of cloud computing, examining emerging trends and technologies that have the potential to shape the cloud landscape in the coming years.\u003c/p\u003e\n\n\u003cp\u003eWhether you're a seasoned software engineer, an IT professional, or a tech enthusiast, I hope this blog series will serve as a valuable resource, providing you with the knowledge and inspiration needed to harness the full potential of cloud computing. Stay tuned to embark on this exciting journey, diving deep into cloud computing and discovering how it continues to reshape the technology landscape and drive digital transformation.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eThis is just one part of a series I am writing about cloud computing. You can read more at \u003ca href=\"https://blog.seancoughlin.me/series/cloud-computing\"\u003ehttps://blog.seancoughlin.me/series/cloud-computing\u003c/a\u003e.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"welcome-to-cloud-computing-4o22","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/37m2eltastrf949xcnmu.png","title":"Welcome to Cloud Computing!","video":null,"video_code":null},{"created_at":"2023-04-10T16:11:07.051Z","crossposted_at":"2023-04-10T16:12:24.934Z","edited_at":null,"last_comment_at":"2023-04-10T16:07:40.000Z","published_at":"2023-04-10T16:07:40.000Z","canonical_url":"https://blog.seancoughlin.me/demystifying-the-cloud-understanding-the-fundamentals-and-impact-of-cloud-computing","feed_source_url":"https://blog.seancoughlin.me/demystifying-the-cloud-understanding-the-fundamentals-and-impact-of-cloud-computing","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Demystifying the Cloud: Understanding the Fundamentals and Impact of Cloud Computing\npublished: true\ndate: 2023-04-10 16:07:40 UTC\ntags: #cloud #cloudcomputing #softwareengineering\ncanonical_url: https://blog.seancoughlin.me/demystifying-the-cloud-understanding-the-fundamentals-and-impact-of-cloud-computing\n---\n\nCloud Computing: The Evolution and Impact on Software Development\n\n![Picture of a cloud in cartoon](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3z888typtzreypn8ibhy.png)\n\nCloud computing has revolutionized how we build, deploy, and maintain software. This technology has shifted paradigms in the software industry, enabling developers to create innovative solutions while leveraging the power of distributed resources. In this blog post, we'll explore the concept of cloud computing, its benefits, its history, and how it has influenced software development.\n\n### What is Cloud Computing?\n\nCloud computing is the delivery of computing services, such as storage, processing power, and databases, over the Internet.\n\nIt allows users to access and utilize computing resources on demand without requiring investment in the underlying computers. By leveraging cloud services, businesses and developers can scale their applications dynamically and pay only for the resources they consume.\n\n### The History of Cloud Computing\n\nThe roots of cloud computing can be [traced back to the 1960s](https://en.wikipedia.org/wiki/Cloud_computing#History), with the development of [time-sharing](https://en.wikipedia.org/wiki/Time-sharing) and [mainframe](https://en.wikipedia.org/wiki/Mainframe_computer) computers. However, it wasn't until the 1990s that the modern concept of cloud computing emerged.\n\nThe introduction of virtualization technologies and the growth of the Internet laid the foundation for cloud computing as we know it today. In [2006](https://en.wikipedia.org/wiki/Amazon_Elastic_Compute_Cloud), Amazon launched its [Elastic Compute Cloud (EC2)](https://aws.amazon.com/pm/ec2/) service, marking the birth of the first commercially available cloud computing platform.\n\n### Benefits of Cloud Computing\n\nThere are several key benefits of cloud computing for both developers and organizations:\n\n- Cost Savings: Cloud services operate on a pay-as-you-go model, reducing the need for upfront investments in hardware and infrastructure. This enables businesses to minimize their capital expenditure and operational costs.\n\n- Scalability: Cloud platforms provide almost limitless resources, allowing applications to scale as demand increases or decreases.\n\n- Flexibility: Developers can choose from a wide range of cloud services, such as Infrastructure as a Service (IaaS), Platform as a Service (PaaS), and Software as a Service (SaaS), to best suit their specific needs.\n\n- Increased Collaboration: Cloud computing enables teams to work together more effectively by providing centralized storage and tools for sharing and collaborating on code, data, and documents.\n\n- Enhanced Security: Cloud providers invest heavily in security measures, such as encryption, access controls, and monitoring, to protect their infrastructure and clients' data.\n\nAll these benefits take away many of the challenging, technical requirements that organizations used to need to fulfill in-house.\n\n### The Impact of Cloud Computing on Software Development\n\nCloud computing has had a significant influence on the software development process, affecting various aspects of the industry:\n\n- Agile Development and Continuous Integration: Cloud platforms enable developers to deploy, test, and iterate applications more quickly and easily, supporting the adoption of agile methodologies and continuous integration practices.\n\n- DevOps and Infrastructure as Code (IaC): The cloud has facilitated the emergence of DevOps culture and the use of IaC, which allows developers to manage infrastructure and configurations using version-controlled scripts, promoting consistency and efficiency in deployments.\n\n- Microservices and Serverless Architectures: Cloud platforms support the development of applications based on microservices and serverless architectures, which promotes modularity, scalability, and resilience.\n\n- Data and Analytics: The availability of scalable and cost-effective cloud-based storage and processing power has paved the way for big data analytics and machine learning, enabling businesses to gain insights and make data-driven decisions.\n\n### Conclusion\n\nCloud computing has fundamentally changed the landscape of software development. It offers a wealth of benefits and enables new paradigms in application architecture. As cloud technologies evolve, developers and organizations must adapt and embrace these changes to remain competitive in the ever-changing software industry.\n\n* * *\n\nThis is just one part of a series I am writing about cloud computing. You can read more at [https://blog.seancoughlin.me/series/cloud-computing](https://blog.seancoughlin.me/series/cloud-computing).\n\n---\n\nOriginally published at https://blog.seancoughlin.me.","cached_tag_list":"cloud, cloudcomputing, softwareengineering","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Cloud Computing: The Evolution and Impact on Software Development    Cloud computing has...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/demystifying-the-cloud-understanding-the-fundamentals-and-impact-of-cloud-computing-2bpd","public_reactions_count":0,"processed_html":"\u003cp\u003eCloud Computing: The Evolution and Impact on Software Development\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--YILb8WFU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3z888typtzreypn8ibhy.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--YILb8WFU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3z888typtzreypn8ibhy.png\" alt=\"Picture of a cloud in cartoon\" loading=\"lazy\" width=\"800\" height=\"800\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eCloud computing has revolutionized how we build, deploy, and maintain software. This technology has shifted paradigms in the software industry, enabling developers to create innovative solutions while leveraging the power of distributed resources. In this blog post, we'll explore the concept of cloud computing, its benefits, its history, and how it has influenced software development.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"what-is-cloud-computing\" href=\"#what-is-cloud-computing\"\u003e\n  \u003c/a\u003e\n  What is Cloud Computing?\n\u003c/h3\u003e\n\n\u003cp\u003eCloud computing is the delivery of computing services, such as storage, processing power, and databases, over the Internet.\u003c/p\u003e\n\n\u003cp\u003eIt allows users to access and utilize computing resources on demand without requiring investment in the underlying computers. By leveraging cloud services, businesses and developers can scale their applications dynamically and pay only for the resources they consume.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"the-history-of-cloud-computing\" href=\"#the-history-of-cloud-computing\"\u003e\n  \u003c/a\u003e\n  The History of Cloud Computing\n\u003c/h3\u003e\n\n\u003cp\u003eThe roots of cloud computing can be \u003ca href=\"https://en.wikipedia.org/wiki/Cloud_computing#History\"\u003etraced back to the 1960s\u003c/a\u003e, with the development of \u003ca href=\"https://en.wikipedia.org/wiki/Time-sharing\"\u003etime-sharing\u003c/a\u003e and \u003ca href=\"https://en.wikipedia.org/wiki/Mainframe_computer\"\u003emainframe\u003c/a\u003e computers. However, it wasn't until the 1990s that the modern concept of cloud computing emerged.\u003c/p\u003e\n\n\u003cp\u003eThe introduction of virtualization technologies and the growth of the Internet laid the foundation for cloud computing as we know it today. In \u003ca href=\"https://en.wikipedia.org/wiki/Amazon_Elastic_Compute_Cloud\"\u003e2006\u003c/a\u003e, Amazon launched its \u003ca href=\"https://aws.amazon.com/pm/ec2/\"\u003eElastic Compute Cloud (EC2)\u003c/a\u003e service, marking the birth of the first commercially available cloud computing platform.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"benefits-of-cloud-computing\" href=\"#benefits-of-cloud-computing\"\u003e\n  \u003c/a\u003e\n  Benefits of Cloud Computing\n\u003c/h3\u003e\n\n\u003cp\u003eThere are several key benefits of cloud computing for both developers and organizations:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eCost Savings: Cloud services operate on a pay-as-you-go model, reducing the need for upfront investments in hardware and infrastructure. This enables businesses to minimize their capital expenditure and operational costs.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eScalability: Cloud platforms provide almost limitless resources, allowing applications to scale as demand increases or decreases.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eFlexibility: Developers can choose from a wide range of cloud services, such as Infrastructure as a Service (IaaS), Platform as a Service (PaaS), and Software as a Service (SaaS), to best suit their specific needs.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eIncreased Collaboration: Cloud computing enables teams to work together more effectively by providing centralized storage and tools for sharing and collaborating on code, data, and documents.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eEnhanced Security: Cloud providers invest heavily in security measures, such as encryption, access controls, and monitoring, to protect their infrastructure and clients' data.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAll these benefits take away many of the challenging, technical requirements that organizations used to need to fulfill in-house.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"the-impact-of-cloud-computing-on-software-development\" href=\"#the-impact-of-cloud-computing-on-software-development\"\u003e\n  \u003c/a\u003e\n  The Impact of Cloud Computing on Software Development\n\u003c/h3\u003e\n\n\u003cp\u003eCloud computing has had a significant influence on the software development process, affecting various aspects of the industry:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eAgile Development and Continuous Integration: Cloud platforms enable developers to deploy, test, and iterate applications more quickly and easily, supporting the adoption of agile methodologies and continuous integration practices.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eDevOps and Infrastructure as Code (IaC): The cloud has facilitated the emergence of DevOps culture and the use of IaC, which allows developers to manage infrastructure and configurations using version-controlled scripts, promoting consistency and efficiency in deployments.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eMicroservices and Serverless Architectures: Cloud platforms support the development of applications based on microservices and serverless architectures, which promotes modularity, scalability, and resilience.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eData and Analytics: The availability of scalable and cost-effective cloud-based storage and processing power has paved the way for big data analytics and machine learning, enabling businesses to gain insights and make data-driven decisions.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eCloud computing has fundamentally changed the landscape of software development. It offers a wealth of benefits and enables new paradigms in application architecture. As cloud technologies evolve, developers and organizations must adapt and embrace these changes to remain competitive in the ever-changing software industry.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eThis is just one part of a series I am writing about cloud computing. You can read more at \u003ca href=\"https://blog.seancoughlin.me/series/cloud-computing\"\u003ehttps://blog.seancoughlin.me/series/cloud-computing\u003c/a\u003e.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"demystifying-the-cloud-understanding-the-fundamentals-and-impact-of-cloud-computing-2bpd","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/okhs7211c780m184fe76.png","title":"Demystifying the Cloud: Understanding the Fundamentals and Impact of Cloud Computing","video":null,"video_code":null},{"created_at":"2023-04-10T16:43:47.939Z","crossposted_at":"2023-04-10T16:45:08.439Z","edited_at":null,"last_comment_at":"2023-04-10T16:39:37.000Z","published_at":"2023-04-10T16:39:37.000Z","canonical_url":"https://blog.seancoughlin.me/exploring-cloud-computing-types-iaas-paas-saas-and-beyond","feed_source_url":"https://blog.seancoughlin.me/exploring-cloud-computing-types-iaas-paas-saas-and-beyond","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Exploring Cloud Computing Types: IaaS, PaaS, SaaS, and Beyond\npublished: true\ndate: 2023-04-10 16:39:37 UTC\ntags: #cloud #cloudcomputing #saas #iaas\ncanonical_url: https://blog.seancoughlin.me/exploring-cloud-computing-types-iaas-paas-saas-and-beyond\n---\n\nDecoding the Cloud Service Models: A Comprehensive Guide to SaaS, PaaS, and IaaS\n\n![IaaS vs SaaS vs PaaS](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y7bowgmad1oqq95wn254.png)\n\n## Introduction\n\nCloud computing has become an essential part of modern software development, offering diverse services that cater to different requirements. In this post, we'll delve into the various cloud computing types, including Infrastructure as a Service (IaaS), Platform as a Service (PaaS), and Software as a Service (SaaS), as well as some emerging specialized models, such as Function as a Service (FaaS) and Mobile Backend as a Service (MBaaS).\n\n## Infrastructure as a Service (IaaS)\n\nIaaS provides virtualized computing resources over the internet, including virtual machines, storage, and networking. With IaaS, users can provision and manage their infrastructure, giving them control over aspects such as operating systems, middleware, and runtime environments.\n\nIaaS is suitable for organizations with fluctuating workloads or those looking to build custom applications from the ground up. Popular IaaS providers include [Amazon Web Services (AWS](https://aws.amazon.com)), [Microsoft Azure](https://azure.microsoft.com/en-us/), and [Google Cloud Platform (GCP)](https://cloud.google.com).\n\n## Platform as a Service (PaaS)\n\nPaaS offers a higher-level abstraction, providing a platform for developers to build, deploy, and manage applications without worrying about the underlying computers. PaaS typically includes tools and services to streamline the development process, such as databases, development frameworks, and application servers.\n\nThis model is ideal for teams focused on rapid application development and iteration. Examples of PaaS providers are [Heroku](https://www.heroku.com), [Google App Engine](https://cloud.google.com/appengine), [OCP](https://www.redhat.com/en/technologies/cloud-computing/openshift/container-platform), and [Microsoft Azure App Service](https://azure.microsoft.com/en-us/products/app-service/).\n\n## Software as a Service (SaaS)\n\nSaaS is the most abstracted cloud computing type, delivering fully functional software applications via the internet. Users access these applications through a web browser. The provider hosts, maintains, and updates the software on behalf of the user.\n\nSaaS is suitable for businesses looking for ready-to-use applications without the need to develop or manage any underlying infrastructure. Examples of SaaS applications include Salesforce, Slack, Miro, and Google Workspace. Most applications delivered online follow this paradigm. For example, Netflix could be considered SaaS.\n\n## Function as a Service (FaaS)\n\nFaaS, also known as serverless computing, is an emerging cloud computing model that enables developers to write and deploy individual functions without managing servers. FaaS automatically scales with the number of function executions, and users are billed based on the actual function usage. This model is ideal for event-driven applications and microservices architectures. [AWS Lambda](https://aws.amazon.com/lambda/), [Azure Functions](https://azure.microsoft.com/en-us/products/functions/), and [Google Cloud Functions](https://cloud.google.com/functions) are popular FaaS offerings.\n\n## Mobile Backend as a Service (MBaaS)\n\nMBaaS, or Backend as a Service (BaaS), is a specialized cloud computing service that provides pre-built backend functionality for mobile and web applications. MBaaS platforms handle tasks such as user authentication, push notifications, data storage, and social media integrations, allowing developers to focus on creating the front-end user experience. Examples of MBaaS providers include [Firebase](https://firebase.google.com), [Parse](https://parseplatform.org), and [AWS Amplify](https://aws.amazon.com/amplify/).\n\n## Other as-a-service models\n\nThere are [many other service models](https://en.wikipedia.org/wiki/As_a_service). Some of these include [banking as a service](https://en.wikipedia.org/wiki/Banking_as_a_service), [data as a service](https://en.wikipedia.org/wiki/Data_as_a_service), [logging as a service](https://en.wikipedia.org/wiki/Logging_as_a_service), and many others. Many of these blank-as-a-service models are recombinations or flavors of the previously mentioned varieties.\n\n## Conclusion\n\nUnderstanding the differences between various cloud computing types is crucial for businesses and developers looking to leverage the power of the cloud. Each model has its unique benefits and use cases, and selecting the right combination can significantly impact the efficiency and success of your software development projects. By carefully evaluating your organization's needs, you can choose the most suitable cloud computing model(s) and unlock the full potential of this transformative technology.\n\n* * *\n\nThis is just one part of a series I am writing about cloud computing. You can read more at [**https://blog.seancoughlin.me/series/cloud-computing**](https://blog.seancoughlin.me/series/cloud-computing).\n\n---\n\nOriginally published at https://blog.seancoughlin.me.","cached_tag_list":"cloud, cloudcomputing, saas, iaas","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Decoding the Cloud Service Models: A Comprehensive Guide to SaaS, PaaS, and IaaS            ...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/exploring-cloud-computing-types-iaas-paas-saas-and-beyond-1cd0","public_reactions_count":0,"processed_html":"\u003cp\u003eDecoding the Cloud Service Models: A Comprehensive Guide to SaaS, PaaS, and IaaS\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--1C1g4lNW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y7bowgmad1oqq95wn254.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--1C1g4lNW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y7bowgmad1oqq95wn254.png\" alt=\"IaaS vs SaaS vs PaaS\" loading=\"lazy\" width=\"800\" height=\"450\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"introduction\" href=\"#introduction\"\u003e\n  \u003c/a\u003e\n  Introduction\n\u003c/h2\u003e\n\n\u003cp\u003eCloud computing has become an essential part of modern software development, offering diverse services that cater to different requirements. In this post, we'll delve into the various cloud computing types, including Infrastructure as a Service (IaaS), Platform as a Service (PaaS), and Software as a Service (SaaS), as well as some emerging specialized models, such as Function as a Service (FaaS) and Mobile Backend as a Service (MBaaS).\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"infrastructure-as-a-service-iaas\" href=\"#infrastructure-as-a-service-iaas\"\u003e\n  \u003c/a\u003e\n  Infrastructure as a Service (IaaS)\n\u003c/h2\u003e\n\n\u003cp\u003eIaaS provides virtualized computing resources over the internet, including virtual machines, storage, and networking. With IaaS, users can provision and manage their infrastructure, giving them control over aspects such as operating systems, middleware, and runtime environments.\u003c/p\u003e\n\n\u003cp\u003eIaaS is suitable for organizations with fluctuating workloads or those looking to build custom applications from the ground up. Popular IaaS providers include \u003ca href=\"https://aws.amazon.com\"\u003eAmazon Web Services (AWS\u003c/a\u003e), \u003ca href=\"https://azure.microsoft.com/en-us/\"\u003eMicrosoft Azure\u003c/a\u003e, and \u003ca href=\"https://cloud.google.com\"\u003eGoogle Cloud Platform (GCP)\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"platform-as-a-service-paas\" href=\"#platform-as-a-service-paas\"\u003e\n  \u003c/a\u003e\n  Platform as a Service (PaaS)\n\u003c/h2\u003e\n\n\u003cp\u003ePaaS offers a higher-level abstraction, providing a platform for developers to build, deploy, and manage applications without worrying about the underlying computers. PaaS typically includes tools and services to streamline the development process, such as databases, development frameworks, and application servers.\u003c/p\u003e\n\n\u003cp\u003eThis model is ideal for teams focused on rapid application development and iteration. Examples of PaaS providers are \u003ca href=\"https://www.heroku.com\"\u003eHeroku\u003c/a\u003e, \u003ca href=\"https://cloud.google.com/appengine\"\u003eGoogle App Engine\u003c/a\u003e, \u003ca href=\"https://www.redhat.com/en/technologies/cloud-computing/openshift/container-platform\"\u003eOCP\u003c/a\u003e, and \u003ca href=\"https://azure.microsoft.com/en-us/products/app-service/\"\u003eMicrosoft Azure App Service\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"software-as-a-service-saas\" href=\"#software-as-a-service-saas\"\u003e\n  \u003c/a\u003e\n  Software as a Service (SaaS)\n\u003c/h2\u003e\n\n\u003cp\u003eSaaS is the most abstracted cloud computing type, delivering fully functional software applications via the internet. Users access these applications through a web browser. The provider hosts, maintains, and updates the software on behalf of the user.\u003c/p\u003e\n\n\u003cp\u003eSaaS is suitable for businesses looking for ready-to-use applications without the need to develop or manage any underlying infrastructure. Examples of SaaS applications include Salesforce, Slack, Miro, and Google Workspace. Most applications delivered online follow this paradigm. For example, Netflix could be considered SaaS.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"function-as-a-service-faas\" href=\"#function-as-a-service-faas\"\u003e\n  \u003c/a\u003e\n  Function as a Service (FaaS)\n\u003c/h2\u003e\n\n\u003cp\u003eFaaS, also known as serverless computing, is an emerging cloud computing model that enables developers to write and deploy individual functions without managing servers. FaaS automatically scales with the number of function executions, and users are billed based on the actual function usage. This model is ideal for event-driven applications and microservices architectures. \u003ca href=\"https://aws.amazon.com/lambda/\"\u003eAWS Lambda\u003c/a\u003e, \u003ca href=\"https://azure.microsoft.com/en-us/products/functions/\"\u003eAzure Functions\u003c/a\u003e, and \u003ca href=\"https://cloud.google.com/functions\"\u003eGoogle Cloud Functions\u003c/a\u003e are popular FaaS offerings.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"mobile-backend-as-a-service-mbaas\" href=\"#mobile-backend-as-a-service-mbaas\"\u003e\n  \u003c/a\u003e\n  Mobile Backend as a Service (MBaaS)\n\u003c/h2\u003e\n\n\u003cp\u003eMBaaS, or Backend as a Service (BaaS), is a specialized cloud computing service that provides pre-built backend functionality for mobile and web applications. MBaaS platforms handle tasks such as user authentication, push notifications, data storage, and social media integrations, allowing developers to focus on creating the front-end user experience. Examples of MBaaS providers include \u003ca href=\"https://firebase.google.com\"\u003eFirebase\u003c/a\u003e, \u003ca href=\"https://parseplatform.org\"\u003eParse\u003c/a\u003e, and \u003ca href=\"https://aws.amazon.com/amplify/\"\u003eAWS Amplify\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"other-asaservice-models\" href=\"#other-asaservice-models\"\u003e\n  \u003c/a\u003e\n  Other as-a-service models\n\u003c/h2\u003e\n\n\u003cp\u003eThere are \u003ca href=\"https://en.wikipedia.org/wiki/As_a_service\"\u003emany other service models\u003c/a\u003e. Some of these include \u003ca href=\"https://en.wikipedia.org/wiki/Banking_as_a_service\"\u003ebanking as a service\u003c/a\u003e, \u003ca href=\"https://en.wikipedia.org/wiki/Data_as_a_service\"\u003edata as a service\u003c/a\u003e, \u003ca href=\"https://en.wikipedia.org/wiki/Logging_as_a_service\"\u003elogging as a service\u003c/a\u003e, and many others. Many of these blank-as-a-service models are recombinations or flavors of the previously mentioned varieties.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eUnderstanding the differences between various cloud computing types is crucial for businesses and developers looking to leverage the power of the cloud. Each model has its unique benefits and use cases, and selecting the right combination can significantly impact the efficiency and success of your software development projects. By carefully evaluating your organization's needs, you can choose the most suitable cloud computing model(s) and unlock the full potential of this transformative technology.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eThis is just one part of a series I am writing about cloud computing. You can read more at \u003ca href=\"https://blog.seancoughlin.me/series/cloud-computing\"\u003e\u003cstrong\u003ehttps://blog.seancoughlin.me/series/cloud-computing\u003c/strong\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"exploring-cloud-computing-types-iaas-paas-saas-and-beyond-1cd0","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/liqxxvh40a3l9wjg8g15.png","title":"Exploring Cloud Computing Types: IaaS, PaaS, SaaS, and Beyond","video":null,"video_code":null},{"created_at":"2023-04-11T00:46:11.935Z","crossposted_at":"2023-04-11T00:47:58.241Z","edited_at":null,"last_comment_at":"2023-04-10T23:19:39.000Z","published_at":"2023-04-10T23:19:39.000Z","canonical_url":"https://blog.seancoughlin.me/understanding-cloud-storage-types-object-block-file-and-database-storage","feed_source_url":"https://blog.seancoughlin.me/understanding-cloud-storage-types-object-block-file-and-database-storage","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Understanding Cloud Storage Types: Object, Block, File, and Database Storage\npublished: true\ndate: 2023-04-10 23:19:39 UTC\ntags: #cloud #cloudstorage #cloudcomputing\ncanonical_url: https://blog.seancoughlin.me/understanding-cloud-storage-types-object-block-file-and-database-storage\n---\n\n## Introduction\n\n[Cloud storage](https://en.wikipedia.org/wiki/Cloud_storage) has become an integral part of modern software development and IT infrastructure, providing scalable, on-demand storage solutions for various data types. As a software engineer, it's essential to understand the different types of cloud storage available and their respective use cases. In this blog post, we'll explore object, block, file, and database storage, discussing their characteristics, benefits, and potential applications.\n\n## Object Storage\n\n[Object storage](https://en.wikipedia.org/wiki/Object_storage) is a highly scalable and cost-effective storage solution designed for handling unstructured data, such as documents, images, and videos. Data is stored as objects, each with a unique identifier, allowing for efficient retrieval and manipulation. Object storage is highly durable and fault-tolerant, making it an excellent choice for storing large amounts of data that need to be easily accessible from anywhere.\n\nSome key features of object storage include:\n\n- Flat namespace: Objects are stored in a single, flat address space, without the need for hierarchical structures like folders or directories.\n\n- Metadata: Each object includes user-defined metadata, providing additional context and information about the stored data.\n\n- RESTful APIs: Object storage typically supports RESTful APIs, enabling developers to easily interact with the storage system programmatically.\n\nSome example use cases include:\n\n- Storing and serving static website assets (images, CSS, JavaScript files)\n\n- Archiving large volumes of log files or backups\n\n- Hosting media files for streaming services\n\nFinally, popular object storage services:\n\n- [Amazon S3 (Simple Storage Service) by AWS](https://aws.amazon.com/s3/)\n\n- [Google Cloud Storage by Google Cloud Platform](https://cloud.google.com/storage)\n\n- [Azure Blob Storage by Microsoft Azure](https://azure.microsoft.com/en-us/products/storage/blobs)\n\n## Block Storage\n\n[Block storage](https://en.wikipedia.org/wiki/Block_(data_storage)) is a low-latency, high-performance storage solution that works by dividing data into fixed-size blocks. Each block is assigned a unique identifier and stored independently, allowing for efficient read and write operations. Block storage is well-suited for applications requiring high IOPS (Input/Output Operations Per Second) and low latency, such as databases, virtual machines, and transactional workloads.\n\nSome key features of block storage include:\n\n- Consistency: Block storage provides consistent performance, ensuring predictable read and write speeds.\n\n- Flexibility: Users can dynamically allocate and resize storage volumes as needed, providing greater control over storage resources.\n\n- Data protection: Block storage often includes built-in features for data protection, such as snapshots and replication.\n\nExample uses of Block Storage:\n\n- Running databases like MySQL, PostgreSQL, or Oracle DB\n\n- Hosting virtual machines or container instances\n\n- Providing high-performance storage for transactional workloads\n\nPopular services for block storage:\n\n- [Amazon Elastic Block Store (EBS) by AWS](https://aws.amazon.com/ebs/)\n\n- [Google Persistent Disk by Google Cloud Platform](https://cloud.google.com/persistent-disk)\n\n- [Azure Disk Storage by Microsoft Azure](https://azure.microsoft.com/en-us/products/storage/disks)\n\n## File Storage\n\n[File storage](https://en.wikipedia.org/wiki/File_system) is a familiar and user-friendly storage solution that organizes data in a hierarchical structure, using folders and directories. File storage systems utilize standard file access protocols like [NFS (Network File System)](https://en.wikipedia.org/wiki/Network_File_System), making them compatible with many applications and devices. File storage is an excellent option for applications that require shared access to files, such as content management systems and collaboration tools.\n\nSome key features of file storage include:\n\n- Familiarity: File storage uses a familiar hierarchical structure, making it easy to navigate and manage.\n\n- Shared access: Multiple users and applications can access and modify files concurrently, facilitating collaboration and resource sharing.\n\n- Permissions and access control: File storage systems typically include granular permissions and access control, ensuring data security and compliance.\n\nFile Storage can be used for:\n\n- Sharing files and documents across teams in a corporate environment\n\n- Storing and managing data for content management systems ([CMS](https://en.wikipedia.org/wiki/Content_management_system))\n\n- Implementing a shared storage solution for containerized applications\n\nCommon services for file storage:\n\n- [Amazon Elastic File System (EFS) by AWS](https://aws.amazon.com/efs/)\n\n- [Google Filestore by Google Cloud Platform](https://cloud.google.com/filestore/)\n\n- [Azure Files by Microsoft Azure](https://azure.microsoft.com/en-us/products/storage/files)\n\n## Database Storage:\n\n[Database storage](https://en.wikipedia.org/wiki/Database_storage_structures) refers to the storage solutions designed specifically for managing structured data in databases. Databases require high-performance, low-latency storage to handle the demands of transactional workloads and complex queries. Cloud providers offer various managed database storage solutions, such as relational databases, NoSQL databases, and in-memory databases, catering to different use cases and performance requirements.\n\nSome key features of database storage include:\n\n- Schema and indexing: Database storage systems provide schema and indexing capabilities, allowing for efficient data organization and retrieval.\n\n- Transactions and consistency: Databases ensure data consistency through transactional operations, maintaining data integrity and reliability.\n\n- Scalability and performance: Managed database storage solutions in the cloud offer auto-scaling and performance optimization features, ensuring databases can handle growing workloads and demands.\n\nDatabase Storage is often used for:\n\n- Storing customer information and transactional data for e-commerce websites\n\n- Managing user data and content for social media platforms\n\n- Analyzing large datasets for business intelligence and reporting\n\nPopular services for database storage:\n\n- [Amazon RDS (Relational Database Service)](https://aws.amazon.com/rds/) and [Amazon DynamoDB (NoSQL)](https://aws.amazon.com/dynamodb/) by AWS\n\n- [Google Cloud SQL (Relational)](https://cloud.google.com/sql) and [Google Cloud Firestore (NoSQL)](https://firebase.google.com/docs/firestore) by Google Cloud Platform\n\n- [Azure SQL Database (Relational)](https://azure.microsoft.com/en-us/products/azure-sql/) and [Azure Cosmos DB (NoSQL)](https://azure.microsoft.com/en-us/products/cosmos-db) by Microsoft Azure\n\n## Choosing the Right Storage Solution\n\nSelecting the appropriate cloud storage solution for your application or workload depends on several factors, such as performance requirements, data structure, and access patterns. When evaluating your options, consider the specific needs of your application and the advantages and limitations of each storage type.\n\n- Start by identifying the type of data your application will be handling. If you're working with unstructured data like images, videos, or large files, object storage may be the best choice due to its scalability and cost-effectiveness.\n\n- For workloads requiring low latency and high IOPS, such as databases or virtual machines, block storage is a suitable option.\n\n- If your application relies on shared file access and collaboration, file storage offers a familiar hierarchical structure and supports granular permissions.\n\n- Finally, for managing structured data with complex query patterns, consider using a managed database storage solution that meets your performance and scalability requirements.\n\nBy carefully evaluating your application's needs and understanding the differences between storage types, you can choose the right cloud storage solution to ensure optimal performance, reliability, and cost-efficiency.\n\n---\n\nOriginally published at https://blog.seancoughlin.me.","cached_tag_list":"cloud, cloudstorage, cloudcomputing","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Introduction   Cloud storage has become an integral part of modern software development and...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/understanding-cloud-storage-types-object-block-file-and-database-storage-211a","public_reactions_count":0,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"introduction\" href=\"#introduction\"\u003e\n  \u003c/a\u003e\n  Introduction\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Cloud_storage\"\u003eCloud storage\u003c/a\u003e has become an integral part of modern software development and IT infrastructure, providing scalable, on-demand storage solutions for various data types. As a software engineer, it's essential to understand the different types of cloud storage available and their respective use cases. In this blog post, we'll explore object, block, file, and database storage, discussing their characteristics, benefits, and potential applications.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"object-storage\" href=\"#object-storage\"\u003e\n  \u003c/a\u003e\n  Object Storage\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Object_storage\"\u003eObject storage\u003c/a\u003e is a highly scalable and cost-effective storage solution designed for handling unstructured data, such as documents, images, and videos. Data is stored as objects, each with a unique identifier, allowing for efficient retrieval and manipulation. Object storage is highly durable and fault-tolerant, making it an excellent choice for storing large amounts of data that need to be easily accessible from anywhere.\u003c/p\u003e\n\n\u003cp\u003eSome key features of object storage include:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eFlat namespace: Objects are stored in a single, flat address space, without the need for hierarchical structures like folders or directories.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eMetadata: Each object includes user-defined metadata, providing additional context and information about the stored data.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eRESTful APIs: Object storage typically supports RESTful APIs, enabling developers to easily interact with the storage system programmatically.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eSome example use cases include:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eStoring and serving static website assets (images, CSS, JavaScript files)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eArchiving large volumes of log files or backups\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eHosting media files for streaming services\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eFinally, popular object storage services:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://aws.amazon.com/s3/\"\u003eAmazon S3 (Simple Storage Service) by AWS\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://cloud.google.com/storage\"\u003eGoogle Cloud Storage by Google Cloud Platform\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://azure.microsoft.com/en-us/products/storage/blobs\"\u003eAzure Blob Storage by Microsoft Azure\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"block-storage\" href=\"#block-storage\"\u003e\n  \u003c/a\u003e\n  Block Storage\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Block_(data_storage)\"\u003eBlock storage\u003c/a\u003e is a low-latency, high-performance storage solution that works by dividing data into fixed-size blocks. Each block is assigned a unique identifier and stored independently, allowing for efficient read and write operations. Block storage is well-suited for applications requiring high IOPS (Input/Output Operations Per Second) and low latency, such as databases, virtual machines, and transactional workloads.\u003c/p\u003e\n\n\u003cp\u003eSome key features of block storage include:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eConsistency: Block storage provides consistent performance, ensuring predictable read and write speeds.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eFlexibility: Users can dynamically allocate and resize storage volumes as needed, providing greater control over storage resources.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eData protection: Block storage often includes built-in features for data protection, such as snapshots and replication.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eExample uses of Block Storage:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eRunning databases like MySQL, PostgreSQL, or Oracle DB\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eHosting virtual machines or container instances\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eProviding high-performance storage for transactional workloads\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003ePopular services for block storage:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://aws.amazon.com/ebs/\"\u003eAmazon Elastic Block Store (EBS) by AWS\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://cloud.google.com/persistent-disk\"\u003eGoogle Persistent Disk by Google Cloud Platform\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://azure.microsoft.com/en-us/products/storage/disks\"\u003eAzure Disk Storage by Microsoft Azure\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"file-storage\" href=\"#file-storage\"\u003e\n  \u003c/a\u003e\n  File Storage\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/File_system\"\u003eFile storage\u003c/a\u003e is a familiar and user-friendly storage solution that organizes data in a hierarchical structure, using folders and directories. File storage systems utilize standard file access protocols like \u003ca href=\"https://en.wikipedia.org/wiki/Network_File_System\"\u003eNFS (Network File System)\u003c/a\u003e, making them compatible with many applications and devices. File storage is an excellent option for applications that require shared access to files, such as content management systems and collaboration tools.\u003c/p\u003e\n\n\u003cp\u003eSome key features of file storage include:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eFamiliarity: File storage uses a familiar hierarchical structure, making it easy to navigate and manage.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eShared access: Multiple users and applications can access and modify files concurrently, facilitating collaboration and resource sharing.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003ePermissions and access control: File storage systems typically include granular permissions and access control, ensuring data security and compliance.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eFile Storage can be used for:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eSharing files and documents across teams in a corporate environment\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eStoring and managing data for content management systems (\u003ca href=\"https://en.wikipedia.org/wiki/Content_management_system\"\u003eCMS\u003c/a\u003e)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eImplementing a shared storage solution for containerized applications\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eCommon services for file storage:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://aws.amazon.com/efs/\"\u003eAmazon Elastic File System (EFS) by AWS\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://cloud.google.com/filestore/\"\u003eGoogle Filestore by Google Cloud Platform\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://azure.microsoft.com/en-us/products/storage/files\"\u003eAzure Files by Microsoft Azure\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"database-storage\" href=\"#database-storage\"\u003e\n  \u003c/a\u003e\n  Database Storage:\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Database_storage_structures\"\u003eDatabase storage\u003c/a\u003e refers to the storage solutions designed specifically for managing structured data in databases. Databases require high-performance, low-latency storage to handle the demands of transactional workloads and complex queries. Cloud providers offer various managed database storage solutions, such as relational databases, NoSQL databases, and in-memory databases, catering to different use cases and performance requirements.\u003c/p\u003e\n\n\u003cp\u003eSome key features of database storage include:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eSchema and indexing: Database storage systems provide schema and indexing capabilities, allowing for efficient data organization and retrieval.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eTransactions and consistency: Databases ensure data consistency through transactional operations, maintaining data integrity and reliability.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eScalability and performance: Managed database storage solutions in the cloud offer auto-scaling and performance optimization features, ensuring databases can handle growing workloads and demands.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eDatabase Storage is often used for:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eStoring customer information and transactional data for e-commerce websites\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eManaging user data and content for social media platforms\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eAnalyzing large datasets for business intelligence and reporting\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003ePopular services for database storage:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://aws.amazon.com/rds/\"\u003eAmazon RDS (Relational Database Service)\u003c/a\u003e and \u003ca href=\"https://aws.amazon.com/dynamodb/\"\u003eAmazon DynamoDB (NoSQL)\u003c/a\u003e by AWS\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://cloud.google.com/sql\"\u003eGoogle Cloud SQL (Relational)\u003c/a\u003e and \u003ca href=\"https://firebase.google.com/docs/firestore\"\u003eGoogle Cloud Firestore (NoSQL)\u003c/a\u003e by Google Cloud Platform\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://azure.microsoft.com/en-us/products/azure-sql/\"\u003eAzure SQL Database (Relational)\u003c/a\u003e and \u003ca href=\"https://azure.microsoft.com/en-us/products/cosmos-db\"\u003eAzure Cosmos DB (NoSQL)\u003c/a\u003e by Microsoft Azure\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"choosing-the-right-storage-solution\" href=\"#choosing-the-right-storage-solution\"\u003e\n  \u003c/a\u003e\n  Choosing the Right Storage Solution\n\u003c/h2\u003e\n\n\u003cp\u003eSelecting the appropriate cloud storage solution for your application or workload depends on several factors, such as performance requirements, data structure, and access patterns. When evaluating your options, consider the specific needs of your application and the advantages and limitations of each storage type.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eStart by identifying the type of data your application will be handling. If you're working with unstructured data like images, videos, or large files, object storage may be the best choice due to its scalability and cost-effectiveness.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eFor workloads requiring low latency and high IOPS, such as databases or virtual machines, block storage is a suitable option.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eIf your application relies on shared file access and collaboration, file storage offers a familiar hierarchical structure and supports granular permissions.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eFinally, for managing structured data with complex query patterns, consider using a managed database storage solution that meets your performance and scalability requirements.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eBy carefully evaluating your application's needs and understanding the differences between storage types, you can choose the right cloud storage solution to ensure optimal performance, reliability, and cost-efficiency.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"understanding-cloud-storage-types-object-block-file-and-database-storage-211a","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qjxygw680j925p39ta5.png","title":"Understanding Cloud Storage Types: Object, Block, File, and Database Storage","video":null,"video_code":null},{"created_at":"2023-04-11T16:10:21.791Z","crossposted_at":"2023-04-11T16:14:32.252Z","edited_at":null,"last_comment_at":"2023-04-11T15:19:02.000Z","published_at":"2023-04-11T15:19:02.000Z","canonical_url":"https://blog.seancoughlin.me/amazon-ec2-powering-cloud-computing-with-virtual-servers","feed_source_url":"https://blog.seancoughlin.me/amazon-ec2-powering-cloud-computing-with-virtual-servers","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Amazon EC2: Powering Cloud Computing with Virtual Servers\npublished: true\ndate: 2023-04-11 15:19:02 UTC\ntags: #cloud #cloudcomputing #ec2 #aws\ncanonical_url: https://blog.seancoughlin.me/amazon-ec2-powering-cloud-computing-with-virtual-servers\n---\n\nUnveiling the Power of Elastic Compute Cloud for Scalable and Flexible Virtual Servers\n\n![What is EC2?](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w34vls0g6pcn12rei2ny.png)\n\n## Introduction\n\n[Amazon Elastic Compute Cloud (EC2)](https://aws.amazon.com/ec2/) is a core component of [Amazon Web Services (AWS)](https://aws.amazon.com), offering scalable, on-demand virtual server instances for various computing needs. In this post, we'll explore what EC2 is, its history, potential applications, and how it has revolutionized the cloud computing landscape.\n\n## What is Amazon EC2?\n\nAmazon EC2 is an [Infrastructure as a Service (IaaS)](https://dev.to/scc33/exploring-cloud-computing-types-iaas-paas-saas-and-beyond-1cd0) offering that allows users to provision and manage virtual servers, called instances, [in the cloud](https://dev.to/scc33/demystifying-the-cloud-understanding-the-fundamentals-and-impact-of-cloud-computing-2bpd). These instances can be customized with various configurations, such as CPU, memory, storage, and network capacity, to suit specific workloads and requirements. EC2 instances run on Amazon's global infrastructure, ensuring high availability, performance, and security. Users can scale their infrastructure up or down as needed, paying only for the resources they consume.\n\n## The History of Amazon EC2\n\n[Launched in 2006](https://en.wikipedia.org/wiki/Amazon_Elastic_Compute_Cloud#History), Amazon EC2 was one of the first commercially available cloud computing services, marking the beginning of the modern cloud era. The introduction of EC2 was a game-changer, providing developers and businesses with an alternative to traditional, capital-intensive server infrastructure. Since its inception, EC2 has continually evolved, adding new features, instance types, and additional services to enhance its capabilities and cater to the ever-growing demand for cloud computing resources.\n\n## Potential Applications of Amazon EC2\n\nAmazon EC2 has a wide range of potential applications, making it a versatile solution for various computing needs:\n\n- Web Hosting: EC2 instances can be used to host websites and web applications, providing scalable resources to handle fluctuating traffic loads.\n\n- Big Data Processing: EC2 can be utilized for processing large datasets, running analytics, and deploying machine learning models, with the ability to scale resources dynamically as workloads increase.\n\n- Backup and Disaster Recovery: EC2 instances can serve as backup servers or form part of a disaster recovery strategy, ensuring data is stored redundantly and can be quickly restored in case of an outage or data loss.\n\n- Development and Testing: Developers can use EC2 instances to create and test applications in isolated environments, without impacting their local machines or production systems.\n\n- High-Performance Computing ([HPC](https://en.wikipedia.org/wiki/High-performance_computing)): EC2 offers specialized instance types optimized for compute-intensive workloads, such as scientific simulations, rendering, and financial modeling.\n\n## Complementary Services in the AWS Ecosystem\n\nAmazon EC2 is tightly integrated with other AWS services, enabling users to build comprehensive cloud-based solutions:\n\n- [Amazon Elastic Block Store (EBS)](https://aws.amazon.com/ebs/): Provides persistent block storage for EC2 instances, ensuring data is retained even after an instance is terminated.\n\n- [Amazon Virtual Private Cloud (VPC)](https://aws.amazon.com/vpc/): Offers isolated virtual networks within the AWS infrastructure, allowing users to configure and control their network environment.\n\n- [Amazon Elastic Load Balancing (ELB)](https://aws.amazon.com/elasticloadbalancing/): Distributes incoming traffic across multiple EC2 instances, improving availability and fault tolerance.\n\n- [Amazon Relational Database Service (RDS)](https://aws.amazon.com/rds/): A managed database service that can be used in conjunction with EC2 instances to store and manage application data.\n\n## Conclusion\n\nAmazon EC2 has played a pivotal role in the growth and adoption of cloud computing, offering a flexible, cost-effective alternative to traditional server infrastructure. As businesses embrace the cloud, EC2 is a pivotal component of the AWS ecosystem, providing scalable, on-demand computing resources for many applications and workloads.\n\n---\n\nOriginally published at https://blog.seancoughlin.me.","cached_tag_list":"cloud, cloudcomputing, ec2, aws","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Unveiling the Power of Elastic Compute Cloud for Scalable and Flexible Virtual Servers            ...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/amazon-ec2-powering-cloud-computing-with-virtual-servers-5g93","public_reactions_count":0,"processed_html":"\u003cp\u003eUnveiling the Power of Elastic Compute Cloud for Scalable and Flexible Virtual Servers\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--fiCI3wJ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w34vls0g6pcn12rei2ny.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--fiCI3wJ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w34vls0g6pcn12rei2ny.png\" alt=\"What is EC2?\" loading=\"lazy\" width=\"800\" height=\"450\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"introduction\" href=\"#introduction\"\u003e\n  \u003c/a\u003e\n  Introduction\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://aws.amazon.com/ec2/\"\u003eAmazon Elastic Compute Cloud (EC2)\u003c/a\u003e is a core component of \u003ca href=\"https://aws.amazon.com\"\u003eAmazon Web Services (AWS)\u003c/a\u003e, offering scalable, on-demand virtual server instances for various computing needs. In this post, we'll explore what EC2 is, its history, potential applications, and how it has revolutionized the cloud computing landscape.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what-is-amazon-ec2\" href=\"#what-is-amazon-ec2\"\u003e\n  \u003c/a\u003e\n  What is Amazon EC2?\n\u003c/h2\u003e\n\n\u003cp\u003eAmazon EC2 is an \u003ca href=\"https://dev.to/scc33/exploring-cloud-computing-types-iaas-paas-saas-and-beyond-1cd0\"\u003eInfrastructure as a Service (IaaS)\u003c/a\u003e offering that allows users to provision and manage virtual servers, called instances, \u003ca href=\"https://dev.to/scc33/demystifying-the-cloud-understanding-the-fundamentals-and-impact-of-cloud-computing-2bpd\"\u003ein the cloud\u003c/a\u003e. These instances can be customized with various configurations, such as CPU, memory, storage, and network capacity, to suit specific workloads and requirements. EC2 instances run on Amazon's global infrastructure, ensuring high availability, performance, and security. Users can scale their infrastructure up or down as needed, paying only for the resources they consume.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"the-history-of-amazon-ec2\" href=\"#the-history-of-amazon-ec2\"\u003e\n  \u003c/a\u003e\n  The History of Amazon EC2\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Amazon_Elastic_Compute_Cloud#History\"\u003eLaunched in 2006\u003c/a\u003e, Amazon EC2 was one of the first commercially available cloud computing services, marking the beginning of the modern cloud era. The introduction of EC2 was a game-changer, providing developers and businesses with an alternative to traditional, capital-intensive server infrastructure. Since its inception, EC2 has continually evolved, adding new features, instance types, and additional services to enhance its capabilities and cater to the ever-growing demand for cloud computing resources.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"potential-applications-of-amazon-ec2\" href=\"#potential-applications-of-amazon-ec2\"\u003e\n  \u003c/a\u003e\n  Potential Applications of Amazon EC2\n\u003c/h2\u003e\n\n\u003cp\u003eAmazon EC2 has a wide range of potential applications, making it a versatile solution for various computing needs:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eWeb Hosting: EC2 instances can be used to host websites and web applications, providing scalable resources to handle fluctuating traffic loads.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eBig Data Processing: EC2 can be utilized for processing large datasets, running analytics, and deploying machine learning models, with the ability to scale resources dynamically as workloads increase.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eBackup and Disaster Recovery: EC2 instances can serve as backup servers or form part of a disaster recovery strategy, ensuring data is stored redundantly and can be quickly restored in case of an outage or data loss.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eDevelopment and Testing: Developers can use EC2 instances to create and test applications in isolated environments, without impacting their local machines or production systems.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eHigh-Performance Computing (\u003ca href=\"https://en.wikipedia.org/wiki/High-performance_computing\"\u003eHPC\u003c/a\u003e): EC2 offers specialized instance types optimized for compute-intensive workloads, such as scientific simulations, rendering, and financial modeling.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"complementary-services-in-the-aws-ecosystem\" href=\"#complementary-services-in-the-aws-ecosystem\"\u003e\n  \u003c/a\u003e\n  Complementary Services in the AWS Ecosystem\n\u003c/h2\u003e\n\n\u003cp\u003eAmazon EC2 is tightly integrated with other AWS services, enabling users to build comprehensive cloud-based solutions:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://aws.amazon.com/ebs/\"\u003eAmazon Elastic Block Store (EBS)\u003c/a\u003e: Provides persistent block storage for EC2 instances, ensuring data is retained even after an instance is terminated.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://aws.amazon.com/vpc/\"\u003eAmazon Virtual Private Cloud (VPC)\u003c/a\u003e: Offers isolated virtual networks within the AWS infrastructure, allowing users to configure and control their network environment.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://aws.amazon.com/elasticloadbalancing/\"\u003eAmazon Elastic Load Balancing (ELB)\u003c/a\u003e: Distributes incoming traffic across multiple EC2 instances, improving availability and fault tolerance.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://aws.amazon.com/rds/\"\u003eAmazon Relational Database Service (RDS)\u003c/a\u003e: A managed database service that can be used in conjunction with EC2 instances to store and manage application data.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eAmazon EC2 has played a pivotal role in the growth and adoption of cloud computing, offering a flexible, cost-effective alternative to traditional server infrastructure. As businesses embrace the cloud, EC2 is a pivotal component of the AWS ecosystem, providing scalable, on-demand computing resources for many applications and workloads.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"amazon-ec2-powering-cloud-computing-with-virtual-servers-5g93","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qki103fv23r0fz49bs2a.png","title":"Amazon EC2: Powering Cloud Computing with Virtual Servers","video":null,"video_code":null},{"created_at":"2023-04-12T21:34:27.514Z","crossposted_at":"2023-04-12T21:38:31.225Z","edited_at":null,"last_comment_at":"2023-04-12T21:30:13.000Z","published_at":"2023-04-12T21:30:13.000Z","canonical_url":"https://blog.seancoughlin.me/embracing-the-future-serverless-computing-and-its-impact-on-modern-software-development","feed_source_url":"https://blog.seancoughlin.me/embracing-the-future-serverless-computing-and-its-impact-on-modern-software-development","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Embracing the Future: Serverless Computing and Its Impact on Modern Software Development\npublished: true\ndate: 2023-04-12 21:30:13 UTC\ntags: #serverless #cloudcomputing #cloud #cloudservices\ncanonical_url: https://blog.seancoughlin.me/embracing-the-future-serverless-computing-and-its-impact-on-modern-software-development\n---\n\nDiscover the Power of Serverless: Boost Agility, Cut Costs, and Accelerate Development\n\n![What is serverless computing?](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39nu3rhx0hc90fif6bkz.jpg)\n\n## Introduction\n\nThe computing and software development world is constantly evolving, and [serverless computing](https://en.wikipedia.org/wiki/Serverless_computing) has emerged as one of the most transformative technologies in recent years. In this blog post, we'll dive into the history of serverless computing, explore the concept of Function as a Service ([FaaS](https://en.wikipedia.org/wiki/Function_as_a_service)), discuss various use cases, and examine the benefits it brings to the table.\n\n## History of Serverless Computing\n\nThe concept of serverless computing can traces back to the early 2000s when Platform as a Service ([PaaS](https://en.wikipedia.org/wiki/Platform_as_a_service)) providers like [Google App Engine](https://en.wikipedia.org/wiki/Google_App_Engine), [Heroku](https://www.heroku.com), and [Microsoft Azure](https://azure.microsoft.com) emerged. These platforms abstracted away the underlying server management, allowing developers to focus on writing code. However, it wasn't [until 2014](https://en.wikipedia.org/wiki/AWS_Lambda), when Amazon Web Services ([AWS](https://aws.amazon.com)) launched its Lambda service, that serverless computing took off, sparking a new era of cloud computing.\n\n## FaaS\n\nFunction as a Service (FaaS) is the driving force behind serverless computing, allowing developers to deploy, manage, and run individual functions without the need to manage the underlying infrastructure. In a FaaS environment, functions are typically small, self-contained code pieces designed to perform a specific task.\n\nThese functions are [event-driven](https://en.wikipedia.org/wiki/Event-driven_programming), meaning they are executed in response to specific triggers, such as HTTP requests, file uploads, database updates, or messages from other services. When a trigger occurs, the cloud provider allocates the necessary resources, such as CPU, memory, and network, and automatically scales the infrastructure based on demand. This dynamic resource allocation allows FaaS applications to handle variable workloads efficiently.\n\nBy offloading infrastructure management to the cloud provider, developers can concentrate on writing code and fine-tuning their business logic, leading to faster development cycles and more agile applications. FaaS represents the natural progression of cloud computing, as it further minimizes the amount of infrastructure management developers need to handle.\n\n## Serverless Use Cases\n\nServerless computing has found wide-ranging applications across various industries, including:\n\n- [Data processing](https://en.wikipedia.org/wiki/Stream_processing): Event-driven data processing, such as log analysis or real-time data transformations, can be achieved using serverless functions.\n\n- Web applications: Building serverless APIs for web applications simplifies backend infrastructure and improves scalability.\n\n- [IoT](https://en.wikipedia.org/wiki/Internet_of_things): Serverless functions are perfect for processing data from IoT devices due to their event-driven nature and ability to scale.\n\n- Chatbots and virtual assistants: Serverless functions can power conversational interfaces, enabling dynamic interactions with users.\n\n## Cost Savings\n\nOne of the key benefits of serverless computing is its cost-effectiveness. Since you only pay for the resources consumed during function execution, serverless computing can be a more affordable option when compared to traditional server-based architectures, especially for applications with variable workloads or unpredictable traffic patterns.\n\n- Enhanced Scalability: Serverless architectures excel in scalability, as the cloud provider automatically manages the scaling of resources based on demand. This allows serverless applications to handle sudden spikes in traffic or increased workload without any manual intervention or pre-planning.\n\n- Faster Time to Market: Serverless computing allows developers to focus on writing code and delivering features rather than managing infrastructure. This reduced complexity leads to faster development cycles and a quicker time to market for new applications and features.\n\n- Improved Flexibility and Agility: Serverless architecture promotes modular design by decomposing applications into smaller, independent functions. This modularity makes it easier to update or add new features to applications without affecting other components, resulting in increased flexibility and agility.\n\n- Environmentally Friendly: Serverless computing's pay-as-you-go model and the efficient allocation of resources by cloud providers contribute to a reduced carbon footprint. By utilizing shared infrastructure and reducing idle resources, serverless computing is a more environmentally friendly option compared to traditional server-based architectures.\n\n## Where to Learn More\n\nIf you're interested in delving deeper into serverless computing, it's essential to explore a variety of topics that will enhance your understanding and broaden your skill set.\n\n- Begin by learning about serverless platforms, such as [AWS Lambda](https://aws.amazon.com/lambda/), [Google Cloud Functions,](https://cloud.google.com/functions) [Azure Functions](https://azure.microsoft.com/en-us/products/functions/), and [IBM Cloud Functions](https://www.ibm.com/cloud/functions).\n\n- Familiarize yourself with [event-driven architectures](https://en.wikipedia.org/wiki/Event-driven_architecture) and relevant design patterns, which are crucial for creating efficient serverless applications.\n\n- Gain proficiency in common programming languages used in serverless environments, like JavaScript, Python, or Java. \n\n- Dive into the world of APIs, API Gateways, and [microservices](https://microservices.io) to understand how serverless functions integrate with other systems.\n\n- Explore containerization technologies like [Docker](https://en.wikipedia.org/wiki/Docker_(software)) and [Kubernetes](https://kubernetes.io), as they often complement serverless solutions.\n\n- Finally, study best practices for security, monitoring, and troubleshooting in serverless environments, as well as how to optimize cost and performance for your serverless applications.\n\nBy investing time in these topics, you'll develop a comprehensive understanding of serverless computing and be well-equipped to harness its potential in your projects.\n\n## Conclusion\n\nServerless computing has brought about a paradigm shift in the way software is developed and deployed. By abstracting away infrastructure management and offering a more flexible, cost-effective, and scalable solution, serverless computing has become an essential tool in the modern developer's toolkit. As serverless technology continues to evolve, it will undoubtedly play an increasingly important role in shaping the future of software development.\n\n---\n\nOriginally published at https://blog.seancoughlin.me.","cached_tag_list":"serverless, cloudcomputing, cloud, cloudservices","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Discover the Power of Serverless: Boost Agility, Cut Costs, and Accelerate Development            ...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/embracing-the-future-serverless-computing-and-its-impact-on-modern-software-development-5dec","public_reactions_count":5,"processed_html":"\u003cp\u003eDiscover the Power of Serverless: Boost Agility, Cut Costs, and Accelerate Development\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--nx7G78PI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39nu3rhx0hc90fif6bkz.jpg\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--nx7G78PI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39nu3rhx0hc90fif6bkz.jpg\" alt=\"What is serverless computing?\" loading=\"lazy\" width=\"800\" height=\"450\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"introduction\" href=\"#introduction\"\u003e\n  \u003c/a\u003e\n  Introduction\n\u003c/h2\u003e\n\n\u003cp\u003eThe computing and software development world is constantly evolving, and \u003ca href=\"https://en.wikipedia.org/wiki/Serverless_computing\"\u003eserverless computing\u003c/a\u003e has emerged as one of the most transformative technologies in recent years. In this blog post, we'll dive into the history of serverless computing, explore the concept of Function as a Service (\u003ca href=\"https://en.wikipedia.org/wiki/Function_as_a_service\"\u003eFaaS\u003c/a\u003e), discuss various use cases, and examine the benefits it brings to the table.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"history-of-serverless-computing\" href=\"#history-of-serverless-computing\"\u003e\n  \u003c/a\u003e\n  History of Serverless Computing\n\u003c/h2\u003e\n\n\u003cp\u003eThe concept of serverless computing can traces back to the early 2000s when Platform as a Service (\u003ca href=\"https://en.wikipedia.org/wiki/Platform_as_a_service\"\u003ePaaS\u003c/a\u003e) providers like \u003ca href=\"https://en.wikipedia.org/wiki/Google_App_Engine\"\u003eGoogle App Engine\u003c/a\u003e, \u003ca href=\"https://www.heroku.com\"\u003eHeroku\u003c/a\u003e, and \u003ca href=\"https://azure.microsoft.com\"\u003eMicrosoft Azure\u003c/a\u003e emerged. These platforms abstracted away the underlying server management, allowing developers to focus on writing code. However, it wasn't \u003ca href=\"https://en.wikipedia.org/wiki/AWS_Lambda\"\u003euntil 2014\u003c/a\u003e, when Amazon Web Services (\u003ca href=\"https://aws.amazon.com\"\u003eAWS\u003c/a\u003e) launched its Lambda service, that serverless computing took off, sparking a new era of cloud computing.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"faas\" href=\"#faas\"\u003e\n  \u003c/a\u003e\n  FaaS\n\u003c/h2\u003e\n\n\u003cp\u003eFunction as a Service (FaaS) is the driving force behind serverless computing, allowing developers to deploy, manage, and run individual functions without the need to manage the underlying infrastructure. In a FaaS environment, functions are typically small, self-contained code pieces designed to perform a specific task.\u003c/p\u003e\n\n\u003cp\u003eThese functions are \u003ca href=\"https://en.wikipedia.org/wiki/Event-driven_programming\"\u003eevent-driven\u003c/a\u003e, meaning they are executed in response to specific triggers, such as HTTP requests, file uploads, database updates, or messages from other services. When a trigger occurs, the cloud provider allocates the necessary resources, such as CPU, memory, and network, and automatically scales the infrastructure based on demand. This dynamic resource allocation allows FaaS applications to handle variable workloads efficiently.\u003c/p\u003e\n\n\u003cp\u003eBy offloading infrastructure management to the cloud provider, developers can concentrate on writing code and fine-tuning their business logic, leading to faster development cycles and more agile applications. FaaS represents the natural progression of cloud computing, as it further minimizes the amount of infrastructure management developers need to handle.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"serverless-use-cases\" href=\"#serverless-use-cases\"\u003e\n  \u003c/a\u003e\n  Serverless Use Cases\n\u003c/h2\u003e\n\n\u003cp\u003eServerless computing has found wide-ranging applications across various industries, including:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Stream_processing\"\u003eData processing\u003c/a\u003e: Event-driven data processing, such as log analysis or real-time data transformations, can be achieved using serverless functions.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eWeb applications: Building serverless APIs for web applications simplifies backend infrastructure and improves scalability.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Internet_of_things\"\u003eIoT\u003c/a\u003e: Serverless functions are perfect for processing data from IoT devices due to their event-driven nature and ability to scale.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eChatbots and virtual assistants: Serverless functions can power conversational interfaces, enabling dynamic interactions with users.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"cost-savings\" href=\"#cost-savings\"\u003e\n  \u003c/a\u003e\n  Cost Savings\n\u003c/h2\u003e\n\n\u003cp\u003eOne of the key benefits of serverless computing is its cost-effectiveness. Since you only pay for the resources consumed during function execution, serverless computing can be a more affordable option when compared to traditional server-based architectures, especially for applications with variable workloads or unpredictable traffic patterns.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eEnhanced Scalability: Serverless architectures excel in scalability, as the cloud provider automatically manages the scaling of resources based on demand. This allows serverless applications to handle sudden spikes in traffic or increased workload without any manual intervention or pre-planning.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eFaster Time to Market: Serverless computing allows developers to focus on writing code and delivering features rather than managing infrastructure. This reduced complexity leads to faster development cycles and a quicker time to market for new applications and features.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eImproved Flexibility and Agility: Serverless architecture promotes modular design by decomposing applications into smaller, independent functions. This modularity makes it easier to update or add new features to applications without affecting other components, resulting in increased flexibility and agility.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eEnvironmentally Friendly: Serverless computing's pay-as-you-go model and the efficient allocation of resources by cloud providers contribute to a reduced carbon footprint. By utilizing shared infrastructure and reducing idle resources, serverless computing is a more environmentally friendly option compared to traditional server-based architectures.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"where-to-learn-more\" href=\"#where-to-learn-more\"\u003e\n  \u003c/a\u003e\n  Where to Learn More\n\u003c/h2\u003e\n\n\u003cp\u003eIf you're interested in delving deeper into serverless computing, it's essential to explore a variety of topics that will enhance your understanding and broaden your skill set.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eBegin by learning about serverless platforms, such as \u003ca href=\"https://aws.amazon.com/lambda/\"\u003eAWS Lambda\u003c/a\u003e, \u003ca href=\"https://cloud.google.com/functions\"\u003eGoogle Cloud Functions,\u003c/a\u003e \u003ca href=\"https://azure.microsoft.com/en-us/products/functions/\"\u003eAzure Functions\u003c/a\u003e, and \u003ca href=\"https://www.ibm.com/cloud/functions\"\u003eIBM Cloud Functions\u003c/a\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eFamiliarize yourself with \u003ca href=\"https://en.wikipedia.org/wiki/Event-driven_architecture\"\u003eevent-driven architectures\u003c/a\u003e and relevant design patterns, which are crucial for creating efficient serverless applications.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eGain proficiency in common programming languages used in serverless environments, like JavaScript, Python, or Java. \u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eDive into the world of APIs, API Gateways, and \u003ca href=\"https://microservices.io\"\u003emicroservices\u003c/a\u003e to understand how serverless functions integrate with other systems.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eExplore containerization technologies like \u003ca href=\"https://en.wikipedia.org/wiki/Docker_(software)\"\u003eDocker\u003c/a\u003e and \u003ca href=\"https://kubernetes.io\"\u003eKubernetes\u003c/a\u003e, as they often complement serverless solutions.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eFinally, study best practices for security, monitoring, and troubleshooting in serverless environments, as well as how to optimize cost and performance for your serverless applications.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eBy investing time in these topics, you'll develop a comprehensive understanding of serverless computing and be well-equipped to harness its potential in your projects.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eServerless computing has brought about a paradigm shift in the way software is developed and deployed. By abstracting away infrastructure management and offering a more flexible, cost-effective, and scalable solution, serverless computing has become an essential tool in the modern developer's toolkit. As serverless technology continues to evolve, it will undoubtedly play an increasingly important role in shaping the future of software development.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"embracing-the-future-serverless-computing-and-its-impact-on-modern-software-development-5dec","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cao47hatb0trx3q2vq9t.png","title":"Embracing the Future: Serverless Computing and Its Impact on Modern Software Development","video":null,"video_code":null},{"created_at":"2023-04-13T19:49:39.641Z","crossposted_at":"2023-04-13T19:51:16.816Z","edited_at":null,"last_comment_at":"2023-04-13T19:41:46.000Z","published_at":"2023-04-13T19:41:46.000Z","canonical_url":"https://blog.seancoughlin.me/exploring-cloud-models-public-private-hybrid-and-multi-cloud","feed_source_url":"https://blog.seancoughlin.me/exploring-cloud-models-public-private-hybrid-and-multi-cloud","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Exploring Cloud Models: Public, Private, Hybrid, and Multi-Cloud\npublished: true\ndate: 2023-04-13 19:41:46 UTC\ntags: #cloudcomputing #cloud #cloudarchitecture #aws\ncanonical_url: https://blog.seancoughlin.me/exploring-cloud-models-public-private-hybrid-and-multi-cloud\n---\n\nNavigating the Cloudscape: A Comprehensive Guide to Public, Private, Hybrid, and Multi-Cloud Models for Software Engineers\n\n![Cloud models including public, private, hybrid, and multi](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iqj64w824l48gvm6nslo.jpg)\n\n## Introduction\n\nCloud computing has become an essential piece of software development, offering unprecedented scalability, flexibility, and cost-effectiveness. As a software engineer, it is crucial to understand [the different cloud models](https://en.wikipedia.org/wiki/Cloud_computing#Deployment_models) to select the best option for your project. In this blog post, we will delve into four popular cloud models: Public Cloud, Private Cloud, Hybrid Cloud, and Multi-Cloud, discussing their high-level characteristics as well as their benefits and drawbacks.\n\n## Public Cloud\n\nIn the Public Cloud model, third-party vendors provide services and make them available via the Internet. It offers a wide range of services, including storage, computing power, and applications, usually on a pay-as-you-go basis. The infrastructure is shared among multiple users, making it a cost-effective solution for many businesses. Some of the leading Public Cloud providers include [Amazon Web Services (AWS)](https://aws.amazon.com), [Microsoft Azure](https://azure.microsoft.com/en-us/), and [Google Cloud Platform (GCP)](https://cloud.google.com).\n\n### Public Cloud Benefits\n\nPublic Clouds offer several advantages, including reduced upfront costs, flexible pricing, and near-unlimited scalability. They provide quick access to the latest technologies and simplify deploying and managing applications. Public Clouds are an excellent choice for businesses that require rapid deployment and variable workloads.\n\n### Public Cloud Drawbacks\n\nDespite its benefits, the Public Cloud model has a few drawbacks. Data security and privacy can be concerns for some users, given that infrastructure is shared among multiple tenants. Additionally, Public Clouds may not be suitable for organizations with [strict compliance requirements](https://en.wikipedia.org/wiki/Cloud_computing_security) or those needing low-latency connections.\n\n## Private Cloud\n\nA Private Cloud is a dedicated environment built exclusively for a single organization. It can be hosted on-premises or externally by a third-party provider. Private Clouds offer greater control over the infrastructure, security, and performance, making them suitable for organizations with strict compliance and security requirements.\n\n### Private Cloud Benefits\n\nSome key benefits of Private Clouds include enhanced security, customizable infrastructure, and improved performance. Organizations can tailor their Private Clouds to meet specific requirements, ensuring a more secure environment for sensitive data. Private Clouds are ideal for businesses with mission-critical applications or those operating in highly regulated industries.\n\n### Private Cloud Drawbacks\n\nThe primary drawbacks of Private Clouds are the increased costs and resource requirements. Organizations need to invest in hardware, software, maintenance, and dedicated IT staff to manage the infrastructure. Private Clouds may not offer the same level of scalability as Public Clouds. Many organizations may lack the skills required to operate these complex systems.\n\n## Hybrid Cloud\n\n[Hybrid Cloud](https://en.wikipedia.org/wiki/Hybrid_cloud_storage) is a combination of Public and Private Cloud models, enabling organizations to leverage the best of both worlds. This model allows businesses to utilize Public Cloud resources for non-sensitive operations while keeping sensitive data and critical applications on their Private Cloud.\n\n### Hybrid Cloud Benefits\n\n[Hybrid Clouds](https://en.wikipedia.org/wiki/Multicloud) offer the flexibility to choose the most suitable cloud model for different workloads, resulting in cost optimization and improved efficiency. They also provide enhanced security by allowing sensitive data to be stored in a controlled environment. Hybrid Clouds are a great option for organizations looking to balance cost, control, and scalability.\n\n### Hybrid Cloud Drawbacks\n\nOne of the primary challenges of Hybrid Clouds is managing the complexity of integrating and orchestrating resources across different environments. This can lead to increased operational overhead and require additional staff training. Additionally, data transfer costs between Public and Private Clouds can be significant, impacting overall cost savings.\n\n## Multi-Cloud\n\nThe Multi-Cloud model involves using multiple Public Cloud providers in conjunction. Workloads and resources can be distributed across different providers, thus reducing reliance on a single vendor. This approach helps organizations avoid vendor lock-in, increase resilience, and optimize costs by choosing the most suitable services from different providers. An example multi-cloud approach would be [Snowflake](https://docs.snowflake.com/en/user-guide/intro-cloud-platforms) which offers its services on major cloud providers like AWS, GCP, and Azure.\n\n### Multi-Cloud Benefits\n\nThe Multi-Cloud approach offers enhanced resilience by distributing workloads across multiple providers, mitigating the risk of vendor lock-in and single points of failure. Additionally, it allows organizations to optimize costs by selecting the most suitable services from different providers, ensuring they only pay for what they truly need.\n\n### Multi-Cloud Drawbacks\n\nHowever, managing multiple cloud providers can introduce complexity and increase the need for robust governance, leading to higher operational overhead. Furthermore, integrating services across various providers can be challenging, potentially resulting in compatibility and performance issues.\n\n## Conclusion\n\nIn conclusion, understanding the differences between Public, Private, Hybrid, and Multi-Cloud models is essential for software engineers and enterprises to make informed decisions about their cloud computing needs. Each model has unique benefits and drawbacks, catering to various organizational requirements and challenges. By carefully evaluating an organization's specific needs, compliance requirements, and budget constraints, you can select the most appropriate cloud model to optimize performance, security, and cost-effectiveness.\n\n---\n\n\nOriginally published at https://blog.seancoughlin.me.","cached_tag_list":"cloudcomputing, cloud, cloudarchitecture, aws","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Navigating the Cloudscape: A Comprehensive Guide to Public, Private, Hybrid, and Multi-Cloud Models...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/exploring-cloud-models-public-private-hybrid-and-multi-cloud-2eo3","public_reactions_count":6,"processed_html":"\u003cp\u003eNavigating the Cloudscape: A Comprehensive Guide to Public, Private, Hybrid, and Multi-Cloud Models for Software Engineers\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--aKIvG1CE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iqj64w824l48gvm6nslo.jpg\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--aKIvG1CE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iqj64w824l48gvm6nslo.jpg\" alt=\"Cloud models including public, private, hybrid, and multi\" loading=\"lazy\" width=\"800\" height=\"450\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"introduction\" href=\"#introduction\"\u003e\n  \u003c/a\u003e\n  Introduction\n\u003c/h2\u003e\n\n\u003cp\u003eCloud computing has become an essential piece of software development, offering unprecedented scalability, flexibility, and cost-effectiveness. As a software engineer, it is crucial to understand \u003ca href=\"https://en.wikipedia.org/wiki/Cloud_computing#Deployment_models\"\u003ethe different cloud models\u003c/a\u003e to select the best option for your project. In this blog post, we will delve into four popular cloud models: Public Cloud, Private Cloud, Hybrid Cloud, and Multi-Cloud, discussing their high-level characteristics as well as their benefits and drawbacks.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"public-cloud\" href=\"#public-cloud\"\u003e\n  \u003c/a\u003e\n  Public Cloud\n\u003c/h2\u003e\n\n\u003cp\u003eIn the Public Cloud model, third-party vendors provide services and make them available via the Internet. It offers a wide range of services, including storage, computing power, and applications, usually on a pay-as-you-go basis. The infrastructure is shared among multiple users, making it a cost-effective solution for many businesses. Some of the leading Public Cloud providers include \u003ca href=\"https://aws.amazon.com\"\u003eAmazon Web Services (AWS)\u003c/a\u003e, \u003ca href=\"https://azure.microsoft.com/en-us/\"\u003eMicrosoft Azure\u003c/a\u003e, and \u003ca href=\"https://cloud.google.com\"\u003eGoogle Cloud Platform (GCP)\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"public-cloud-benefits\" href=\"#public-cloud-benefits\"\u003e\n  \u003c/a\u003e\n  Public Cloud Benefits\n\u003c/h3\u003e\n\n\u003cp\u003ePublic Clouds offer several advantages, including reduced upfront costs, flexible pricing, and near-unlimited scalability. They provide quick access to the latest technologies and simplify deploying and managing applications. Public Clouds are an excellent choice for businesses that require rapid deployment and variable workloads.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"public-cloud-drawbacks\" href=\"#public-cloud-drawbacks\"\u003e\n  \u003c/a\u003e\n  Public Cloud Drawbacks\n\u003c/h3\u003e\n\n\u003cp\u003eDespite its benefits, the Public Cloud model has a few drawbacks. Data security and privacy can be concerns for some users, given that infrastructure is shared among multiple tenants. Additionally, Public Clouds may not be suitable for organizations with \u003ca href=\"https://en.wikipedia.org/wiki/Cloud_computing_security\"\u003estrict compliance requirements\u003c/a\u003e or those needing low-latency connections.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"private-cloud\" href=\"#private-cloud\"\u003e\n  \u003c/a\u003e\n  Private Cloud\n\u003c/h2\u003e\n\n\u003cp\u003eA Private Cloud is a dedicated environment built exclusively for a single organization. It can be hosted on-premises or externally by a third-party provider. Private Clouds offer greater control over the infrastructure, security, and performance, making them suitable for organizations with strict compliance and security requirements.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"private-cloud-benefits\" href=\"#private-cloud-benefits\"\u003e\n  \u003c/a\u003e\n  Private Cloud Benefits\n\u003c/h3\u003e\n\n\u003cp\u003eSome key benefits of Private Clouds include enhanced security, customizable infrastructure, and improved performance. Organizations can tailor their Private Clouds to meet specific requirements, ensuring a more secure environment for sensitive data. Private Clouds are ideal for businesses with mission-critical applications or those operating in highly regulated industries.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"private-cloud-drawbacks\" href=\"#private-cloud-drawbacks\"\u003e\n  \u003c/a\u003e\n  Private Cloud Drawbacks\n\u003c/h3\u003e\n\n\u003cp\u003eThe primary drawbacks of Private Clouds are the increased costs and resource requirements. Organizations need to invest in hardware, software, maintenance, and dedicated IT staff to manage the infrastructure. Private Clouds may not offer the same level of scalability as Public Clouds. Many organizations may lack the skills required to operate these complex systems.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"hybrid-cloud\" href=\"#hybrid-cloud\"\u003e\n  \u003c/a\u003e\n  Hybrid Cloud\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Hybrid_cloud_storage\"\u003eHybrid Cloud\u003c/a\u003e is a combination of Public and Private Cloud models, enabling organizations to leverage the best of both worlds. This model allows businesses to utilize Public Cloud resources for non-sensitive operations while keeping sensitive data and critical applications on their Private Cloud.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"hybrid-cloud-benefits\" href=\"#hybrid-cloud-benefits\"\u003e\n  \u003c/a\u003e\n  Hybrid Cloud Benefits\n\u003c/h3\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Multicloud\"\u003eHybrid Clouds\u003c/a\u003e offer the flexibility to choose the most suitable cloud model for different workloads, resulting in cost optimization and improved efficiency. They also provide enhanced security by allowing sensitive data to be stored in a controlled environment. Hybrid Clouds are a great option for organizations looking to balance cost, control, and scalability.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"hybrid-cloud-drawbacks\" href=\"#hybrid-cloud-drawbacks\"\u003e\n  \u003c/a\u003e\n  Hybrid Cloud Drawbacks\n\u003c/h3\u003e\n\n\u003cp\u003eOne of the primary challenges of Hybrid Clouds is managing the complexity of integrating and orchestrating resources across different environments. This can lead to increased operational overhead and require additional staff training. Additionally, data transfer costs between Public and Private Clouds can be significant, impacting overall cost savings.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"multicloud\" href=\"#multicloud\"\u003e\n  \u003c/a\u003e\n  Multi-Cloud\n\u003c/h2\u003e\n\n\u003cp\u003eThe Multi-Cloud model involves using multiple Public Cloud providers in conjunction. Workloads and resources can be distributed across different providers, thus reducing reliance on a single vendor. This approach helps organizations avoid vendor lock-in, increase resilience, and optimize costs by choosing the most suitable services from different providers. An example multi-cloud approach would be \u003ca href=\"https://docs.snowflake.com/en/user-guide/intro-cloud-platforms\"\u003eSnowflake\u003c/a\u003e which offers its services on major cloud providers like AWS, GCP, and Azure.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"multicloud-benefits\" href=\"#multicloud-benefits\"\u003e\n  \u003c/a\u003e\n  Multi-Cloud Benefits\n\u003c/h3\u003e\n\n\u003cp\u003eThe Multi-Cloud approach offers enhanced resilience by distributing workloads across multiple providers, mitigating the risk of vendor lock-in and single points of failure. Additionally, it allows organizations to optimize costs by selecting the most suitable services from different providers, ensuring they only pay for what they truly need.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"multicloud-drawbacks\" href=\"#multicloud-drawbacks\"\u003e\n  \u003c/a\u003e\n  Multi-Cloud Drawbacks\n\u003c/h3\u003e\n\n\u003cp\u003eHowever, managing multiple cloud providers can introduce complexity and increase the need for robust governance, leading to higher operational overhead. Furthermore, integrating services across various providers can be challenging, potentially resulting in compatibility and performance issues.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eIn conclusion, understanding the differences between Public, Private, Hybrid, and Multi-Cloud models is essential for software engineers and enterprises to make informed decisions about their cloud computing needs. Each model has unique benefits and drawbacks, catering to various organizational requirements and challenges. By carefully evaluating an organization's specific needs, compliance requirements, and budget constraints, you can select the most appropriate cloud model to optimize performance, security, and cost-effectiveness.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"exploring-cloud-models-public-private-hybrid-and-multi-cloud-2eo3","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n1aqz79z5jfmc70va26g.png","title":"Exploring Cloud Models: Public, Private, Hybrid, and Multi-Cloud","video":null,"video_code":null},{"created_at":"2023-09-05T01:51:23.985Z","crossposted_at":"2023-09-05T01:56:22.280Z","edited_at":null,"last_comment_at":"2023-09-05T01:51:05.000Z","published_at":"2023-09-05T01:51:05.000Z","canonical_url":"https://blog.seancoughlin.me/uiuc-mcs-cs-416-review-data-visualization","feed_source_url":"https://blog.seancoughlin.me/uiuc-mcs-cs-416-review-data-visualization","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: UIUC MCS - CS 416 Review - Data Visualization\npublished: true\ndate: 2023-09-05 01:51:05 UTC\ntags: #uiuc #review #datavis\ncanonical_url: https://blog.seancoughlin.me/uiuc-mcs-cs-416-review-data-visualization\n---\n\nComputer Science 416 covers computer graphics, psychology, and human perception.\n\n## Overview\n\n- **TLDR:** [416](https://courses.illinois.edu/schedule/terms/CS/416) is a fun, laid-back class with two major assignments, a midterm, and a final. I had fun and did not have to stress very much.\n\n- **Difficulty:** Easy\n\n- **Opinion:** Enjoyed\n\n- **Weekly workload:** 5 hours\n\n- **Semester:** Summer 2023\n\n## Class Content\n\n### Lecture Content\n\nThe course had weekly lectures. Topics included data types, human perception, psychology, integrating data into web pages, interactive visualization, narrative visualization, and declarative visualizations. There were one to two hours of lectures per week. The lectures could easily be watched at 1.5 speed if necessary.\n\nI found the lectures to be a nice change of pace from many other computer science courses. They covered technical concepts but focused on humans and how to design for people. For example, there were a few videos on optical illusions. The optical illusions were used to introduce various quirks of the human eye and how to design visualizations that leveraged those human features.\n\n### Assignments\n\nEvery week of the course had an associated quiz. The quizzes were all released ahead of schedule which made time management a breeze. Thankfully, each quiz could be taken as many times as desired, so this was a nice review and an easy class grade.\n\nThe class also had two major projects. The first was a visualization dashboard that you had to build with Tableau. The second was a narrative visualization website that had to be built with HTML/CSS/JavaScript and the D3 library.\n\nFor the first project, you were required to create a dashboard that synthesized multiple datasets, visualized at least two charts, and supported cross-filtering between the charts. Students could choose to visualize any dataset of their pleasure and the assignment parameters were fairly broad so you could get pretty creative with the implementation.\n\nI know Tableau is incredibly common among data scientists and those working in analytical jobs. I work as a software engineer for my day-to-day job. My role does not require Tableau so the visualization dashboard project was my first introduction to the tool. I think this assignment was a good introduction and very approachable. I completed it over the course of two nights.\n\nThe second project was more involved. You were required to analyze some dataset, find a story in that data, then build a website using plain JavasScript with multiple pages telling that story, and finally write a report afterward describing everything. It was a lot. I still felt like it was a good project, but it took some serious effort to complete.\n\n### Exams\n\nThe course had one midterm and a final. The exams were non-cumulative and relatively easy for multiple choice. Each exam was about 20 questions, proctored, and you had one hour to complete it.\n\nEach exam was administered through ProctorU. ProctorU has always been a nemesis of mine, and this semester only got worse. We were forced to use a [Chromium](https://en.wikipedia.org/wiki/Chromium_(web_browser))-based browser called [Guardian](https://guardian.meazurelearning.com). Guardian is easily one of the worst pieces of software I've ever used. It frequently crashes, and I hate downloading that type of spyware to my machine. Unfortunately, there was no other way to take the exams.\n\nExams were quick and easy. I'm to the point in my educational career where I'm tired of studying and taking exams. I appreciate that this course emphasized the projects over the exams.\n\n## My Takeaways\n\nI think this class could be really useful for anyone interested in pursuing analyst or data science-type roles. This content feels fundamental and very relevant for those roles.\n\nAs a software engineer, I didn't find many takeaways that would be useful in my current job. However, I still had a really good time in this class. The assignments were well-constructed, the lectures were novel, and the projects were fairly useful.\n\nIf you're interested in a class that focuses on the softer side of computer science, I would highly recommend this course.\n\n### Banner Credit\n\nThe banner was generated using the [**UIUC LinkedIn Banner Generator**](https://d7.cs.illinois.edu/projects/linkedin-banner-image/). It is an awesome tool if you need an Illinois-themed banner for anything.\n\n### More Reviews\n\nCheck out [**uiucmcs.org**](http://uiucmcs.org) for more reviews of MCS courses. I don't know who maintains this site, but it's a good review collection from many semesters.\n\nI have also written up a [**CS 427 review**](https://dev.to/scc33/uiuc-mcs-cs-427-review-software-engineering-3cbo), [**CS 435 review**](https://dev.to/scc33/uiuc-mcs-cs-435-review-cloud-computer-networking-58c5), and [CS 498 Cloud Computing review](https://dev.to/scc33/uiuc-mcs-cs-498-review-cloud-computing-applications-b6i).\n\n---\n\nOriginally published at https://blog.seancoughlin.me.","cached_tag_list":"uiuc, review, datavis","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Computer Science 416 covers computer graphics, psychology, and human perception.          ...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/uiuc-mcs-cs-416-review-data-visualization-1897","public_reactions_count":5,"processed_html":"\u003cp\u003eComputer Science 416 covers computer graphics, psychology, and human perception.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"overview\" href=\"#overview\"\u003e\n  \u003c/a\u003e\n  Overview\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eTLDR:\u003c/strong\u003e \u003ca href=\"https://courses.illinois.edu/schedule/terms/CS/416\"\u003e416\u003c/a\u003e is a fun, laid-back class with two major assignments, a midterm, and a final. I had fun and did not have to stress very much.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eDifficulty:\u003c/strong\u003e Easy\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eOpinion:\u003c/strong\u003e Enjoyed\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eWeekly workload:\u003c/strong\u003e 5 hours\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSemester:\u003c/strong\u003e Summer 2023\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"class-content\" href=\"#class-content\"\u003e\n  \u003c/a\u003e\n  Class Content\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"lecture-content\" href=\"#lecture-content\"\u003e\n  \u003c/a\u003e\n  Lecture Content\n\u003c/h3\u003e\n\n\u003cp\u003eThe course had weekly lectures. Topics included data types, human perception, psychology, integrating data into web pages, interactive visualization, narrative visualization, and declarative visualizations. There were one to two hours of lectures per week. The lectures could easily be watched at 1.5 speed if necessary.\u003c/p\u003e\n\n\u003cp\u003eI found the lectures to be a nice change of pace from many other computer science courses. They covered technical concepts but focused on humans and how to design for people. For example, there were a few videos on optical illusions. The optical illusions were used to introduce various quirks of the human eye and how to design visualizations that leveraged those human features.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"assignments\" href=\"#assignments\"\u003e\n  \u003c/a\u003e\n  Assignments\n\u003c/h3\u003e\n\n\u003cp\u003eEvery week of the course had an associated quiz. The quizzes were all released ahead of schedule which made time management a breeze. Thankfully, each quiz could be taken as many times as desired, so this was a nice review and an easy class grade.\u003c/p\u003e\n\n\u003cp\u003eThe class also had two major projects. The first was a visualization dashboard that you had to build with Tableau. The second was a narrative visualization website that had to be built with HTML/CSS/JavaScript and the D3 library.\u003c/p\u003e\n\n\u003cp\u003eFor the first project, you were required to create a dashboard that synthesized multiple datasets, visualized at least two charts, and supported cross-filtering between the charts. Students could choose to visualize any dataset of their pleasure and the assignment parameters were fairly broad so you could get pretty creative with the implementation.\u003c/p\u003e\n\n\u003cp\u003eI know Tableau is incredibly common among data scientists and those working in analytical jobs. I work as a software engineer for my day-to-day job. My role does not require Tableau so the visualization dashboard project was my first introduction to the tool. I think this assignment was a good introduction and very approachable. I completed it over the course of two nights.\u003c/p\u003e\n\n\u003cp\u003eThe second project was more involved. You were required to analyze some dataset, find a story in that data, then build a website using plain JavasScript with multiple pages telling that story, and finally write a report afterward describing everything. It was a lot. I still felt like it was a good project, but it took some serious effort to complete.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"exams\" href=\"#exams\"\u003e\n  \u003c/a\u003e\n  Exams\n\u003c/h3\u003e\n\n\u003cp\u003eThe course had one midterm and a final. The exams were non-cumulative and relatively easy for multiple choice. Each exam was about 20 questions, proctored, and you had one hour to complete it.\u003c/p\u003e\n\n\u003cp\u003eEach exam was administered through ProctorU. ProctorU has always been a nemesis of mine, and this semester only got worse. We were forced to use a \u003ca href=\"https://en.wikipedia.org/wiki/Chromium_(web_browser)\"\u003eChromium\u003c/a\u003e-based browser called \u003ca href=\"https://guardian.meazurelearning.com\"\u003eGuardian\u003c/a\u003e. Guardian is easily one of the worst pieces of software I've ever used. It frequently crashes, and I hate downloading that type of spyware to my machine. Unfortunately, there was no other way to take the exams.\u003c/p\u003e\n\n\u003cp\u003eExams were quick and easy. I'm to the point in my educational career where I'm tired of studying and taking exams. I appreciate that this course emphasized the projects over the exams.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"my-takeaways\" href=\"#my-takeaways\"\u003e\n  \u003c/a\u003e\n  My Takeaways\n\u003c/h2\u003e\n\n\u003cp\u003eI think this class could be really useful for anyone interested in pursuing analyst or data science-type roles. This content feels fundamental and very relevant for those roles.\u003c/p\u003e\n\n\u003cp\u003eAs a software engineer, I didn't find many takeaways that would be useful in my current job. However, I still had a really good time in this class. The assignments were well-constructed, the lectures were novel, and the projects were fairly useful.\u003c/p\u003e\n\n\u003cp\u003eIf you're interested in a class that focuses on the softer side of computer science, I would highly recommend this course.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"banner-credit\" href=\"#banner-credit\"\u003e\n  \u003c/a\u003e\n  Banner Credit\n\u003c/h3\u003e\n\n\u003cp\u003eThe banner was generated using the \u003ca href=\"https://d7.cs.illinois.edu/projects/linkedin-banner-image/\"\u003e\u003cstrong\u003eUIUC LinkedIn Banner Generator\u003c/strong\u003e\u003c/a\u003e. It is an awesome tool if you need an Illinois-themed banner for anything.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"more-reviews\" href=\"#more-reviews\"\u003e\n  \u003c/a\u003e\n  More Reviews\n\u003c/h3\u003e\n\n\u003cp\u003eCheck out \u003ca href=\"http://uiucmcs.org\"\u003e\u003cstrong\u003euiucmcs.org\u003c/strong\u003e\u003c/a\u003e for more reviews of MCS courses. I don't know who maintains this site, but it's a good review collection from many semesters.\u003c/p\u003e\n\n\u003cp\u003eI have also written up a \u003ca href=\"https://dev.to/scc33/uiuc-mcs-cs-427-review-software-engineering-3cbo\"\u003e\u003cstrong\u003eCS 427 review\u003c/strong\u003e\u003c/a\u003e, \u003ca href=\"https://dev.to/scc33/uiuc-mcs-cs-435-review-cloud-computer-networking-58c5\"\u003e\u003cstrong\u003eCS 435 review\u003c/strong\u003e\u003c/a\u003e, and \u003ca href=\"https://dev.to/scc33/uiuc-mcs-cs-498-review-cloud-computing-applications-b6i\"\u003eCS 498 Cloud Computing review\u003c/a\u003e.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"uiuc-mcs-cs-416-review-data-visualization-1897","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l7fayfc9suvw04zjln0m.png","title":"UIUC MCS - CS 416 Review - Data Visualization","video":null,"video_code":null},{"created_at":"2023-09-05T02:46:16.749Z","crossposted_at":"2023-09-05T02:51:51.361Z","edited_at":null,"last_comment_at":"2023-09-05T02:45:31.000Z","published_at":"2023-09-05T02:45:31.000Z","canonical_url":"https://blog.seancoughlin.me/uiuc-mcs-cs-513-review-theory-and-practice-of-data-cleaning","feed_source_url":"https://blog.seancoughlin.me/uiuc-mcs-cs-513-review-theory-and-practice-of-data-cleaning","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: UIUC MCS - CS 513 Review - Theory and Practice of Data Cleaning\npublished: true\ndate: 2023-09-05 02:45:31 UTC\ntags: #datascience #datacleaning #univerity #uiuc\ncanonical_url: https://blog.seancoughlin.me/uiuc-mcs-cs-513-review-theory-and-practice-of-data-cleaning\n---\n\n## Overview\n\n- **TLDR:** 513 won't teach you very much, and what you will learn is highly outdated, but it's an easy 500-level course.\n\n- **Difficulty:** Very easy\n\n- **Opinion:** Disliked\n\n- **Weekly workload:** 2 hours\n\n- **Semester:** Summer 2023\n\n## Class Content\n\n### Lecture Content\n\nEvery week consisted of about an hour of lectures. The topics covered included data validation, profiling, relational models, [Datalog](https://en.wikipedia.org/wiki/Datalog), [SQL](https://en.wikipedia.org/wiki/SQL), Workflows, [Provenance](https://en.wikipedia.org/wiki/Provenance#Computer_science), and [YesWorkflow](https://github.com/yesworkflow-org). I could not figure out exactly when these lectures were recorded, but I'm guessing they are close to a decade old. Ideally, they should all be rerecorded at this point and factor in newer material.\n\nI'm not sure why the course title includes 'theory' as the lectures focused entirely on data-cleaning practices. But each week had links to data cleaning papers, and those contained good resources. A diligent student who consumes all those external papers could learn a lot and cover a lot of theory ground. The course doesn't have any mechanism for enforcing reading.\n\n### Assignments\n\nAs with most MCS courses, there were weekly quizzes. The quizzes allowed for unlimited attempts and never took more than a few minutes to complete.\n\nThere were six homework assignments. In order they were Regular Expressions, [OpenRefine](https://openrefine.org), [Datalog](https://en.wikipedia.org/wiki/Datalog), SQL, Provenance, and Python. None of these assignments took more than two to three hours to complete. They all were basic implementation and programming assignments with autograders.\n\nThe class did not have any exams. Instead, it concluded with a two-phase group project. Groups consisted of three people. The setup of the project did not require much collaboration, and my team corresponded entirely over Teams messages without any synchronous meetings.\n\nThe project required cleaning some given datasets. Then you had to write a paper analyzing essentially how dirty the dataset was before and how much you were able to clean or improve it through your process. You also had to submit documentation about your cleaning process and write up some potential benefits of the cleaning. There was not any difficulty with the project.\n\n## My Takeaways\n\nThis class is ridiculously easy. It does not feel adequate at the graduate level and certainly should not be a 500-level course. I can see how many would be disappointed by the lack of rigor in what is an otherwise challenging program. If you are paying by the credit hour, it makes sense that you would want a considerable knowledge return on investment. I simply don't think this class offers that.\n\nI think the biggest disappointment is data cleaning is a crucial skill for all data science or software engineer jobs. The content is so important that the class deserves to be good! If the content was updated and some of the assignments swapped this class could be something special. Unfortunately, the execution is not there right now.\n\nAll that being said, there are not many 500-level options, so you will probably need to take this class. Additionally, the low difficulty did make for a very well-balanced semester when paired with [CS 416](https://dev.to/scc33/uiuc-mcs-cs-416-review-data-visualization-1897). I would recommend pairing this class with something else, and you'll still have a decently challenging semester.\n\n### Banner Credit\n\nThe banner was generated using the [**UIUC LinkedIn Banner Generator**](https://d7.cs.illinois.edu/projects/linkedin-banner-image/). It is an awesome tool if you need an Illinois-themed banner for anything.\n\n### More Reviews\n\nCheck out [**uiucmcs.org**](http://uiucmcs.org) for more reviews of MCS courses. I don't know who maintains this site, but it's a good review collection from many semesters.\n\nI have also written up a [**CS 427 review**](https://dev.to/scc33/uiuc-mcs-cs-427-review-software-engineering-3cbo), a [**CS 435 review**](https://dev.to/scc33/uiuc-mcs-cs-435-review-cloud-computer-networking-58c5), a [CS 498 Cloud Computing review](https://dev.to/scc33/uiuc-mcs-cs-498-review-cloud-computing-applications-b6i), and a [CS 416 review](https://dev.to/scc33/uiuc-mcs-cs-416-review-data-visualization-1897).\n\n---\n\n\nOriginally published at https://blog.seancoughlin.me.","cached_tag_list":"datascience, datacleaning, univerity, uiuc","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Overview    TLDR: 513 won't teach you very much, and what you will learn is highly outdated,...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/uiuc-mcs-cs-513-review-theory-and-practice-of-data-cleaning-f0n","public_reactions_count":5,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"overview\" href=\"#overview\"\u003e\n  \u003c/a\u003e\n  Overview\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eTLDR:\u003c/strong\u003e 513 won't teach you very much, and what you will learn is highly outdated, but it's an easy 500-level course.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eDifficulty:\u003c/strong\u003e Very easy\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eOpinion:\u003c/strong\u003e Disliked\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eWeekly workload:\u003c/strong\u003e 2 hours\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSemester:\u003c/strong\u003e Summer 2023\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"class-content\" href=\"#class-content\"\u003e\n  \u003c/a\u003e\n  Class Content\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"lecture-content\" href=\"#lecture-content\"\u003e\n  \u003c/a\u003e\n  Lecture Content\n\u003c/h3\u003e\n\n\u003cp\u003eEvery week consisted of about an hour of lectures. The topics covered included data validation, profiling, relational models, \u003ca href=\"https://en.wikipedia.org/wiki/Datalog\"\u003eDatalog\u003c/a\u003e, \u003ca href=\"https://en.wikipedia.org/wiki/SQL\"\u003eSQL\u003c/a\u003e, Workflows, \u003ca href=\"https://en.wikipedia.org/wiki/Provenance#Computer_science\"\u003eProvenance\u003c/a\u003e, and \u003ca href=\"https://github.com/yesworkflow-org\"\u003eYesWorkflow\u003c/a\u003e. I could not figure out exactly when these lectures were recorded, but I'm guessing they are close to a decade old. Ideally, they should all be rerecorded at this point and factor in newer material.\u003c/p\u003e\n\n\u003cp\u003eI'm not sure why the course title includes 'theory' as the lectures focused entirely on data-cleaning practices. But each week had links to data cleaning papers, and those contained good resources. A diligent student who consumes all those external papers could learn a lot and cover a lot of theory ground. The course doesn't have any mechanism for enforcing reading.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"assignments\" href=\"#assignments\"\u003e\n  \u003c/a\u003e\n  Assignments\n\u003c/h3\u003e\n\n\u003cp\u003eAs with most MCS courses, there were weekly quizzes. The quizzes allowed for unlimited attempts and never took more than a few minutes to complete.\u003c/p\u003e\n\n\u003cp\u003eThere were six homework assignments. In order they were Regular Expressions, \u003ca href=\"https://openrefine.org\"\u003eOpenRefine\u003c/a\u003e, \u003ca href=\"https://en.wikipedia.org/wiki/Datalog\"\u003eDatalog\u003c/a\u003e, SQL, Provenance, and Python. None of these assignments took more than two to three hours to complete. They all were basic implementation and programming assignments with autograders.\u003c/p\u003e\n\n\u003cp\u003eThe class did not have any exams. Instead, it concluded with a two-phase group project. Groups consisted of three people. The setup of the project did not require much collaboration, and my team corresponded entirely over Teams messages without any synchronous meetings.\u003c/p\u003e\n\n\u003cp\u003eThe project required cleaning some given datasets. Then you had to write a paper analyzing essentially how dirty the dataset was before and how much you were able to clean or improve it through your process. You also had to submit documentation about your cleaning process and write up some potential benefits of the cleaning. There was not any difficulty with the project.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"my-takeaways\" href=\"#my-takeaways\"\u003e\n  \u003c/a\u003e\n  My Takeaways\n\u003c/h2\u003e\n\n\u003cp\u003eThis class is ridiculously easy. It does not feel adequate at the graduate level and certainly should not be a 500-level course. I can see how many would be disappointed by the lack of rigor in what is an otherwise challenging program. If you are paying by the credit hour, it makes sense that you would want a considerable knowledge return on investment. I simply don't think this class offers that.\u003c/p\u003e\n\n\u003cp\u003eI think the biggest disappointment is data cleaning is a crucial skill for all data science or software engineer jobs. The content is so important that the class deserves to be good! If the content was updated and some of the assignments swapped this class could be something special. Unfortunately, the execution is not there right now.\u003c/p\u003e\n\n\u003cp\u003eAll that being said, there are not many 500-level options, so you will probably need to take this class. Additionally, the low difficulty did make for a very well-balanced semester when paired with \u003ca href=\"https://dev.to/scc33/uiuc-mcs-cs-416-review-data-visualization-1897\"\u003eCS 416\u003c/a\u003e. I would recommend pairing this class with something else, and you'll still have a decently challenging semester.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"banner-credit\" href=\"#banner-credit\"\u003e\n  \u003c/a\u003e\n  Banner Credit\n\u003c/h3\u003e\n\n\u003cp\u003eThe banner was generated using the \u003ca href=\"https://d7.cs.illinois.edu/projects/linkedin-banner-image/\"\u003e\u003cstrong\u003eUIUC LinkedIn Banner Generator\u003c/strong\u003e\u003c/a\u003e. It is an awesome tool if you need an Illinois-themed banner for anything.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"more-reviews\" href=\"#more-reviews\"\u003e\n  \u003c/a\u003e\n  More Reviews\n\u003c/h3\u003e\n\n\u003cp\u003eCheck out \u003ca href=\"http://uiucmcs.org\"\u003e\u003cstrong\u003euiucmcs.org\u003c/strong\u003e\u003c/a\u003e for more reviews of MCS courses. I don't know who maintains this site, but it's a good review collection from many semesters.\u003c/p\u003e\n\n\u003cp\u003eI have also written up a \u003ca href=\"https://dev.to/scc33/uiuc-mcs-cs-427-review-software-engineering-3cbo\"\u003e\u003cstrong\u003eCS 427 review\u003c/strong\u003e\u003c/a\u003e, a \u003ca href=\"https://dev.to/scc33/uiuc-mcs-cs-435-review-cloud-computer-networking-58c5\"\u003e\u003cstrong\u003eCS 435 review\u003c/strong\u003e\u003c/a\u003e, a \u003ca href=\"https://dev.to/scc33/uiuc-mcs-cs-498-review-cloud-computing-applications-b6i\"\u003eCS 498 Cloud Computing review\u003c/a\u003e, and a \u003ca href=\"https://dev.to/scc33/uiuc-mcs-cs-416-review-data-visualization-1897\"\u003eCS 416 review\u003c/a\u003e.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"uiuc-mcs-cs-513-review-theory-and-practice-of-data-cleaning-f0n","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eyx05awolroelagdy3w9.png","title":"UIUC MCS - CS 513 Review - Theory and Practice of Data Cleaning","video":null,"video_code":null},{"created_at":"2023-09-05T23:28:09.838Z","crossposted_at":"2023-09-05T23:29:03.426Z","edited_at":null,"last_comment_at":"2023-09-05T23:18:35.000Z","published_at":"2023-09-05T23:18:35.000Z","canonical_url":"https://blog.seancoughlin.me/how-to-find-first-and-last-position-of-element-in-sorted-array","feed_source_url":"https://blog.seancoughlin.me/how-to-find-first-and-last-position-of-element-in-sorted-array","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: How to Find First and Last Position of Element in Sorted Array\npublished: true\ndate: 2023-09-05 23:18:35 UTC\ntags: #leetcode #binarysearch #interviewprep\ncanonical_url: https://blog.seancoughlin.me/how-to-find-first-and-last-position-of-element-in-sorted-array\n---\n\n## The Problem\n\nWith this article, I will be covering the [Find First and Last Position of an Element in a Sorted Array problem](https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/).\n\nLeetcode describes the problem with the following:\n\n\u003e Given an array of integers `nums` sorted in non-decreasing order, find the starting and ending position of a given `target` value.\n\u003e \n\u003e If `target` is not found in the array, return `[-1, -1]`.\n\u003e \n\u003e You must write an algorithm with `O(log n)` runtime complexity.\n\nExample:\n\n\u003e Input: nums = [5,7,7,8,8,10], target = 8\n\u003e \n\u003e Output: [3,4]\n\nLeetcode ranks this problem as a medium. I think that is an appropriate rating. The solution is feasible but does require some algorithmic understanding.\n\n### Naive Approach and Its Limitations\n\nThe naive approach for solving this problem would be to scan through the array linearly to find the first and last occurrence of the target value. This involves looping through the array once to find the first occurrence of the target and marking that index as the starting position, then looping through it again to find the last occurrence and marking that as the ending position.\n\nWhile this approach works, it takes `O(n)` time to solve, which doesn't meet the constraint of `O(log n)` runtime complexity. Therefore, it would become inefficient when dealing with large datasets.\n\n## The Solution\n\nTo achieve a runtime complexity of `O(log n)`, we can use [binary search](https://en.wikipedia.org/wiki/Binary_search_algorithm). A binary search is possible because the array is already sorted. In this optimized approach, we will perform two binary searches:\n\n1. **Finding the Leftmost Position** : The first binary search will find the leftmost or the first occurrence of the target value.\n\n2. **Finding the Rightmost Position** : The second binary search will find the rightmost or the last occurrence of the target value.\n\nHere's how each binary search would work:\n\n1. **Leftmost Position** : Initialize `left` to 0 and `right` to `n - 1` (where `n` is the length of the array). In the while loop, calculate the middle index as `(left + right) // 2`. If `target \u003e nums[mid]`, set `left = mid + 1`. Otherwise, set `right = mid - 1`. After the loop, check if `nums[left]` is the target to confirm.\n\n2. **Rightmost Position** : Initialize `left` to 0 and `right` to `n - 1` again. This time, if `target \u003e= nums[mid]`, set `left = mid + 1`. Otherwise, set `right = mid - 1`. After the loop, check if `nums[right]` is the target to confirm.\n\n3. Finally return [-1, -1] if the location of the left and right position overlap.\n\nNotice that the key difference between the left and right searches is the use of the greater than or equal to check on the right search.\n\n```python\nclass Solution(object):\n    def searchRange(self, nums, target):\n        left, right = 0, len(nums) - 1\n        while left \u003c= right:\n            mid = (left + right) / 2\n            if target \u003e nums[mid]: \n                left = mid + 1\n            else: \n                right = mid - 1\n        left_to_return = left\n\n        left, right = 0, len(nums) - 1\n        while left \u003c= right:\n            mid = (left + right) / 2\n            if target \u003e= nums[mid]: \n                left = mid + 1\n            else: \n                right = mid - 1\n\n        if left_to_return \u003c= right:\n            return (left_to_return, right) \n        else:\n            return [-1, -1]\n```\n\n### Time Complexity\n\nEach binary search has a time complexity of `O(log n)`, and since we are performing two binary searches, the overall time complexity remains `O(log n)`.\n\nThis optimized approach not only meets the problem's algorithmic constraint but also efficiently finds the target's starting and ending positions in the array.\n\n---\n\nOriginally published at https://blog.seancoughlin.me.","cached_tag_list":"leetcode, binarysearch, interviewprep","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"The Problem   With this article, I will be covering the Find First and Last Position of an...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/how-to-find-first-and-last-position-of-element-in-sorted-array-d7f","public_reactions_count":8,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"the-problem\" href=\"#the-problem\"\u003e\n  \u003c/a\u003e\n  The Problem\n\u003c/h2\u003e\n\n\u003cp\u003eWith this article, I will be covering the \u003ca href=\"https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/\"\u003eFind First and Last Position of an Element in a Sorted Array problem\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eLeetcode describes the problem with the following:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eGiven an array of integers \u003ccode\u003enums\u003c/code\u003e sorted in non-decreasing order, find the starting and ending position of a given \u003ccode\u003etarget\u003c/code\u003e value.\u003c/p\u003e\n\n\u003cp\u003eIf \u003ccode\u003etarget\u003c/code\u003e is not found in the array, return \u003ccode\u003e[-1, -1]\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eYou must write an algorithm with \u003ccode\u003eO(log n)\u003c/code\u003e runtime complexity.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eInput: nums = [5,7,7,8,8,10], target = 8\u003c/p\u003e\n\n\u003cp\u003eOutput: [3,4]\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eLeetcode ranks this problem as a medium. I think that is an appropriate rating. The solution is feasible but does require some algorithmic understanding.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"naive-approach-and-its-limitations\" href=\"#naive-approach-and-its-limitations\"\u003e\n  \u003c/a\u003e\n  Naive Approach and Its Limitations\n\u003c/h3\u003e\n\n\u003cp\u003eThe naive approach for solving this problem would be to scan through the array linearly to find the first and last occurrence of the target value. This involves looping through the array once to find the first occurrence of the target and marking that index as the starting position, then looping through it again to find the last occurrence and marking that as the ending position.\u003c/p\u003e\n\n\u003cp\u003eWhile this approach works, it takes \u003ccode\u003eO(n)\u003c/code\u003e time to solve, which doesn't meet the constraint of \u003ccode\u003eO(log n)\u003c/code\u003e runtime complexity. Therefore, it would become inefficient when dealing with large datasets.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"the-solution\" href=\"#the-solution\"\u003e\n  \u003c/a\u003e\n  The Solution\n\u003c/h2\u003e\n\n\u003cp\u003eTo achieve a runtime complexity of \u003ccode\u003eO(log n)\u003c/code\u003e, we can use \u003ca href=\"https://en.wikipedia.org/wiki/Binary_search_algorithm\"\u003ebinary search\u003c/a\u003e. A binary search is possible because the array is already sorted. In this optimized approach, we will perform two binary searches:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eFinding the Leftmost Position\u003c/strong\u003e : The first binary search will find the leftmost or the first occurrence of the target value.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eFinding the Rightmost Position\u003c/strong\u003e : The second binary search will find the rightmost or the last occurrence of the target value.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eHere's how each binary search would work:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eLeftmost Position\u003c/strong\u003e : Initialize \u003ccode\u003eleft\u003c/code\u003e to 0 and \u003ccode\u003eright\u003c/code\u003e to \u003ccode\u003en - 1\u003c/code\u003e (where \u003ccode\u003en\u003c/code\u003e is the length of the array). In the while loop, calculate the middle index as \u003ccode\u003e(left + right) // 2\u003c/code\u003e. If \u003ccode\u003etarget \u0026gt; nums[mid]\u003c/code\u003e, set \u003ccode\u003eleft = mid + 1\u003c/code\u003e. Otherwise, set \u003ccode\u003eright = mid - 1\u003c/code\u003e. After the loop, check if \u003ccode\u003enums[left]\u003c/code\u003e is the target to confirm.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eRightmost Position\u003c/strong\u003e : Initialize \u003ccode\u003eleft\u003c/code\u003e to 0 and \u003ccode\u003eright\u003c/code\u003e to \u003ccode\u003en - 1\u003c/code\u003e again. This time, if \u003ccode\u003etarget \u0026gt;= nums[mid]\u003c/code\u003e, set \u003ccode\u003eleft = mid + 1\u003c/code\u003e. Otherwise, set \u003ccode\u003eright = mid - 1\u003c/code\u003e. After the loop, check if \u003ccode\u003enums[right]\u003c/code\u003e is the target to confirm.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eFinally return [-1, -1] if the location of the left and right position overlap.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eNotice that the key difference between the left and right searches is the use of the greater than or equal to check on the right search.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSolution\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eobject\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esearchRange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enums\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etarget\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eright\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nf\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enums\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003eleft\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n            \u003cspan class=\"n\"\u003emid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eleft\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003etarget\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003enums\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003emid\u003c/span\u003e\u003cspan class=\"p\"\u003e]:\u003c/span\u003e \n                \u003cspan class=\"n\"\u003eleft\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emid\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \n                \u003cspan class=\"n\"\u003eright\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emid\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eleft_to_return\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eleft\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eright\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nf\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enums\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003eleft\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n            \u003cspan class=\"n\"\u003emid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eleft\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003etarget\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"n\"\u003enums\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003emid\u003c/span\u003e\u003cspan class=\"p\"\u003e]:\u003c/span\u003e \n                \u003cspan class=\"n\"\u003eleft\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emid\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \n                \u003cspan class=\"n\"\u003eright\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emid\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eleft_to_return\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n            \u003cspan class=\"nf\"\u003ereturn \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eleft_to_return\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \n        \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch3\u003e\n  \u003ca name=\"time-complexity\" href=\"#time-complexity\"\u003e\n  \u003c/a\u003e\n  Time Complexity\n\u003c/h3\u003e\n\n\u003cp\u003eEach binary search has a time complexity of \u003ccode\u003eO(log n)\u003c/code\u003e, and since we are performing two binary searches, the overall time complexity remains \u003ccode\u003eO(log n)\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis optimized approach not only meets the problem's algorithmic constraint but also efficiently finds the target's starting and ending positions in the array.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"how-to-find-first-and-last-position-of-element-in-sorted-array-d7f","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bpel3kk4pkvbi8wht6h4.png","title":"How to Find First and Last Position of Element in Sorted Array","video":null,"video_code":null},{"created_at":"2023-09-07T15:35:34.320Z","crossposted_at":"2023-09-07T15:36:57.658Z","edited_at":null,"last_comment_at":"2023-09-07T15:30:52.000Z","published_at":"2023-09-07T15:30:52.000Z","canonical_url":"https://blog.seancoughlin.me/how-to-validate-a-sudoku-board","feed_source_url":"https://blog.seancoughlin.me/how-to-validate-a-sudoku-board","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: How to validate a Sudoku board\npublished: true\ndate: 2023-09-07 15:30:52 UTC\ntags: #leetcode #algorithms #interviewprep #bigO\ncanonical_url: https://blog.seancoughlin.me/how-to-validate-a-sudoku-board\n---\n\n## The Problem\n\nWith this article, I will be covering the [valid sudoku Leetcode problem](https://leetcode.com/problems/valid-sudoku/).\n\nLeetcode describes the problem with the following:\n\n\u003e Determine if a `9 x 9` Sudoku board is valid. Only the filled cells need to be validated **according to the following rules** :\n\u003e \n\u003e 1. Each row must contain the digits `1-9` without repetition.\n\u003e \n\u003e 2. Each column must contain the digits `1-9` without repetition.\n\u003e \n\u003e 3. Each of the nine `3 x 3` sub-boxes of the grid must contain the digits `1-9` without repetition.\n\u003e \n\u003e **Note:**\n\u003e \n\u003e - A Sudoku board (partially filled) could be valid but is not necessarily solvable.\n\u003e \n\u003e - Only the filled cells need to be validated according to the mentioned rules.\n\nLeetcode ranks this problem as a medium. I think that is an appropriate rating. The solution is feasible but does require some out-of-the-box reasoning.\n\n## The Solution\n\n```python\n    def isValidSudoku(self, board):\n        seen = set()\n        for i in range(9):\n            for j in range(9):\n                number = board[i][j]\n                if number != \".\":\n                    row = str(number) + \"row\" + str(i)\n                    column = str(number) + \"column\" + str(j)\n                    block = str(number) + \"block\" + str(i / 3) + \"/\" + str(j/3)\n                    if row in seen or column in seen or block in seen:\n                        return False\n                    seen.add(row)\n                    seen.add(column)\n                    seen.add(block)\n        return True\n\n```\n\n### Solution Description\n\n1. `seen = set()`: Creates an empty set named `seen` to keep track of numbers that have already appeared in rows, columns, and 3x3 blocks.\n\n2. Two nested loops `for i in range(9)` and `for j in range(9)` iterate through each cell of the 9x9 board.\n\n3. `number = board[i][j]`: Stores the current cell's value in the variable `number`.\n\n4. `if number != \".\":`: Checks if the cell is not empty (a dot indicates an empty cell in this context).\n\n5. `row = str(number) + \"row\" + str(i)`: Creates a string like `1row0` to indicate that the number 1 is in row 0.\n\n6. `column = str(number) + \"column\" + str(j)`: Creates a string like `1column0` to indicate that the number 1 is in column 0.\n\n7. `block = str(number) + \"block\" + str(i / 3) + \"/\" + str(j/3)`: Creates a string like `1block0/0` to indicate that the number 1 is in the top-left 3x3 block.\n\n8. `if row in seen or column in seen or block in seen:`: Checks if any of these strings already exist in the `seen` set. If so, the board is not valid and the function returns `False`.\n\n9. `seen.add(row)`, `seen.add(column)`, `seen.add(block)`: Adds the newly created strings to the `seen` set so that they can be checked against future cells.\n\n10. If all cells are valid, the function returns `True`, indicating a valid Sudoku board.\n\n### Big O Analysis\n\nAssuming `n` is the side length. We have a double for-loop so that is at least `O(n^2)`. Inside the nested loops, the operations (like adding to a set, creating strings, and checking for membership in a set) are `O(1)` operations. Therefore, the overall runtime is `O(n^2)`.\n\n---\n\nOriginally published at https://blog.seancoughlin.me.","cached_tag_list":"leetcode, algorithms, interviewprep, bigo","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"The Problem   With this article, I will be covering the valid sudoku Leetcode...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/how-to-validate-a-sudoku-board-46pb","public_reactions_count":5,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"the-problem\" href=\"#the-problem\"\u003e\n  \u003c/a\u003e\n  The Problem\n\u003c/h2\u003e\n\n\u003cp\u003eWith this article, I will be covering the \u003ca href=\"https://leetcode.com/problems/valid-sudoku/\"\u003evalid sudoku Leetcode problem\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eLeetcode describes the problem with the following:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eDetermine if a \u003ccode\u003e9 x 9\u003c/code\u003e Sudoku board is valid. Only the filled cells need to be validated \u003cstrong\u003eaccording to the following rules\u003c/strong\u003e :\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eEach row must contain the digits \u003ccode\u003e1-9\u003c/code\u003e without repetition.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eEach column must contain the digits \u003ccode\u003e1-9\u003c/code\u003e without repetition.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eEach of the nine \u003ccode\u003e3 x 3\u003c/code\u003e sub-boxes of the grid must contain the digits \u003ccode\u003e1-9\u003c/code\u003e without repetition.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eA Sudoku board (partially filled) could be valid but is not necessarily solvable.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eOnly the filled cells need to be validated according to the mentioned rules.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eLeetcode ranks this problem as a medium. I think that is an appropriate rating. The solution is feasible but does require some out-of-the-box reasoning.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"the-solution\" href=\"#the-solution\"\u003e\n  \u003c/a\u003e\n  The Solution\n\u003c/h2\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eisValidSudoku\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eboard\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eseen\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nf\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"nf\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n            \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"nf\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n                \u003cspan class=\"n\"\u003enumber\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eboard\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n                \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003enumber\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"sh\"\u003e\"\u003c/span\u003e\u003cspan class=\"s\"\u003e.\u003c/span\u003e\u003cspan class=\"sh\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                    \u003cspan class=\"n\"\u003erow\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nf\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"sh\"\u003e\"\u003c/span\u003e\u003cspan class=\"s\"\u003erow\u003c/span\u003e\u003cspan class=\"sh\"\u003e\"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nf\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n                    \u003cspan class=\"n\"\u003ecolumn\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nf\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"sh\"\u003e\"\u003c/span\u003e\u003cspan class=\"s\"\u003ecolumn\u003c/span\u003e\u003cspan class=\"sh\"\u003e\"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nf\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n                    \u003cspan class=\"n\"\u003eblock\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nf\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"sh\"\u003e\"\u003c/span\u003e\u003cspan class=\"s\"\u003eblock\u003c/span\u003e\u003cspan class=\"sh\"\u003e\"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nf\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"sh\"\u003e\"\u003c/span\u003e\u003cspan class=\"s\"\u003e/\u003c/span\u003e\u003cspan class=\"sh\"\u003e\"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nf\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n                    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003erow\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eseen\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"n\"\u003ecolumn\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eseen\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"n\"\u003eblock\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eseen\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n                        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003eFalse\u003c/span\u003e\n                    \u003cspan class=\"n\"\u003eseen\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eadd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erow\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n                    \u003cspan class=\"n\"\u003eseen\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eadd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecolumn\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n                    \u003cspan class=\"n\"\u003eseen\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eadd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eblock\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch3\u003e\n  \u003ca name=\"solution-description\" href=\"#solution-description\"\u003e\n  \u003c/a\u003e\n  Solution Description\n\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eseen = set()\u003c/code\u003e: Creates an empty set named \u003ccode\u003eseen\u003c/code\u003e to keep track of numbers that have already appeared in rows, columns, and 3x3 blocks.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eTwo nested loops \u003ccode\u003efor i in range(9)\u003c/code\u003e and \u003ccode\u003efor j in range(9)\u003c/code\u003e iterate through each cell of the 9x9 board.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003enumber = board[i][j]\u003c/code\u003e: Stores the current cell's value in the variable \u003ccode\u003enumber\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eif number != \".\":\u003c/code\u003e: Checks if the cell is not empty (a dot indicates an empty cell in this context).\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003erow = str(number) + \"row\" + str(i)\u003c/code\u003e: Creates a string like \u003ccode\u003e1row0\u003c/code\u003e to indicate that the number 1 is in row 0.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ecolumn = str(number) + \"column\" + str(j)\u003c/code\u003e: Creates a string like \u003ccode\u003e1column0\u003c/code\u003e to indicate that the number 1 is in column 0.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eblock = str(number) + \"block\" + str(i / 3) + \"/\" + str(j/3)\u003c/code\u003e: Creates a string like \u003ccode\u003e1block0/0\u003c/code\u003e to indicate that the number 1 is in the top-left 3x3 block.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eif row in seen or column in seen or block in seen:\u003c/code\u003e: Checks if any of these strings already exist in the \u003ccode\u003eseen\u003c/code\u003e set. If so, the board is not valid and the function returns \u003ccode\u003eFalse\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eseen.add(row)\u003c/code\u003e, \u003ccode\u003eseen.add(column)\u003c/code\u003e, \u003ccode\u003eseen.add(block)\u003c/code\u003e: Adds the newly created strings to the \u003ccode\u003eseen\u003c/code\u003e set so that they can be checked against future cells.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eIf all cells are valid, the function returns \u003ccode\u003eTrue\u003c/code\u003e, indicating a valid Sudoku board.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"big-o-analysis\" href=\"#big-o-analysis\"\u003e\n  \u003c/a\u003e\n  Big O Analysis\n\u003c/h3\u003e\n\n\u003cp\u003eAssuming \u003ccode\u003en\u003c/code\u003e is the side length. We have a double for-loop so that is at least \u003ccode\u003eO(n^2)\u003c/code\u003e. Inside the nested loops, the operations (like adding to a set, creating strings, and checking for membership in a set) are \u003ccode\u003eO(1)\u003c/code\u003e operations. Therefore, the overall runtime is \u003ccode\u003eO(n^2)\u003c/code\u003e.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"how-to-validate-a-sudoku-board-46pb","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qwi8z3iib47706k6yfnc.png","title":"How to validate a Sudoku board","video":null,"video_code":null},{"created_at":"2023-09-08T14:47:14.939Z","crossposted_at":"2023-09-08T14:51:04.133Z","edited_at":null,"last_comment_at":"2023-09-08T14:46:40.000Z","published_at":"2023-09-08T14:46:40.000Z","canonical_url":"https://blog.seancoughlin.me/understanding-amazon-route-53-an-in-depth-guide","feed_source_url":"https://blog.seancoughlin.me/understanding-amazon-route-53-an-in-depth-guide","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Understanding Amazon Route 53: An In-depth Guide\npublished: true\ndate: 2023-09-08 14:46:40 UTC\ntags: #aws #cloud #networking #dns\ncanonical_url: https://blog.seancoughlin.me/understanding-amazon-route-53-an-in-depth-guide\n---\n\n## **Introduction**\n\nIn today's cloud-centric world, one of the most crucial services often overlooked is the [Domain Name System (DNS)](https://en.wikipedia.org/wiki/Domain_Name_System). A robust DNS service is foundational to ensure that your web applications are scalable, secure, and highly available. One such leading service in this space is [Amazon Route 53](https://aws.amazon.com/route53/), part of [Amazon Web Services (AWS)](https://aws.amazon.com). This blog post aims to provide a comprehensive guide on what Amazon Route 53 is, its history, how it compares with other services and its myriad use cases.\n\n## **A Glimpse into the Past: The Background of Amazon Route 53**\n\nAmazon launched [Route 53 in December 2010](https://en.wikipedia.org/wiki/Amazon_Route_53), and it has since become a cornerstone of AWS offerings. The name \"Route 53\" is a reference to [TCP and UDP port 53](https://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers), where DNS server requests are addressed. Amazon created this service to provide an extremely reliable and cost-effective way to route end-user requests to various endpoints, such as an Amazon EC2 instance or an S3 bucket, in a globally distributed manner.\n\n## How Does Route 53 Compare to Other Services?\n\nTo truly understand the value that Amazon Route 53 brings to the table, it's useful to compare it to other comparable DNS services:\n\n1. [**Google Cloud DNS**](https://cloud.google.com/dns): This is Google Cloud's offering, designed to provide high-performance and premium networking.\n\n2. [**Azure DNS**](https://azure.microsoft.com/en-us/products/dns): Microsoft's DNS offering for Azure provides seamless integration with other Azure services.\n\n3. [**Cloudflare**](https://www.cloudflare.com): Apart from offering DNS services, Cloudflare provides a range of additional features, such as DDoS protection and CDN services.\n\n4. [**Dyn**](https://www.oracle.com/cloud/networking/dns/): Acquired by Oracle, Dyn offers a feature-rich DNS service that focuses particularly on performance and uptime.\n\n5. [**NS1**](https://ns1.com) **(IBM)**: A less conventional but highly flexible service that provides data-driven DNS routing capabilities.\n\n## Unveiling the Multiple Use Cases of Route 53\n\nAmazon Route 53 offers a plethora of functionalities that go beyond basic domain name registration and DNS routing. Below are some key use cases:\n\n- Domain Name Management - Whether you want to register a new domain name or transfer an existing one, Route 53 has you covered. It offers domain registration services, including various domain name extensions such as `.com`, `.org`, and `.net`.\n\n- DNS Record Management - Route 53 provides a simple way to manage DNS records, including A Records, CNAMEs, and MX Records. You can point these to your preferred AWS resources easily through the AWS Management Console.\n\n* * *\n\n\u003e Side note - [DNS record types](https://en.wikipedia.org/wiki/List_of_DNS_record_types)\n\u003e \n\u003e - A - maps a hostname to an IPv4 address\n\u003e \n\u003e - AAAA - maps a hostname to an IPv6 address\n\u003e \n\u003e - CNAME - maps a hostname to a hostname\n\u003e \n\u003e - MX - mail exchange servers\n\u003e \n\u003e - Etc\n\n* * *\n\n- Health Checks and Monitoring - Amazon Route 53 can perform health checks on your application and its various components. If an endpoint becomes unavailable, Route 53 reroutes traffic to a healthy endpoint, ensuring high availability.\n\n- Load Balancing - Route 53 integrates well with [AWS Load Balancers](https://aws.amazon.com/elasticloadbalancing/), enabling you to distribute incoming application traffic across multiple targets, such as EC2 instances, in multiple Availability Zones.\n\n- Geographical Routing - With geolocation routing, you can route traffic according to the geographic location of your users, optimizing latency and improving user experience.\n\n- Private DNS Records for AWS Resources - For internal AWS resources, Route 53 allows you to configure private DNS records, making internal routing simpler and more secure.\n\n- Advanced Application Routing - The service can also be used for advanced application-level routing, like [A/B testing](https://en.wikipedia.org/wiki/A/B_testing) or [blue-green deployments](https://en.wikipedia.org/wiki/Bluegreen_deployment), through DNS queries.\n\n## Conclusion\n\nAmazon Route 53 is more than just a DNS service; it's a complete cloud DNS web service designed for developers and businesses alike. From domain registration to advanced DNS routing techniques, Route 53 offers a suite of features that cater to different needs. Given its importance in the realm of cloud computing, having a good grasp of Amazon Route 53 is beneficial for anyone involved in web development, IT management, or cloud services.\n\nWhether you're just getting started with AWS or looking to optimize your existing cloud infrastructure, Route 53 is an invaluable tool that deserves a closer look.\n\n---\n\nOriginally published at https://blog.seancoughlin.me.","cached_tag_list":"aws, cloud, networking, dns","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Introduction   In today's cloud-centric world, one of the most crucial services often...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/understanding-amazon-route-53-an-in-depth-guide-3ocf","public_reactions_count":5,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"introduction\" href=\"#introduction\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eIntroduction\u003c/strong\u003e\n\u003c/h2\u003e\n\n\u003cp\u003eIn today's cloud-centric world, one of the most crucial services often overlooked is the \u003ca href=\"https://en.wikipedia.org/wiki/Domain_Name_System\"\u003eDomain Name System (DNS)\u003c/a\u003e. A robust DNS service is foundational to ensure that your web applications are scalable, secure, and highly available. One such leading service in this space is \u003ca href=\"https://aws.amazon.com/route53/\"\u003eAmazon Route 53\u003c/a\u003e, part of \u003ca href=\"https://aws.amazon.com\"\u003eAmazon Web Services (AWS)\u003c/a\u003e. This blog post aims to provide a comprehensive guide on what Amazon Route 53 is, its history, how it compares with other services and its myriad use cases.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"a-glimpse-into-the-past-the-background-of-amazon-route-53\" href=\"#a-glimpse-into-the-past-the-background-of-amazon-route-53\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eA Glimpse into the Past: The Background of Amazon Route 53\u003c/strong\u003e\n\u003c/h2\u003e\n\n\u003cp\u003eAmazon launched \u003ca href=\"https://en.wikipedia.org/wiki/Amazon_Route_53\"\u003eRoute 53 in December 2010\u003c/a\u003e, and it has since become a cornerstone of AWS offerings. The name \"Route 53\" is a reference to \u003ca href=\"https://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers\"\u003eTCP and UDP port 53\u003c/a\u003e, where DNS server requests are addressed. Amazon created this service to provide an extremely reliable and cost-effective way to route end-user requests to various endpoints, such as an Amazon EC2 instance or an S3 bucket, in a globally distributed manner.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"how-does-route-53-compare-to-other-services\" href=\"#how-does-route-53-compare-to-other-services\"\u003e\n  \u003c/a\u003e\n  How Does Route 53 Compare to Other Services?\n\u003c/h2\u003e\n\n\u003cp\u003eTo truly understand the value that Amazon Route 53 brings to the table, it's useful to compare it to other comparable DNS services:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://cloud.google.com/dns\"\u003e\u003cstrong\u003eGoogle Cloud DNS\u003c/strong\u003e\u003c/a\u003e: This is Google Cloud's offering, designed to provide high-performance and premium networking.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://azure.microsoft.com/en-us/products/dns\"\u003e\u003cstrong\u003eAzure DNS\u003c/strong\u003e\u003c/a\u003e: Microsoft's DNS offering for Azure provides seamless integration with other Azure services.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.cloudflare.com\"\u003e\u003cstrong\u003eCloudflare\u003c/strong\u003e\u003c/a\u003e: Apart from offering DNS services, Cloudflare provides a range of additional features, such as DDoS protection and CDN services.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.oracle.com/cloud/networking/dns/\"\u003e\u003cstrong\u003eDyn\u003c/strong\u003e\u003c/a\u003e: Acquired by Oracle, Dyn offers a feature-rich DNS service that focuses particularly on performance and uptime.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://ns1.com\"\u003e\u003cstrong\u003eNS1\u003c/strong\u003e\u003c/a\u003e \u003cstrong\u003e(IBM)\u003c/strong\u003e: A less conventional but highly flexible service that provides data-driven DNS routing capabilities.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"unveiling-the-multiple-use-cases-of-route-53\" href=\"#unveiling-the-multiple-use-cases-of-route-53\"\u003e\n  \u003c/a\u003e\n  Unveiling the Multiple Use Cases of Route 53\n\u003c/h2\u003e\n\n\u003cp\u003eAmazon Route 53 offers a plethora of functionalities that go beyond basic domain name registration and DNS routing. Below are some key use cases:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eDomain Name Management - Whether you want to register a new domain name or transfer an existing one, Route 53 has you covered. It offers domain registration services, including various domain name extensions such as \u003ccode\u003e.com\u003c/code\u003e, \u003ccode\u003e.org\u003c/code\u003e, and \u003ccode\u003e.net\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eDNS Record Management - Route 53 provides a simple way to manage DNS records, including A Records, CNAMEs, and MX Records. You can point these to your preferred AWS resources easily through the AWS Management Console.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003chr\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eSide note - \u003ca href=\"https://en.wikipedia.org/wiki/List_of_DNS_record_types\"\u003eDNS record types\u003c/a\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eA - maps a hostname to an IPv4 address\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eAAAA - maps a hostname to an IPv6 address\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eCNAME - maps a hostname to a hostname\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eMX - mail exchange servers\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eEtc\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\n\n\u003chr\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eHealth Checks and Monitoring - Amazon Route 53 can perform health checks on your application and its various components. If an endpoint becomes unavailable, Route 53 reroutes traffic to a healthy endpoint, ensuring high availability.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eLoad Balancing - Route 53 integrates well with \u003ca href=\"https://aws.amazon.com/elasticloadbalancing/\"\u003eAWS Load Balancers\u003c/a\u003e, enabling you to distribute incoming application traffic across multiple targets, such as EC2 instances, in multiple Availability Zones.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eGeographical Routing - With geolocation routing, you can route traffic according to the geographic location of your users, optimizing latency and improving user experience.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003ePrivate DNS Records for AWS Resources - For internal AWS resources, Route 53 allows you to configure private DNS records, making internal routing simpler and more secure.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eAdvanced Application Routing - The service can also be used for advanced application-level routing, like \u003ca href=\"https://en.wikipedia.org/wiki/A/B_testing\"\u003eA/B testing\u003c/a\u003e or \u003ca href=\"https://en.wikipedia.org/wiki/Bluegreen_deployment\"\u003eblue-green deployments\u003c/a\u003e, through DNS queries.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eAmazon Route 53 is more than just a DNS service; it's a complete cloud DNS web service designed for developers and businesses alike. From domain registration to advanced DNS routing techniques, Route 53 offers a suite of features that cater to different needs. Given its importance in the realm of cloud computing, having a good grasp of Amazon Route 53 is beneficial for anyone involved in web development, IT management, or cloud services.\u003c/p\u003e\n\n\u003cp\u003eWhether you're just getting started with AWS or looking to optimize your existing cloud infrastructure, Route 53 is an invaluable tool that deserves a closer look.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"understanding-amazon-route-53-an-in-depth-guide-3ocf","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rx6tqnyo0gzibd9hodzf.png","title":"Understanding Amazon Route 53: An In-depth Guide","video":null,"video_code":null},{"created_at":"2023-09-09T19:48:35.219Z","crossposted_at":"2023-09-09T19:49:45.043Z","edited_at":null,"last_comment_at":"2023-09-09T19:45:03.000Z","published_at":"2023-09-09T19:45:03.000Z","canonical_url":"https://blog.seancoughlin.me/delete-duplicate-emails","feed_source_url":"https://blog.seancoughlin.me/delete-duplicate-emails","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Delete Duplicate Emails\npublished: true\ndate: 2023-09-09 19:45:03 UTC\ntags: #python #pandas #SQL #leetcode\ncanonical_url: https://blog.seancoughlin.me/delete-duplicate-emails\n---\n\nEliminating Duplicate Emails Efficiently: A Comprehensive Guide to Data Cleanup Using Pandas and SQL\n\n## The Problem\n\nWith this article, I will be covering the [delete duplicate emails Leetcode problem](https://leetcode.com/problems/delete-duplicate-emails/).\n\nLeetcode describes this problem as easy. That's a super reasonable evaluation as the solution requires only basic SQL or Pandas knowledge.\n\nThe problem description is as follows:\n\n\u003e Write a solution to **delete** all duplicate emails, keeping only one unique email with the smallest `id`.\n\u003e \n\u003e For SQL users, please note that you are supposed to write a `DELETE` statement and not a `SELECT` one.\n\u003e \n\u003e For Pandas users, please note that you are supposed to modify `Person` in place.\n\u003e \n\u003e After running your script, the answer shown is the `Person` table. The driver will first compile and run your piece of code and then show the `Person` table. The final order of the `Person` table **does not matter**.\n\u003e \n\u003e ```\n\u003e +-------------+---------+\n\u003e | Column Name | Type |\n\u003e +-------------+---------+\n\u003e | id | int |\n\u003e | email | varchar |\n\u003e +-------------+---------+\n\u003e id is the primary key (column with unique values) for this table.\n\u003e Each row of this table contains an email. \n\u003e The emails will not contain uppercase letters.\n\u003e \n\u003e ```\n\n## The Solution\n\n### Pandas\n\n[Pandas](https://en.wikipedia.org/wiki/Pandas_(software)) is a great Python tool for data analysis and manipulation. Built into that library is the [drop duplicates](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.drop_duplicates.html) function. Please note that the problem statement asks us to do this [in place](https://en.wikipedia.org/wiki/In-place_algorithm).\n\nUsing the Pandas library this can be achieved by first in-place sorting by the `id` field and then dropping the duplicates from `email`. We want to keep at least the first duplicated element.\n\n```python\ndef delete_duplicate_emails(person: pd.DataFrame) -\u003e None:\n    person.sort_values(by='id', inplace=True)\n    person.drop_duplicates(subset='email', keep='first', inplace=True)\n\n```\n\nVoila! I love these simple questions.\n\n### SQL\n\nIn SQL we want to run a delete query. We will grab two copies of the `person` table and match them based on the `email`. To keep at least one of the solutions we only delete the entry with the higher `id` value. This keeps the `email` associated with the smallest `id`.\n\n```SQL\nDELETE p1 \nFROM person p1, person p2 \nWHERE p1.email = p2.email AND p1.id \u003e p2.id;\n\n```\n\nAs with many problems, there are multiple ways to solve them. These Pandas and SQL solutions are but one way of approaching the delete duplicate question.\n\n---\n\nOriginally published at https://blog.seancoughlin.me.","cached_tag_list":"python, pandas, sql, leetcode","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Eliminating Duplicate Emails Efficiently: A Comprehensive Guide to Data Cleanup Using Pandas and...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/delete-duplicate-emails-2k0e","public_reactions_count":6,"processed_html":"\u003cp\u003eEliminating Duplicate Emails Efficiently: A Comprehensive Guide to Data Cleanup Using Pandas and SQL\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"the-problem\" href=\"#the-problem\"\u003e\n  \u003c/a\u003e\n  The Problem\n\u003c/h2\u003e\n\n\u003cp\u003eWith this article, I will be covering the \u003ca href=\"https://leetcode.com/problems/delete-duplicate-emails/\"\u003edelete duplicate emails Leetcode problem\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eLeetcode describes this problem as easy. That's a super reasonable evaluation as the solution requires only basic SQL or Pandas knowledge.\u003c/p\u003e\n\n\u003cp\u003eThe problem description is as follows:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eWrite a solution to \u003cstrong\u003edelete\u003c/strong\u003e all duplicate emails, keeping only one unique email with the smallest \u003ccode\u003eid\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eFor SQL users, please note that you are supposed to write a \u003ccode\u003eDELETE\u003c/code\u003e statement and not a \u003ccode\u003eSELECT\u003c/code\u003e one.\u003c/p\u003e\n\n\u003cp\u003eFor Pandas users, please note that you are supposed to modify \u003ccode\u003ePerson\u003c/code\u003e in place.\u003c/p\u003e\n\n\u003cp\u003eAfter running your script, the answer shown is the \u003ccode\u003ePerson\u003c/code\u003e table. The driver will first compile and run your piece of code and then show the \u003ccode\u003ePerson\u003c/code\u003e table. The final order of the \u003ccode\u003ePerson\u003c/code\u003e table \u003cstrong\u003edoes not matter\u003c/strong\u003e.\u003c/p\u003e\n\n\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e+-------------+---------+\n| Column Name | Type |\n+-------------+---------+\n| id | int |\n| email | varchar |\n+-------------+---------+\nid is the primary key (column with unique values) for this table.\nEach row of this table contains an email. \nThe emails will not contain uppercase letters.\n\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/blockquote\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"the-solution\" href=\"#the-solution\"\u003e\n  \u003c/a\u003e\n  The Solution\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"pandas\" href=\"#pandas\"\u003e\n  \u003c/a\u003e\n  Pandas\n\u003c/h3\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Pandas_(software)\"\u003ePandas\u003c/a\u003e is a great Python tool for data analysis and manipulation. Built into that library is the \u003ca href=\"https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.drop_duplicates.html\"\u003edrop duplicates\u003c/a\u003e function. Please note that the problem statement asks us to do this \u003ca href=\"https://en.wikipedia.org/wiki/In-place_algorithm\"\u003ein place\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eUsing the Pandas library this can be achieved by first in-place sorting by the \u003ccode\u003eid\u003c/code\u003e field and then dropping the duplicates from \u003ccode\u003eemail\u003c/code\u003e. We want to keep at least the first duplicated element.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight python\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edelete_duplicate_emails\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003epd\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eDataFrame\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"bp\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esort_values\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eby\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003eid\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003einplace\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eperson\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edrop_duplicates\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esubset\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003eemail\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ekeep\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003efirst\u003c/span\u003e\u003cspan class=\"sh\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003einplace\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"bp\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eVoila! I love these simple questions.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"sql\" href=\"#sql\"\u003e\n  \u003c/a\u003e\n  SQL\n\u003c/h3\u003e\n\n\u003cp\u003eIn SQL we want to run a delete query. We will grab two copies of the \u003ccode\u003eperson\u003c/code\u003e table and match them based on the \u003ccode\u003eemail\u003c/code\u003e. To keep at least one of the solutions we only delete the entry with the higher \u003ccode\u003eid\u003c/code\u003e value. This keeps the \u003ccode\u003eemail\u003c/code\u003e associated with the smallest \u003ccode\u003eid\u003c/code\u003e.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight sql\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eDELETE\u003c/span\u003e \u003cspan class=\"n\"\u003ep1\u003c/span\u003e \n\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e \u003cspan class=\"n\"\u003eperson\u003c/span\u003e \u003cspan class=\"n\"\u003ep1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eperson\u003c/span\u003e \u003cspan class=\"n\"\u003ep2\u003c/span\u003e \n\u003cspan class=\"k\"\u003eWHERE\u003c/span\u003e \u003cspan class=\"n\"\u003ep1\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ep2\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"k\"\u003eAND\u003c/span\u003e \u003cspan class=\"n\"\u003ep1\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ep2\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eAs with many problems, there are multiple ways to solve them. These Pandas and SQL solutions are but one way of approaching the delete duplicate question.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"delete-duplicate-emails-2k0e","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wsg7php6vaeuxxafh9mv.png","title":"Delete Duplicate Emails","video":null,"video_code":null},{"created_at":"2023-09-09T20:20:28.950Z","crossposted_at":"2023-09-09T20:23:25.529Z","edited_at":null,"last_comment_at":"2023-09-09T20:13:06.000Z","published_at":"2023-09-09T20:13:06.000Z","canonical_url":"https://blog.seancoughlin.me/understanding-the-landscape-of-data-storage-a-comprehensive-guide-to-aws-dynamodb-vs-redshift-for-databases-and-data-warehouses","feed_source_url":"https://blog.seancoughlin.me/understanding-the-landscape-of-data-storage-a-comprehensive-guide-to-aws-dynamodb-vs-redshift-for-databases-and-data-warehouses","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: A Comprehensive Guide to AWS DynamoDB vs. Redshift for Databases and Data Warehouses\npublished: true\ndate: 2023-09-09 20:13:06 UTC\ntags: #aws #dynamodb #redshift #datawarehouse\ncanonical_url: https://blog.seancoughlin.me/understanding-the-landscape-of-data-storage-a-comprehensive-guide-to-aws-dynamodb-vs-redshift-for-databases-and-data-warehouses\n---\n\nUnlock the Full Potential of Your Data: An In-Depth Comparison of AWS DynamoDB and Redshift for Streamlined Data Management and Analytics\n\n![DynamoDB vs Redshift](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bmxh94qref4wbdlz1a4m.jpg)\n\nThe topics of [databases](https://en.wikipedia.org/wiki/Database) and [data warehouses](https://en.wikipedia.org/wiki/Data_warehouse) are central to the modern data landscape, and Amazon's offerings[DynamoDB](https://aws.amazon.com/dynamodb/) and [Redshift](https://aws.amazon.com/redshift/)are standout products in their respective categories. Here's a detailed comparison:\n\n### **Database vs. Data Warehouse**\n\n\n![database vs data warehouses chart](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ggvkf5m7le3fblcsez9k.png)\n\n### **DynamoDB**\n\n[Amazon DynamoDB](https://en.wikipedia.org/wiki/Amazon_DynamoDB), launched by AWS in 2012, is a fully managed NoSQL database service designed to provide seamless scalability and reliable performance. Built to handle high-velocity data and offer single-digit millisecond latency, DynamoDB supports key-value and document data models, making it well-suited for a variety of applications, including real-time analytics, mobile backends, and serverless architectures. With features like auto-scaling, in-memory caching, and multi-region replication, DynamoDB has become a cornerstone in the AWS ecosystem for developers requiring a highly available and low-latency data store.\n\n**Use Cases** :\n\n- High-velocity data like IoT event streams.\n\n- Serverless applications.\n\n- Real-time big data analytics.\n\n- Mobile applications needing a backend.\n\n**Technical Features** :\n\n- Offers single-digit millisecond latency.\n\n- Supports key-value and document data models.\n\n- Can be set up for multi-region replication.\n\n- Auto-scaling, in-memory caching, backup, and restore functionalities.\n\n### **AWS Redshift**\n\n[AWS Redshift](https://en.wikipedia.org/wiki/Amazon_Redshift), introduced in 2012, is a managed data warehouse service built on a Massively Parallel Processing (MPP) architecture. Based on PostgreSQL, Redshift is engineered for complex query processing and offers robust performance for large datasets by utilizing columnar storage and data compression techniques. Designed to serve the needs of OLAP (Online Analytical Processing) workloads, it integrates seamlessly with a variety of Business Intelligence tools and can handle structured and semi-structured data. As a staple in the AWS service suite, Redshift caters to enterprises and data analysts looking for scalable, fast, and flexible solutions for their analytics needs.\n\n**Use Cases** :\n\n- Business intelligence.\n\n- Data analytics.\n\n- Batch data processing.\n\n- Complex SQL queries over large datasets.\n\n**Technical Features** :\n\n- Columnar storage.\n\n- Data compression to improve query performance.\n\n- Massively Parallel Processing (MPP) architecture.\n\n- Integration with various BI tools and data lakes.\n\n### **Next Steps**\n\nIf you're interested in DynamoDB start with AWS's free tier offer for DynamoDB. Then dive into AWS's extensive [DynamoDB documentation](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Introduction.html) and sample projects before experimenting with different DynamoDB features like Streams and Global Tables.\n\nIf you're interested in Redshift utilize the AWS free trial for Redshift! Then explore the i[ntegrations between Redshift and other AWS services](https://docs.aws.amazon.com/redshift/latest/gsg/new-user-serverless.html) like S3, Kinesis, and SageMaker for a more comprehensive data solution.\n\n---\n\nOriginally published at https://blog.seancoughlin.me.","cached_tag_list":"aws, dynamodb, redshift, datawarehouse","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Unlock the Full Potential of Your Data: An In-Depth Comparison of AWS DynamoDB and Redshift for...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/a-comprehensive-guide-to-aws-dynamodb-vs-redshift-for-databases-and-data-warehouses-22hb","public_reactions_count":8,"processed_html":"\u003cp\u003eUnlock the Full Potential of Your Data: An In-Depth Comparison of AWS DynamoDB and Redshift for Streamlined Data Management and Analytics\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--9zxJyhxp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bmxh94qref4wbdlz1a4m.jpg\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--9zxJyhxp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bmxh94qref4wbdlz1a4m.jpg\" alt=\"DynamoDB vs Redshift\" loading=\"lazy\" width=\"800\" height=\"450\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe topics of \u003ca href=\"https://en.wikipedia.org/wiki/Database\"\u003edatabases\u003c/a\u003e and \u003ca href=\"https://en.wikipedia.org/wiki/Data_warehouse\"\u003edata warehouses\u003c/a\u003e are central to the modern data landscape, and Amazon's offerings\u003ca href=\"https://aws.amazon.com/dynamodb/\"\u003eDynamoDB\u003c/a\u003e and \u003ca href=\"https://aws.amazon.com/redshift/\"\u003eRedshift\u003c/a\u003eare standout products in their respective categories. Here's a detailed comparison:\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"database-vs-data-warehouse\" href=\"#database-vs-data-warehouse\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eDatabase vs. Data Warehouse\u003c/strong\u003e\n\u003c/h3\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--4f_eIKpl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ggvkf5m7le3fblcsez9k.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--4f_eIKpl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ggvkf5m7le3fblcsez9k.png\" alt=\"database vs data warehouses chart\" loading=\"lazy\" width=\"800\" height=\"708\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"dynamodb\" href=\"#dynamodb\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eDynamoDB\u003c/strong\u003e\n\u003c/h3\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Amazon_DynamoDB\"\u003eAmazon DynamoDB\u003c/a\u003e, launched by AWS in 2012, is a fully managed NoSQL database service designed to provide seamless scalability and reliable performance. Built to handle high-velocity data and offer single-digit millisecond latency, DynamoDB supports key-value and document data models, making it well-suited for a variety of applications, including real-time analytics, mobile backends, and serverless architectures. With features like auto-scaling, in-memory caching, and multi-region replication, DynamoDB has become a cornerstone in the AWS ecosystem for developers requiring a highly available and low-latency data store.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eUse Cases\u003c/strong\u003e :\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eHigh-velocity data like IoT event streams.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eServerless applications.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eReal-time big data analytics.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eMobile applications needing a backend.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003eTechnical Features\u003c/strong\u003e :\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eOffers single-digit millisecond latency.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eSupports key-value and document data models.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eCan be set up for multi-region replication.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eAuto-scaling, in-memory caching, backup, and restore functionalities.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"aws-redshift\" href=\"#aws-redshift\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eAWS Redshift\u003c/strong\u003e\n\u003c/h3\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Amazon_Redshift\"\u003eAWS Redshift\u003c/a\u003e, introduced in 2012, is a managed data warehouse service built on a Massively Parallel Processing (MPP) architecture. Based on PostgreSQL, Redshift is engineered for complex query processing and offers robust performance for large datasets by utilizing columnar storage and data compression techniques. Designed to serve the needs of OLAP (Online Analytical Processing) workloads, it integrates seamlessly with a variety of Business Intelligence tools and can handle structured and semi-structured data. As a staple in the AWS service suite, Redshift caters to enterprises and data analysts looking for scalable, fast, and flexible solutions for their analytics needs.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eUse Cases\u003c/strong\u003e :\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eBusiness intelligence.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eData analytics.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eBatch data processing.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eComplex SQL queries over large datasets.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003eTechnical Features\u003c/strong\u003e :\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eColumnar storage.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eData compression to improve query performance.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eMassively Parallel Processing (MPP) architecture.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eIntegration with various BI tools and data lakes.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"next-steps\" href=\"#next-steps\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eNext Steps\u003c/strong\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eIf you're interested in DynamoDB start with AWS's free tier offer for DynamoDB. Then dive into AWS's extensive \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Introduction.html\"\u003eDynamoDB documentation\u003c/a\u003e and sample projects before experimenting with different DynamoDB features like Streams and Global Tables.\u003c/p\u003e\n\n\u003cp\u003eIf you're interested in Redshift utilize the AWS free trial for Redshift! Then explore the i\u003ca href=\"https://docs.aws.amazon.com/redshift/latest/gsg/new-user-serverless.html\"\u003entegrations between Redshift and other AWS services\u003c/a\u003e like S3, Kinesis, and SageMaker for a more comprehensive data solution.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"a-comprehensive-guide-to-aws-dynamodb-vs-redshift-for-databases-and-data-warehouses-22hb","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zn8lnfji1g62wres0dpy.png","title":"A Comprehensive Guide to AWS DynamoDB vs. Redshift for Databases and Data Warehouses","video":null,"video_code":null},{"created_at":"2023-10-05T13:20:37.279Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/educated-book-review","feed_source_url":"https://blog.seancoughlin.me/educated-book-review","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Educated Book Review\npublished: false\ndate: 2023-09-14 05:00:00 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/educated-book-review\n---\n\n\u003e _Educated_ is an account of the struggle for self-invention. It is a tale of fierce family loyalty and of the grief that comes with severing the closest of ties. With the acute insight that distinguishes all great writers, Westover has crafted a universal coming-of-age story that gets to the heart of what an education is and what it offers: the perspective to see one's life through new eyes and the will to change it.\n\u003e \n\u003e -[Goodreads](https://www.goodreads.com/book/show/35133922-educated)\n\n![](https://cdn.hashnode.com/res/hashnode/image/upload/v1696502626839/d6c69342-62d3-4a5c-a45d-9d9acb313554.jpeg)\n\nIm late to the train here, but truly an unbelievable read. Ive never would have been able to conceive of a story so remarkable and strange. As it is said, truth is stranger than fiction. Westovers journey, education, and family ties can teach everyone something.\n\nIt would be easy to simplify the story and claim that she made it out. But I think that conclusion is too simplistic. She uses the pages not to describe surviving a deranged family but to explain the moments that shaped her. In one passage, she describes a journey with Bedouins in Jordan on the night Osama Bin Laden was killed. She says when the towers fell ten years before, she had never even heard of Islam. I think that one story stands as a testament to the power of humans to learn and adapt.\n\nWestover went from a tough upbringing with no education to earning a Ph.D. from Cambridge. Its a remarkable story. Id highly recommend reading the book.","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Educated is an account of the struggle for self-invention. It is a tale of fierce family loyalty and...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/educated-book-review-35ho-temp-slug-9063348","public_reactions_count":0,"processed_html":"\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003eEducated\u003c/em\u003e is an account of the struggle for self-invention. It is a tale of fierce family loyalty and of the grief that comes with severing the closest of ties. With the acute insight that distinguishes all great writers, Westover has crafted a universal coming-of-age story that gets to the heart of what an education is and what it offers: the perspective to see one's life through new eyes and the will to change it.\u003c/p\u003e\n\n\u003cp\u003e-\u003ca href=\"https://www.goodreads.com/book/show/35133922-educated\"\u003eGoodreads\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TavNQwuV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696502626839/d6c69342-62d3-4a5c-a45d-9d9acb313554.jpeg\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TavNQwuV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696502626839/d6c69342-62d3-4a5c-a45d-9d9acb313554.jpeg\" alt=\"\" loading=\"lazy\" width=\"800\" height=\"1067\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eIm late to the train here, but truly an unbelievable read. Ive never would have been able to conceive of a story so remarkable and strange. As it is said, truth is stranger than fiction. Westovers journey, education, and family ties can teach everyone something.\u003c/p\u003e\n\n\u003cp\u003eIt would be easy to simplify the story and claim that she made it out. But I think that conclusion is too simplistic. She uses the pages not to describe surviving a deranged family but to explain the moments that shaped her. In one passage, she describes a journey with Bedouins in Jordan on the night Osama Bin Laden was killed. She says when the towers fell ten years before, she had never even heard of Islam. I think that one story stands as a testament to the power of humans to learn and adapt.\u003c/p\u003e\n\n\u003cp\u003eWestover went from a tough upbringing with no education to earning a Ph.D. from Cambridge. Its a remarkable story. Id highly recommend reading the book.\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"educated-book-review-35ho-temp-slug-9063348","social_image":null,"title":"Educated Book Review","video":null,"video_code":null},{"created_at":"2023-10-05T13:20:37.741Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/fourth-wing","feed_source_url":"https://blog.seancoughlin.me/fourth-wing","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Fourth Wing\npublished: false\ndate: 2023-09-24 05:00:00 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/fourth-wing\n---\n\n\u003e Twenty-year-old Violet Sorrengail was supposed to enter the Scribe Quadrant, living a quiet life among books and history. Now, the commanding generalalso known as her tough-as-talons motherhas ordered Violet to join the hundreds of candidates striving to become the elite of Navarre: _dragon riders_.\n\u003e \n\u003e But when youre smaller than everyone else and your body is brittle, death is only a heartbeat away...because dragons dont bond to fragile humans. They incinerate them.\n\u003e \n\u003e Shell need every edge her wits can give her just to see the next sunrise.\n\u003e \n\u003e Friends, enemies, lovers. Everyone at Basgiath War College has an agendabecause once you enter, there are only two ways out: _graduate or die._\n\u003e \n\u003e -[Goodreads](https://www.goodreads.com/book/show/61431922-fourth-wing)\n\n![](https://cdn.hashnode.com/res/hashnode/image/upload/v1696503314075/7dc43d5b-18b1-4eeb-933d-536a955272d1.jpeg)\n\nWow. [_Fourth Wing_](https://en.wikipedia.org/wiki/Fourth_Wing) got my attention. A kingdom at war, dragons, griffins, and magic, it has every element of fantasy my inner geek could hope for.\n\nTo make comparisons to other novels, I'd say this is a cross between [_Ender's Game_](https://en.wikipedia.org/wiki/Ender%27s_Game), [_Eragon_](https://en.wikipedia.org/wiki/Eragon), and one of those steamy novels you find in airport bookstores.\n\nYoung adults interested in defending the kingdom go to a highly deadly Dragon college that distinctly reminded me of the brutal Battle School from _Ender's Game_. Those who survive training pair with a dragon with a mental bond that lasts for life, similar to _Eragon_. Finally, the author takes the opportunity to develop sexual tension in a distinctly not PG manner. I thought it was tastefully done, and I felt the tension furthered character development.\n\nAt the time of this review, the book currently has a 4.65 / 5 with 550 thousand reviews on Goodreads. That is easily one of the highest scores I have ever seen. My usual Goodreads review metrics are:\n\n- \u003c 4.0 - not good unless it is a classic\n\n- \\\u003e 4.1 - usually a good read but not guaranteed\n\n- \\\u003e 4.2 - okay this book will be really fun\n\n- \\\u003e 4.3 - you will tell your friends about these books\n\n- \\\u003e 4.4 - gripping and you will want to read in a day\n\n- \\\u003e 4.5 - incredible and making your top books of all time\n\nAll this is to say, you don't need to take my word for it! At well over a 4.6, this book breaks any Goodreads logic. Go enjoy this book!","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Twenty-year-old Violet Sorrengail was supposed to enter the Scribe Quadrant, living a quiet life...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/fourth-wing-111e-temp-slug-1244828","public_reactions_count":0,"processed_html":"\u003cblockquote\u003e\n\u003cp\u003eTwenty-year-old Violet Sorrengail was supposed to enter the Scribe Quadrant, living a quiet life among books and history. Now, the commanding generalalso known as her tough-as-talons motherhas ordered Violet to join the hundreds of candidates striving to become the elite of Navarre: \u003cem\u003edragon riders\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eBut when youre smaller than everyone else and your body is brittle, death is only a heartbeat away...because dragons dont bond to fragile humans. They incinerate them.\u003c/p\u003e\n\n\u003cp\u003eShell need every edge her wits can give her just to see the next sunrise.\u003c/p\u003e\n\n\u003cp\u003eFriends, enemies, lovers. Everyone at Basgiath War College has an agendabecause once you enter, there are only two ways out: \u003cem\u003egraduate or die.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e-\u003ca href=\"https://www.goodreads.com/book/show/61431922-fourth-wing\"\u003eGoodreads\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ASostyuv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696503314075/7dc43d5b-18b1-4eeb-933d-536a955272d1.jpeg\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ASostyuv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696503314075/7dc43d5b-18b1-4eeb-933d-536a955272d1.jpeg\" alt=\"\" loading=\"lazy\" width=\"800\" height=\"1045\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eWow. \u003ca href=\"https://en.wikipedia.org/wiki/Fourth_Wing\"\u003e\u003cem\u003eFourth Wing\u003c/em\u003e\u003c/a\u003e got my attention. A kingdom at war, dragons, griffins, and magic, it has every element of fantasy my inner geek could hope for.\u003c/p\u003e\n\n\u003cp\u003eTo make comparisons to other novels, I'd say this is a cross between \u003ca href=\"https://en.wikipedia.org/wiki/Ender%27s_Game\"\u003e\u003cem\u003eEnder's Game\u003c/em\u003e\u003c/a\u003e, \u003ca href=\"https://en.wikipedia.org/wiki/Eragon\"\u003e\u003cem\u003eEragon\u003c/em\u003e\u003c/a\u003e, and one of those steamy novels you find in airport bookstores.\u003c/p\u003e\n\n\u003cp\u003eYoung adults interested in defending the kingdom go to a highly deadly Dragon college that distinctly reminded me of the brutal Battle School from \u003cem\u003eEnder's Game\u003c/em\u003e. Those who survive training pair with a dragon with a mental bond that lasts for life, similar to \u003cem\u003eEragon\u003c/em\u003e. Finally, the author takes the opportunity to develop sexual tension in a distinctly not PG manner. I thought it was tastefully done, and I felt the tension furthered character development.\u003c/p\u003e\n\n\u003cp\u003eAt the time of this review, the book currently has a 4.65 / 5 with 550 thousand reviews on Goodreads. That is easily one of the highest scores I have ever seen. My usual Goodreads review metrics are:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u0026lt; 4.0 - not good unless it is a classic\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u0026gt; 4.1 - usually a good read but not guaranteed\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u0026gt; 4.2 - okay this book will be really fun\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u0026gt; 4.3 - you will tell your friends about these books\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u0026gt; 4.4 - gripping and you will want to read in a day\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u0026gt; 4.5 - incredible and making your top books of all time\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAll this is to say, you don't need to take my word for it! At well over a 4.6, this book breaks any Goodreads logic. Go enjoy this book!\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"fourth-wing-111e-temp-slug-1244828","social_image":null,"title":"Fourth Wing","video":null,"video_code":null},{"created_at":"2023-10-07T18:11:04.323Z","crossposted_at":"2023-10-07T18:13:02.833Z","edited_at":null,"last_comment_at":"2023-10-07T18:04:12.000Z","published_at":"2023-10-07T18:04:12.000Z","canonical_url":"https://blog.seancoughlin.me/time-to-rebrand-designing-a-personal-site-with-sveltekit","feed_source_url":"https://blog.seancoughlin.me/time-to-rebrand-designing-a-personal-site-with-sveltekit","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Time to Rebrand!  Designing a Personal Site with SvelteKit\npublished: true\ndate: 2023-10-07 18:04:12 UTC\ntags: #svelte #sveltekit #webdevelopment\ncanonical_url: https://blog.seancoughlin.me/time-to-rebrand-designing-a-personal-site-with-sveltekit\n---\n\n### Site Background\n\nWho am I announcing this to? I'm not sure. It's a total vanity project, but we all need a vanity project or two!\n\nI originally published my site [seancoughlin. me](https://seancoughlin.me) around two years ago. At the time, I used a basic [Bootstrap](https://getbootstrap.com) resume template. I used raw HTML and CSS with a little plain JS.\n\nI filled out my details, deployed to Github pages, and called it a day. The page saw a few content updates, some under-the-hood optimizations for SEO and [Lighthouse](https://chrome.google.com/webstore/detail/lighthouse/blipmdconlkpinefehnmjammfjpmpbjk), and the addition of minor UI tweaks like [Font Awesome](https://fontawesome.com) icons.\n\nThings were fine, but I felt the site had started to feel dated and didn't reflect my current skills. So I went on the hunt for new ideas.\n\n![Wandering path](https://cdn.hashnode.com/res/hashnode/image/upload/v1696701053124/41f484f2-f63c-4afb-99cd-94c65f6971c7.png)\n\n### Finding Inspiration\n\nI am an engineer by trade and CS geek by night. As hard as I try, graphic design just isn't my strong suit. However, people are kind and open-source is awesome! If you ever lack inspiration, search out the community. Just remember to cite the helpful people who contribute to your work :).\n\nAfter some hunting, I arrived at [this](https://youtu.be/-2UjwQzxvBQ?si=9q7kHikpHbCoVqaG) cool [freeCodeCamp](https://www.freecodecamp.org) tutorial! This guy was great a great teacher and I learned a lot from this tutorial. I typically work with React so this was my first [Svelte](https://svelte.dev) introduction. I would say this is a good place to start.\n\n[https://youtu.be/-2UjwQzxvBQ?si=mM1Fzy3J8zlaHDwS](https://youtu.be/-2UjwQzxvBQ?si=mM1Fzy3J8zlaHDwS)\n\nI took his great design and made some tweaks such as adding my details, a skills section, and custom links.\n\nIf you want to check out the original tutorial code you can find it [here](https://github.com/jamezmca/hughjass). If you want to check out my source code you can find that [here](https://github.com/Scc33/Scc33.github.io/releases/tag/v2.0.0).\n\n### The Outcome\n\nPlease go check out the new [site](https://seancoughlin.me/#about) or view some of these fun screenshots.\n\n![About me section of seancoughlin.me](https://cdn.hashnode.com/res/hashnode/image/upload/v1696700425689/5f460cec-342a-4872-87fd-1a3e614dab32.png)\n\n![Skills section of seancoughlin.me](https://cdn.hashnode.com/res/hashnode/image/upload/v1696700449791/69554d30-87df-48e3-83bf-6916173a868b.png)\n\n![Footer of seancoughlin.me](https://cdn.hashnode.com/res/hashnode/image/upload/v1696700535186/f37a1746-4767-471a-b946-071783782d48.png)\n\nCheers!\n\n---\n\nOriginally published at https://blog.seancoughlin.me.","cached_tag_list":"svelte, sveltekit, webdev","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Site Background   Who am I announcing this to? I'm not sure. It's a total vanity project,...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/time-to-rebrand-designing-a-personal-site-with-sveltekit-228j","public_reactions_count":0,"processed_html":"\u003ch3\u003e\n  \u003ca name=\"site-background\" href=\"#site-background\"\u003e\n  \u003c/a\u003e\n  Site Background\n\u003c/h3\u003e\n\n\u003cp\u003eWho am I announcing this to? I'm not sure. It's a total vanity project, but we all need a vanity project or two!\u003c/p\u003e\n\n\u003cp\u003eI originally published my site \u003ca href=\"https://seancoughlin.me\"\u003eseancoughlin. me\u003c/a\u003e around two years ago. At the time, I used a basic \u003ca href=\"https://getbootstrap.com\"\u003eBootstrap\u003c/a\u003e resume template. I used raw HTML and CSS with a little plain JS.\u003c/p\u003e\n\n\u003cp\u003eI filled out my details, deployed to Github pages, and called it a day. The page saw a few content updates, some under-the-hood optimizations for SEO and \u003ca href=\"https://chrome.google.com/webstore/detail/lighthouse/blipmdconlkpinefehnmjammfjpmpbjk\"\u003eLighthouse\u003c/a\u003e, and the addition of minor UI tweaks like \u003ca href=\"https://fontawesome.com\"\u003eFont Awesome\u003c/a\u003e icons.\u003c/p\u003e\n\n\u003cp\u003eThings were fine, but I felt the site had started to feel dated and didn't reflect my current skills. So I went on the hunt for new ideas.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--9klIHzgX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696701053124/41f484f2-f63c-4afb-99cd-94c65f6971c7.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--9klIHzgX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696701053124/41f484f2-f63c-4afb-99cd-94c65f6971c7.png\" alt=\"Wandering path\" loading=\"lazy\" width=\"800\" height=\"800\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"finding-inspiration\" href=\"#finding-inspiration\"\u003e\n  \u003c/a\u003e\n  Finding Inspiration\n\u003c/h3\u003e\n\n\u003cp\u003eI am an engineer by trade and CS geek by night. As hard as I try, graphic design just isn't my strong suit. However, people are kind and open-source is awesome! If you ever lack inspiration, search out the community. Just remember to cite the helpful people who contribute to your work :).\u003c/p\u003e\n\n\u003cp\u003eAfter some hunting, I arrived at \u003ca href=\"https://youtu.be/-2UjwQzxvBQ?si=9q7kHikpHbCoVqaG\"\u003ethis\u003c/a\u003e cool \u003ca href=\"https://www.freecodecamp.org\"\u003efreeCodeCamp\u003c/a\u003e tutorial! This guy was great a great teacher and I learned a lot from this tutorial. I typically work with React so this was my first \u003ca href=\"https://svelte.dev\"\u003eSvelte\u003c/a\u003e introduction. I would say this is a good place to start.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://youtu.be/-2UjwQzxvBQ?si=mM1Fzy3J8zlaHDwS\"\u003ehttps://youtu.be/-2UjwQzxvBQ?si=mM1Fzy3J8zlaHDwS\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eI took his great design and made some tweaks such as adding my details, a skills section, and custom links.\u003c/p\u003e\n\n\u003cp\u003eIf you want to check out the original tutorial code you can find it \u003ca href=\"https://github.com/jamezmca/hughjass\"\u003ehere\u003c/a\u003e. If you want to check out my source code you can find that \u003ca href=\"https://github.com/Scc33/Scc33.github.io/releases/tag/v2.0.0\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"the-outcome\" href=\"#the-outcome\"\u003e\n  \u003c/a\u003e\n  The Outcome\n\u003c/h3\u003e\n\n\u003cp\u003ePlease go check out the new \u003ca href=\"https://seancoughlin.me/#about\"\u003esite\u003c/a\u003e or view some of these fun screenshots.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jh1Vb5fm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696700425689/5f460cec-342a-4872-87fd-1a3e614dab32.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jh1Vb5fm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696700425689/5f460cec-342a-4872-87fd-1a3e614dab32.png\" alt=\"About me section of seancoughlin.me\" loading=\"lazy\" width=\"800\" height=\"458\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--g6JxBqW8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696700449791/69554d30-87df-48e3-83bf-6916173a868b.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--g6JxBqW8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696700449791/69554d30-87df-48e3-83bf-6916173a868b.png\" alt=\"Skills section of seancoughlin.me\" loading=\"lazy\" width=\"800\" height=\"469\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Iym5XdXH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696700535186/f37a1746-4767-471a-b946-071783782d48.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Iym5XdXH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696700535186/f37a1746-4767-471a-b946-071783782d48.png\" alt=\"Footer of seancoughlin.me\" loading=\"lazy\" width=\"800\" height=\"178\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eCheers!\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"time-to-rebrand-designing-a-personal-site-with-sveltekit-228j","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7aibyfmn6cj5pzm2uryd.png","title":"Time to Rebrand! Designing a Personal Site with SvelteKit","video":null,"video_code":null},{"created_at":"2023-10-07T19:27:27.194Z","crossposted_at":"2023-10-07T19:37:57.738Z","edited_at":null,"last_comment_at":"2023-10-07T19:26:50.000Z","published_at":"2023-10-07T19:26:50.000Z","canonical_url":"https://blog.seancoughlin.me/deploying-to-github-pages-using-gh-pages","feed_source_url":"https://blog.seancoughlin.me/deploying-to-github-pages-using-gh-pages","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Deploying to GitHub Pages using gh-pages\npublished: true\ndate: 2023-10-07 19:26:50 UTC\ntags: #git #github #react #angular\ncanonical_url: https://blog.seancoughlin.me/deploying-to-github-pages-using-gh-pages\n---\n\nEffortlessly Deploy Your Static Websites to GitHub Pages with the gh-pages NPM Package.\n\n![gh-pages scripts](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lt0vk7ex8gfwlevotuy0.png)\n\n## What is GitHub Pages?\n\n[GitHub Pages](https://pages.github.com) is a static site hosting service offered by GitHub that takes files straight from a repository on GitHub and publishes them as a website. It's designed to host your personal, organizational, or project pages directly from a GitHub repository. GitHub Pages supports static HTML, CSS, and JavaScript files, as well as Jekyll, a static site generator that converts Markdown files to HTML. The service is commonly used to host personal portfolios, project landing pages, documentation, and blogs, offering a simple way to turn code repositories into publicly accessible websites.\n\n## What is gh-pages?\n\n[`gh-pages`](https://github.com/tschaub/gh-pages) is a Node.js package that provides a simple command-line utility for publishing files to a GitHub Pages branch in your repository. It automates the process of pushing your static assets to the `gh-pages` branch of your GitHub repository, which is then automatically published by GitHub Pages. This package is often used in combination with site generators or build tools to simplify the deployment process for static websites or client-side web apps.\n\n`gh-pages` can easily be used to automatically release and deploy any client-side rendered code. React, Angular, Svelte, plain HTML/CSS/Javascript, etc they all work!\n\n## Using gh-pages\n\n### Setup your GitHub Pages Repo\n\n1. **Open Terminal or Command Line** : Navigate to the directory where you want to initialize a new Git repository.\n\n2. **Initialize Git Repository** : Run the following command to initialize a new Git repository in that directory:\n\n```bash\n git init\n```\n\n3. **Add Files to the Repository** : You can add files to be tracked by Git with the following command:\n\n```bash\n git add .\n```\n\n4. **Commit Changes** : Commit these changes to the repository:\n\n```bash\n git commit -m \"Initial commit\"\n```\n\n5. **Create a Remote Repository** : If you haven't already, create a new repository on GitHub. Do not initialize it with README, license, or `.gitignore` files if you're planning to push an existing repository.\n\n6. **Add Remote Repository** : Back in your terminal, run the following command to link your local repository to the remote one:\n\n```bash\n git remote add origin [Your GitHub Repo URL]\n```\n\n7. **Verify Remote** : You can verify that the remote URL has been added by running:\n\n```bash\n git remote -v\n```\n\n### Setup and Configure gh-pages\n\n1. **Download the gh-pages package** : you can use your favorite node package manager for this step. This module requires Git \u003e= 1.9 and Node \u003e 14.\n\n```bash\n#NPM installation\nnpm install gh-pages --save-dev\n# YARN install\nyarn add gh-pages --dev\n\n```\n\n2. **Update your** `package.json` **scripts** : add a `predeploy` and `deploy` script. The `predeploy` setup handles building the static content. The `predeploy` script will automatically run when the deploy script runs.\n\n```json\n// NPM\n\"scripts\": {\n    \"predeploy\": \"npm run build\",\n    \"deploy\": \"gh-pages -d build\",\n}\n// YARN\n\"scripts\": {\n    \"predeploy\": \"yarn run build\",\n    \"deploy\": \"gh-pages -d build\",\n}\n\n```\n\n3. **Push the app to the GitHub repository** : once again you can use your favorite package manager tool.\n\n```bash\n#NPM\nnpm run deploy\n# YARN\nyarn run deploy\n\n```\n\n4. **Check the GitHub repo to make sure the code was pushed to remote** : gh-pages should have pushed the code to a branch named `gh-pages`.\n\n### Configure GitHub Pages\n\n1. Navigate to the GitHub Pages on the GitHub repository site\n\n2. Configure the `Build and deployment` settings.\n\n![Pages configurations](https://cdn.hashnode.com/res/hashnode/image/upload/v1696705930160/3cd85bf6-4b6d-4059-9259-ea4da8a0ac73.png)\n\nI've previously written about Github Pages configurations in one of my [very first blog posts](https://blog.seancoughlin.me/building-a-personal-website-with-github-pages). Feel free to check that out to learn more.\n\nThat's all! GitHub Actions should automatically use these configurations to take your site live to the internet.\n\n---\n\nOriginally published at https://blog.seancoughlin.me.","cached_tag_list":"git, github, react, angular","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Effortlessly Deploy Your Static Websites to GitHub Pages with the gh-pages NPM Package.            ...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/deploying-to-github-pages-using-gh-pages-2d95","public_reactions_count":3,"processed_html":"\u003cp\u003eEffortlessly Deploy Your Static Websites to GitHub Pages with the gh-pages NPM Package.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--JjlYjt6r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lt0vk7ex8gfwlevotuy0.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--JjlYjt6r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lt0vk7ex8gfwlevotuy0.png\" alt=\"gh-pages scripts\" loading=\"lazy\" width=\"800\" height=\"429\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what-is-github-pages\" href=\"#what-is-github-pages\"\u003e\n  \u003c/a\u003e\n  What is GitHub Pages?\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://pages.github.com\"\u003eGitHub Pages\u003c/a\u003e is a static site hosting service offered by GitHub that takes files straight from a repository on GitHub and publishes them as a website. It's designed to host your personal, organizational, or project pages directly from a GitHub repository. GitHub Pages supports static HTML, CSS, and JavaScript files, as well as Jekyll, a static site generator that converts Markdown files to HTML. The service is commonly used to host personal portfolios, project landing pages, documentation, and blogs, offering a simple way to turn code repositories into publicly accessible websites.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what-is-ghpages\" href=\"#what-is-ghpages\"\u003e\n  \u003c/a\u003e\n  What is gh-pages?\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/tschaub/gh-pages\"\u003e\u003ccode\u003egh-pages\u003c/code\u003e\u003c/a\u003e is a Node.js package that provides a simple command-line utility for publishing files to a GitHub Pages branch in your repository. It automates the process of pushing your static assets to the \u003ccode\u003egh-pages\u003c/code\u003e branch of your GitHub repository, which is then automatically published by GitHub Pages. This package is often used in combination with site generators or build tools to simplify the deployment process for static websites or client-side web apps.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003egh-pages\u003c/code\u003e can easily be used to automatically release and deploy any client-side rendered code. React, Angular, Svelte, plain HTML/CSS/Javascript, etc they all work!\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"using-ghpages\" href=\"#using-ghpages\"\u003e\n  \u003c/a\u003e\n  Using gh-pages\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"setup-your-github-pages-repo\" href=\"#setup-your-github-pages-repo\"\u003e\n  \u003c/a\u003e\n  Setup your GitHub Pages Repo\n\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eOpen Terminal or Command Line\u003c/strong\u003e : Navigate to the directory where you want to initialize a new Git repository.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eInitialize Git Repository\u003c/strong\u003e : Run the following command to initialize a new Git repository in that directory:\u003cbr\u003e\n\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e git init\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003col\u003e\n\u003cli\u003e\n\u003cstrong\u003eAdd Files to the Repository\u003c/strong\u003e : You can add files to be tracked by Git with the following command:\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e git add \u003cspan class=\"nb\"\u003e.\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003col\u003e\n\u003cli\u003e\n\u003cstrong\u003eCommit Changes\u003c/strong\u003e : Commit these changes to the repository:\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e git commit \u003cspan class=\"nt\"\u003e-m\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"Initial commit\"\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eCreate a Remote Repository\u003c/strong\u003e : If you haven't already, create a new repository on GitHub. Do not initialize it with README, license, or \u003ccode\u003e.gitignore\u003c/code\u003e files if you're planning to push an existing repository.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eAdd Remote Repository\u003c/strong\u003e : Back in your terminal, run the following command to link your local repository to the remote one:\u003cbr\u003e\n\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e git remote add origin \u003cspan class=\"o\"\u003e[\u003c/span\u003eYour GitHub Repo URL]\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003col\u003e\n\u003cli\u003e\n\u003cstrong\u003eVerify Remote\u003c/strong\u003e : You can verify that the remote URL has been added by running:\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e git remote \u003cspan class=\"nt\"\u003e-v\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch3\u003e\n  \u003ca name=\"setup-and-configure-ghpages\" href=\"#setup-and-configure-ghpages\"\u003e\n  \u003c/a\u003e\n  Setup and Configure gh-pages\n\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003cstrong\u003eDownload the gh-pages package\u003c/strong\u003e : you can use your favorite node package manager for this step. This module requires Git \u0026gt;= 1.9 and Node \u0026gt; 14.\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e#NPM installation\u003c/span\u003e\nnpm \u003cspan class=\"nb\"\u003einstall \u003c/span\u003egh-pages \u003cspan class=\"nt\"\u003e--save-dev\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# YARN install\u003c/span\u003e\nyarn add gh-pages \u003cspan class=\"nt\"\u003e--dev\u003c/span\u003e\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003col\u003e\n\u003cli\u003e\n\u003cstrong\u003eUpdate your\u003c/strong\u003e \u003ccode\u003epackage.json\u003c/code\u003e \u003cstrong\u003escripts\u003c/strong\u003e : add a \u003ccode\u003epredeploy\u003c/code\u003e and \u003ccode\u003edeploy\u003c/code\u003e script. The \u003ccode\u003epredeploy\u003c/code\u003e setup handles building the static content. The \u003ccode\u003epredeploy\u003c/code\u003e script will automatically run when the deploy script runs.\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight json\"\u003e\u003ccode\u003e\u003cspan class=\"err\"\u003e//\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003eNPM\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"nl\"\u003e\"scripts\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"predeploy\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"npm run build\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"deploy\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"gh-pages -d build\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"err\"\u003e//\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003eYARN\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"nl\"\u003e\"scripts\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"predeploy\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"yarn run build\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"deploy\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"gh-pages -d build\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003col\u003e\n\u003cli\u003e\n\u003cstrong\u003ePush the app to the GitHub repository\u003c/strong\u003e : once again you can use your favorite package manager tool.\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e#NPM\u003c/span\u003e\nnpm run deploy\n\u003cspan class=\"c\"\u003e# YARN\u003c/span\u003e\nyarn run deploy\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003col\u003e\n\u003cli\u003e\n\u003cstrong\u003eCheck the GitHub repo to make sure the code was pushed to remote\u003c/strong\u003e : gh-pages should have pushed the code to a branch named \u003ccode\u003egh-pages\u003c/code\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"configure-github-pages\" href=\"#configure-github-pages\"\u003e\n  \u003c/a\u003e\n  Configure GitHub Pages\n\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eNavigate to the GitHub Pages on the GitHub repository site\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eConfigure the \u003ccode\u003eBuild and deployment\u003c/code\u003e settings.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--37OOVNZS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696705930160/3cd85bf6-4b6d-4059-9259-ea4da8a0ac73.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--37OOVNZS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696705930160/3cd85bf6-4b6d-4059-9259-ea4da8a0ac73.png\" alt=\"Pages configurations\" loading=\"lazy\" width=\"800\" height=\"499\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eI've previously written about Github Pages configurations in one of my \u003ca href=\"https://blog.seancoughlin.me/building-a-personal-website-with-github-pages\"\u003every first blog posts\u003c/a\u003e. Feel free to check that out to learn more.\u003c/p\u003e\n\n\u003cp\u003eThat's all! GitHub Actions should automatically use these configurations to take your site live to the internet.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"deploying-to-github-pages-using-gh-pages-2d95","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/87wu85hbs09shadudvg8.png","title":"Deploying to GitHub Pages using gh-pages","video":null,"video_code":null},{"created_at":"2023-10-08T14:20:40.573Z","crossposted_at":"2023-10-08T14:23:24.578Z","edited_at":null,"last_comment_at":"2023-10-08T14:08:35.000Z","published_at":"2023-10-08T14:08:35.000Z","canonical_url":"https://blog.seancoughlin.me/publishing-a-sveltekit-app-to-github-pages","feed_source_url":"https://blog.seancoughlin.me/publishing-a-sveltekit-app-to-github-pages","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Publishing a SvelteKit App to GitHub Pages\npublished: true\ndate: 2023-10-08 14:08:35 UTC\ntags: #svelte #sveltekit #github #staticwebsite\ncanonical_url: https://blog.seancoughlin.me/publishing-a-sveltekit-app-to-github-pages\n---\n\nLearn the step-by-step guide to effortlessly deploy your SvelteKit application to GitHub Pages and make your web project accessible to the world.\n\n![SvelteKit Logo](https://cdn.hashnode.com/res/hashnode/image/upload/v1696773973033/9dbab7b7-9cab-4942-b35d-908a6f3d6f75.png)\n\n### What is SvelteKit?\n\n[SvelteKit](https://kit.svelte.dev/docs/introduction) is a framework for building web applications that are built on top of Svelte, a modern JavaScript UI library. Unlike traditional frameworks that operate mainly on the client side, SvelteKit provides a unified approach to building apps that can be rendered on the server, statically generated at build time, or even rendered client-side. It comes with built-in features like routing, layouts, and server-side rendering (SSR), making it a comprehensive solution for building everything from small, static websites to large, complex web applications. With a focus on performance and a simplified developer experience, SvelteKit aims to streamline the process of building robust and scalable web apps.\n\n### Build a SvelteKit App!\n\nThis tutorial just spells out how to configure and deploy a SvelteKit web app to GitHub Pages. If you never have created a Svelte application before, the [docs](https://kit.svelte.dev/docs/creating-a-project) are great!\n\n### Configuring SvelteKit for GitHub Pages\n\nBuild your application using Svelte and SvelteKit\n\nGitHub Pages is a static site host. Therefore, we need to install the [Svelte static site adapter](https://kit.svelte.dev/docs/adapters).\n\n```bash\n# NPM install\nnpm i -D @sveltejs/adapter-static\n# YARN install\nyarn add @sveltejs/adapter-static --dev\n\n```\n\nAfter installing the static adapter, at that to your `svelte.config.js`.\n\n```javascript\nimport adapter from '@sveltejs/adapter-static';\nimport { vitePreprocess } from '@sveltejs/kit/vite';\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n    kit: {\n        appDir: 'app', // Required as the default is _app\n        adapter: adapter()\n    },\n    preprocess: vitePreprocess()\n};\nexport default config;\n\n```\n\nAdd an app directory output to the `svelte.config.js`. The typical output is `_app` so I think something like `app` makes sense but this can be anything without an underscore. GitHub Pages cannot serve content from directories with special characters like underscores.\n\nIf you are deployed to `https://[username].github.io` that is all that is required for configuration. If you are deploying to `https://[username].github.io/your-repo-name` you will need to supply a `paths.base`. See the [SvelteKit docs](https://kit.svelte.dev/docs/adapter-static#github-pages) for more details.\n\n```javascript\nimport adapter from '@sveltejs/adapter-static';\n\nconst dev = process.argv.includes('dev');\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n    kit: {\n        adapter: adapter(),\n        paths: {\n            base: dev ? '' : process.env.BASE_PATH,\n        }\n    }\n};\n\n```\n\nAdd an empty `.nojekyll` file in your `static` folder to prevent GitHub Pages provided Jekyll configurations from managing the site.\n\n![No-Jekyll](https://cdn.hashnode.com/res/hashnode/image/upload/v1696772807659/1143e923-067a-4f8c-bf25-72291a131ac9.png)\n\nManually build and push your output directory to GitHub or use a tool like [gh-pages](https://dev.to/scc33/deploying-to-github-pages-using-gh-pages-2d95).\n\nConfigure GitHub pages to [deploy your app with the repo settings](https://blog.seancoughlin.me/building-a-personal-website-with-github-pages).\n\n---\n\nOriginally published at https://blog.seancoughlin.me.","cached_tag_list":"svelte, sveltekit, github, staticwebsite","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Learn the step-by-step guide to effortlessly deploy your SvelteKit application to GitHub Pages and...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/publishing-a-sveltekit-app-to-github-pages-4439","public_reactions_count":1,"processed_html":"\u003cp\u003eLearn the step-by-step guide to effortlessly deploy your SvelteKit application to GitHub Pages and make your web project accessible to the world.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TVEu9gIu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696773973033/9dbab7b7-9cab-4942-b35d-908a6f3d6f75.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TVEu9gIu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696773973033/9dbab7b7-9cab-4942-b35d-908a6f3d6f75.png\" alt=\"SvelteKit Logo\" loading=\"lazy\" width=\"800\" height=\"192\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"what-is-sveltekit\" href=\"#what-is-sveltekit\"\u003e\n  \u003c/a\u003e\n  What is SvelteKit?\n\u003c/h3\u003e\n\n\u003cp\u003e\u003ca href=\"https://kit.svelte.dev/docs/introduction\"\u003eSvelteKit\u003c/a\u003e is a framework for building web applications that are built on top of Svelte, a modern JavaScript UI library. Unlike traditional frameworks that operate mainly on the client side, SvelteKit provides a unified approach to building apps that can be rendered on the server, statically generated at build time, or even rendered client-side. It comes with built-in features like routing, layouts, and server-side rendering (SSR), making it a comprehensive solution for building everything from small, static websites to large, complex web applications. With a focus on performance and a simplified developer experience, SvelteKit aims to streamline the process of building robust and scalable web apps.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"build-a-sveltekit-app\" href=\"#build-a-sveltekit-app\"\u003e\n  \u003c/a\u003e\n  Build a SvelteKit App!\n\u003c/h3\u003e\n\n\u003cp\u003eThis tutorial just spells out how to configure and deploy a SvelteKit web app to GitHub Pages. If you never have created a Svelte application before, the \u003ca href=\"https://kit.svelte.dev/docs/creating-a-project\"\u003edocs\u003c/a\u003e are great!\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"configuring-sveltekit-for-github-pages\" href=\"#configuring-sveltekit-for-github-pages\"\u003e\n  \u003c/a\u003e\n  Configuring SvelteKit for GitHub Pages\n\u003c/h3\u003e\n\n\u003cp\u003eBuild your application using Svelte and SvelteKit\u003c/p\u003e\n\n\u003cp\u003eGitHub Pages is a static site host. Therefore, we need to install the \u003ca href=\"https://kit.svelte.dev/docs/adapters\"\u003eSvelte static site adapter\u003c/a\u003e.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# NPM install\u003c/span\u003e\nnpm i \u003cspan class=\"nt\"\u003e-D\u003c/span\u003e @sveltejs/adapter-static\n\u003cspan class=\"c\"\u003e# YARN install\u003c/span\u003e\nyarn add @sveltejs/adapter-static \u003cspan class=\"nt\"\u003e--dev\u003c/span\u003e\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eAfter installing the static adapter, at that to your \u003ccode\u003esvelte.config.js\u003c/code\u003e.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eadapter\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"s1\"\u003e@sveltejs/adapter-static\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003evitePreprocess\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"s1\"\u003e@sveltejs/kit/vite\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"cm\"\u003e/** @type {import('@sveltejs/kit').Config} */\u003c/span\u003e\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003econfig\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ekit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eappDir\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"s1\"\u003eapp\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// Required as the default is _app\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eadapter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nf\"\u003eadapter\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"na\"\u003epreprocess\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nf\"\u003evitePreprocess\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eAdd an app directory output to the \u003ccode\u003esvelte.config.js\u003c/code\u003e. The typical output is \u003ccode\u003e_app\u003c/code\u003e so I think something like \u003ccode\u003eapp\u003c/code\u003e makes sense but this can be anything without an underscore. GitHub Pages cannot serve content from directories with special characters like underscores.\u003c/p\u003e\n\n\u003cp\u003eIf you are deployed to \u003ccode\u003ehttps://[username].github.io\u003c/code\u003e that is all that is required for configuration. If you are deploying to \u003ccode\u003ehttps://[username].github.io/your-repo-name\u003c/code\u003e you will need to supply a \u003ccode\u003epaths.base\u003c/code\u003e. See the \u003ca href=\"https://kit.svelte.dev/docs/adapter-static#github-pages\"\u003eSvelteKit docs\u003c/a\u003e for more details.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eadapter\u003c/span\u003e \u003cspan class=\"k\"\u003efrom\u003c/span\u003e \u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"s1\"\u003e@sveltejs/adapter-static\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003edev\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eprocess\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eargv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eincludes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"s1\"\u003edev\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"cm\"\u003e/** @type {import('@sveltejs/kit').Config} */\u003c/span\u003e\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003econfig\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ekit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eadapter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nf\"\u003eadapter\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e\n        \u003cspan class=\"na\"\u003epaths\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"na\"\u003ebase\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003edev\u003c/span\u003e \u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"dl\"\u003e''\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eprocess\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eenv\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eBASE_PATH\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eAdd an empty \u003ccode\u003e.nojekyll\u003c/code\u003e file in your \u003ccode\u003estatic\u003c/code\u003e folder to prevent GitHub Pages provided Jekyll configurations from managing the site.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--85ipWsLG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696772807659/1143e923-067a-4f8c-bf25-72291a131ac9.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--85ipWsLG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696772807659/1143e923-067a-4f8c-bf25-72291a131ac9.png\" alt=\"No-Jekyll\" loading=\"lazy\" width=\"490\" height=\"180\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eManually build and push your output directory to GitHub or use a tool like \u003ca href=\"https://dev.to/scc33/deploying-to-github-pages-using-gh-pages-2d95\"\u003egh-pages\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eConfigure GitHub pages to \u003ca href=\"https://blog.seancoughlin.me/building-a-personal-website-with-github-pages\"\u003edeploy your app with the repo settings\u003c/a\u003e.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"publishing-a-sveltekit-app-to-github-pages-4439","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t4j318s02keadvpawzqx.png","title":"Publishing a SvelteKit App to GitHub Pages","video":null,"video_code":null},{"created_at":"2023-10-08T14:20:40.668Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/publishing-a-sveltekit-app-to-github-pages","feed_source_url":"https://blog.seancoughlin.me/publishing-a-sveltekit-app-to-github-pages","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Publishing a SvelteKit App to GitHub Pages\npublished: false\ndate: 2023-10-08 14:08:35 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/publishing-a-sveltekit-app-to-github-pages\n---\n\n![](https://cdn.hashnode.com/res/hashnode/image/upload/v1696773973033/9dbab7b7-9cab-4942-b35d-908a6f3d6f75.png)\n\n### What is SvelteKit?\n\n[SvelteKit](https://kit.svelte.dev/docs/introduction) is a framework for building web applications that are built on top of Svelte, a modern JavaScript UI library. Unlike traditional frameworks that operate mainly on the client side, SvelteKit provides a unified approach to building apps that can be rendered on the server, statically generated at build time, or even rendered client-side. It comes with built-in features like routing, layouts, and server-side rendering (SSR), making it a comprehensive solution for building everything from small, static websites to large, complex web applications. With a focus on performance and a simplified developer experience, SvelteKit aims to streamline the process of building robust and scalable web apps.\n\n### Build a SvelteKit App!\n\nThis tutorial just spells out how to configure and deploy a SvelteKit web app to GitHub Pages. If you never have created a Svelte application before, the [docs](https://kit.svelte.dev/docs/creating-a-project) are great!\n\n### Configuring SvelteKit for GitHub Pages\n\n1. Build your application using Svelte and SvelteKit\n\n2. GitHub Pages is a static site host. Therefore, we need to install the [Svelte static site adapter](https://kit.svelte.dev/docs/adapters).\n\n```\n# NPM install\nnpm i -D @sveltejs/adapter-static\n# YARN install\nyarn add @sveltejs/adapter-static --dev\n\n```\n\n1. After installing the static adapter, at that to your `svelte.config.js`.\n\n```\nimport adapter from '@sveltejs/adapter-static';\nimport { vitePreprocess } from '@sveltejs/kit/vite';\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n    kit: {\n        appDir: 'app', // Required as the default is _app\n        adapter: adapter()\n    },\n    preprocess: vitePreprocess()\n};\nexport default config;\n\n```\n\n1. Add an app directory output to the `svelte.config.js`. The typical output is `_app` so I think something like `app` makes sense but this can be anything without an underscore. GitHub Pages cannot serve content from directories with special characters like underscores.\n\n2. If you are deployed to `https://[username].github.io` step 2 is all that is required for configuration. If you are deploying to `https://[username].github.io/your-repo-name` you will need to supply a `paths.base`. See the [SvelteKit docs](https://kit.svelte.dev/docs/adapter-static#github-pages) for more details.\n\n```\nimport adapter from '@sveltejs/adapter-static';\n\nconst dev = process.argv.includes('dev');\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n    kit: {\n        adapter: adapter(),\n        paths: {\n            base: dev ? '' : process.env.BASE_PATH,\n        }\n    }\n};\n\n```\n\n1. Add an empty `.nojekyll` file in your `static` folder to prevent GitHub Pages provided Jekyll configurations from managing the site.\n\n![No-Jekyll](https://cdn.hashnode.com/res/hashnode/image/upload/v1696772807659/1143e923-067a-4f8c-bf25-72291a131ac9.png)\n\n1. Manually build and push your output directory to GitHub or use a tool like [gh-pages](https://dev.to/scc33/deploying-to-github-pages-using-gh-pages-2d95).\n\n2. Configure GitHub pages to [deploy your app with the repo settings](https://blog.seancoughlin.me/building-a-personal-website-with-github-pages).","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"What is SvelteKit?   SvelteKit is a framework for building web applications that are built...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/publishing-a-sveltekit-app-to-github-pages-757-temp-slug-7590268","public_reactions_count":0,"processed_html":"\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TVEu9gIu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696773973033/9dbab7b7-9cab-4942-b35d-908a6f3d6f75.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TVEu9gIu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696773973033/9dbab7b7-9cab-4942-b35d-908a6f3d6f75.png\" alt=\"\" loading=\"lazy\" width=\"800\" height=\"192\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"what-is-sveltekit\" href=\"#what-is-sveltekit\"\u003e\n  \u003c/a\u003e\n  What is SvelteKit?\n\u003c/h3\u003e\n\n\u003cp\u003e\u003ca href=\"https://kit.svelte.dev/docs/introduction\"\u003eSvelteKit\u003c/a\u003e is a framework for building web applications that are built on top of Svelte, a modern JavaScript UI library. Unlike traditional frameworks that operate mainly on the client side, SvelteKit provides a unified approach to building apps that can be rendered on the server, statically generated at build time, or even rendered client-side. It comes with built-in features like routing, layouts, and server-side rendering (SSR), making it a comprehensive solution for building everything from small, static websites to large, complex web applications. With a focus on performance and a simplified developer experience, SvelteKit aims to streamline the process of building robust and scalable web apps.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"build-a-sveltekit-app\" href=\"#build-a-sveltekit-app\"\u003e\n  \u003c/a\u003e\n  Build a SvelteKit App!\n\u003c/h3\u003e\n\n\u003cp\u003eThis tutorial just spells out how to configure and deploy a SvelteKit web app to GitHub Pages. If you never have created a Svelte application before, the \u003ca href=\"https://kit.svelte.dev/docs/creating-a-project\"\u003edocs\u003c/a\u003e are great!\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"configuring-sveltekit-for-github-pages\" href=\"#configuring-sveltekit-for-github-pages\"\u003e\n  \u003c/a\u003e\n  Configuring SvelteKit for GitHub Pages\n\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eBuild your application using Svelte and SvelteKit\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eGitHub Pages is a static site host. Therefore, we need to install the \u003ca href=\"https://kit.svelte.dev/docs/adapters\"\u003eSvelte static site adapter\u003c/a\u003e.\u003cbr\u003e\n\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e# NPM install\nnpm i -D @sveltejs/adapter-static\n# YARN install\nyarn add @sveltejs/adapter-static --dev\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003col\u003e\n\u003cli\u003eAfter installing the static adapter, at that to your \u003ccode\u003esvelte.config.js\u003c/code\u003e.\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eimport adapter from '@sveltejs/adapter-static';\nimport { vitePreprocess } from '@sveltejs/kit/vite';\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n    kit: {\n        appDir: 'app', // Required as the default is _app\n        adapter: adapter()\n    },\n    preprocess: vitePreprocess()\n};\nexport default config;\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eAdd an app directory output to the \u003ccode\u003esvelte.config.js\u003c/code\u003e. The typical output is \u003ccode\u003e_app\u003c/code\u003e so I think something like \u003ccode\u003eapp\u003c/code\u003e makes sense but this can be anything without an underscore. GitHub Pages cannot serve content from directories with special characters like underscores.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eIf you are deployed to \u003ccode\u003ehttps://[username].github.io\u003c/code\u003e step 2 is all that is required for configuration. If you are deploying to \u003ccode\u003ehttps://[username].github.io/your-repo-name\u003c/code\u003e you will need to supply a \u003ccode\u003epaths.base\u003c/code\u003e. See the \u003ca href=\"https://kit.svelte.dev/docs/adapter-static#github-pages\"\u003eSvelteKit docs\u003c/a\u003e for more details.\u003cbr\u003e\n\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eimport adapter from '@sveltejs/adapter-static';\n\nconst dev = process.argv.includes('dev');\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n    kit: {\n        adapter: adapter(),\n        paths: {\n            base: dev ? '' : process.env.BASE_PATH,\n        }\n    }\n};\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003col\u003e\n\u003cli\u003eAdd an empty \u003ccode\u003e.nojekyll\u003c/code\u003e file in your \u003ccode\u003estatic\u003c/code\u003e folder to prevent GitHub Pages provided Jekyll configurations from managing the site.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--85ipWsLG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696772807659/1143e923-067a-4f8c-bf25-72291a131ac9.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--85ipWsLG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696772807659/1143e923-067a-4f8c-bf25-72291a131ac9.png\" alt=\"No-Jekyll\" loading=\"lazy\" width=\"490\" height=\"180\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eManually build and push your output directory to GitHub or use a tool like \u003ca href=\"https://dev.to/scc33/deploying-to-github-pages-using-gh-pages-2d95\"\u003egh-pages\u003c/a\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eConfigure GitHub pages to \u003ca href=\"https://blog.seancoughlin.me/building-a-personal-website-with-github-pages\"\u003edeploy your app with the repo settings\u003c/a\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"publishing-a-sveltekit-app-to-github-pages-757-temp-slug-7590268","social_image":null,"title":"Publishing a SvelteKit App to GitHub Pages","video":null,"video_code":null},{"created_at":"2023-10-08T14:20:40.725Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/publishing-a-sveltekit-app-to-github-pages","feed_source_url":"https://blog.seancoughlin.me/publishing-a-sveltekit-app-to-github-pages","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Publishing a SvelteKit App to GitHub Pages\npublished: false\ndate: 2023-10-08 14:08:35 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/publishing-a-sveltekit-app-to-github-pages\n---\n\n![](https://cdn.hashnode.com/res/hashnode/image/upload/v1696773973033/9dbab7b7-9cab-4942-b35d-908a6f3d6f75.png)\n\n### What is SvelteKit?\n\n[SvelteKit](https://kit.svelte.dev/docs/introduction) is a framework for building web applications that are built on top of Svelte, a modern JavaScript UI library. Unlike traditional frameworks that operate mainly on the client side, SvelteKit provides a unified approach to building apps that can be rendered on the server, statically generated at build time, or even rendered client-side. It comes with built-in features like routing, layouts, and server-side rendering (SSR), making it a comprehensive solution for building everything from small, static websites to large, complex web applications. With a focus on performance and a simplified developer experience, SvelteKit aims to streamline the process of building robust and scalable web apps.\n\n### Build a SvelteKit App!\n\nThis tutorial just spells out how to configure and deploy a SvelteKit web app to GitHub Pages. If you never have created a Svelte application before, the [docs](https://kit.svelte.dev/docs/creating-a-project) are great!\n\n### Configuring SvelteKit for GitHub Pages\n\n1. Build your application using Svelte and SvelteKit\n\n2. GitHub Pages is a static site host. Therefore, we need to install the [Svelte static site adapter](https://kit.svelte.dev/docs/adapters).\n\n```\n# NPM install\nnpm i -D @sveltejs/adapter-static\n# YARN install\nyarn add @sveltejs/adapter-static --dev\n\n```\n\n1. After installing the static adapter, at that to your `svelte.config.js`.\n\n```\nimport adapter from '@sveltejs/adapter-static';\nimport { vitePreprocess } from '@sveltejs/kit/vite';\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n    kit: {\n        appDir: 'app', // Required as the default is _app\n        adapter: adapter()\n    },\n    preprocess: vitePreprocess()\n};\nexport default config;\n\n```\n\n1. Add an app directory output to the `svelte.config.js`. The typical output is `_app` so I think something like `app` makes sense but this can be anything without an underscore. GitHub Pages cannot serve content from directories with special characters like underscores.\n\n2. If you are deployed to `https://[username].github.io` step 2 is all that is required for configuration. If you are deploying to `https://[username].github.io/your-repo-name` you will need to supply a `paths.base`. See the [SvelteKit docs](https://kit.svelte.dev/docs/adapter-static#github-pages) for more details.\n\n```\nimport adapter from '@sveltejs/adapter-static';\n\nconst dev = process.argv.includes('dev');\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n    kit: {\n        adapter: adapter(),\n        paths: {\n            base: dev ? '' : process.env.BASE_PATH,\n        }\n    }\n};\n\n```\n\n1. Add an empty `.nojekyll` file in your `static` folder to prevent GitHub Pages provided Jekyll configurations from managing the site.\n\n![No-Jekyll](https://cdn.hashnode.com/res/hashnode/image/upload/v1696772807659/1143e923-067a-4f8c-bf25-72291a131ac9.png)\n\n1. Manually build and push your output directory to GitHub or use a tool like [gh-pages](https://dev.to/scc33/deploying-to-github-pages-using-gh-pages-2d95).\n\n2. Configure GitHub pages to [deploy your app with the repo settings](https://blog.seancoughlin.me/building-a-personal-website-with-github-pages).","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"What is SvelteKit?   SvelteKit is a framework for building web applications that are built...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/publishing-a-sveltekit-app-to-github-pages-3p53-temp-slug-7354716","public_reactions_count":0,"processed_html":"\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TVEu9gIu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696773973033/9dbab7b7-9cab-4942-b35d-908a6f3d6f75.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TVEu9gIu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696773973033/9dbab7b7-9cab-4942-b35d-908a6f3d6f75.png\" alt=\"\" loading=\"lazy\" width=\"800\" height=\"192\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"what-is-sveltekit\" href=\"#what-is-sveltekit\"\u003e\n  \u003c/a\u003e\n  What is SvelteKit?\n\u003c/h3\u003e\n\n\u003cp\u003e\u003ca href=\"https://kit.svelte.dev/docs/introduction\"\u003eSvelteKit\u003c/a\u003e is a framework for building web applications that are built on top of Svelte, a modern JavaScript UI library. Unlike traditional frameworks that operate mainly on the client side, SvelteKit provides a unified approach to building apps that can be rendered on the server, statically generated at build time, or even rendered client-side. It comes with built-in features like routing, layouts, and server-side rendering (SSR), making it a comprehensive solution for building everything from small, static websites to large, complex web applications. With a focus on performance and a simplified developer experience, SvelteKit aims to streamline the process of building robust and scalable web apps.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"build-a-sveltekit-app\" href=\"#build-a-sveltekit-app\"\u003e\n  \u003c/a\u003e\n  Build a SvelteKit App!\n\u003c/h3\u003e\n\n\u003cp\u003eThis tutorial just spells out how to configure and deploy a SvelteKit web app to GitHub Pages. If you never have created a Svelte application before, the \u003ca href=\"https://kit.svelte.dev/docs/creating-a-project\"\u003edocs\u003c/a\u003e are great!\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"configuring-sveltekit-for-github-pages\" href=\"#configuring-sveltekit-for-github-pages\"\u003e\n  \u003c/a\u003e\n  Configuring SvelteKit for GitHub Pages\n\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eBuild your application using Svelte and SvelteKit\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eGitHub Pages is a static site host. Therefore, we need to install the \u003ca href=\"https://kit.svelte.dev/docs/adapters\"\u003eSvelte static site adapter\u003c/a\u003e.\u003cbr\u003e\n\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e# NPM install\nnpm i -D @sveltejs/adapter-static\n# YARN install\nyarn add @sveltejs/adapter-static --dev\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003col\u003e\n\u003cli\u003eAfter installing the static adapter, at that to your \u003ccode\u003esvelte.config.js\u003c/code\u003e.\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eimport adapter from '@sveltejs/adapter-static';\nimport { vitePreprocess } from '@sveltejs/kit/vite';\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n    kit: {\n        appDir: 'app', // Required as the default is _app\n        adapter: adapter()\n    },\n    preprocess: vitePreprocess()\n};\nexport default config;\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eAdd an app directory output to the \u003ccode\u003esvelte.config.js\u003c/code\u003e. The typical output is \u003ccode\u003e_app\u003c/code\u003e so I think something like \u003ccode\u003eapp\u003c/code\u003e makes sense but this can be anything without an underscore. GitHub Pages cannot serve content from directories with special characters like underscores.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eIf you are deployed to \u003ccode\u003ehttps://[username].github.io\u003c/code\u003e step 2 is all that is required for configuration. If you are deploying to \u003ccode\u003ehttps://[username].github.io/your-repo-name\u003c/code\u003e you will need to supply a \u003ccode\u003epaths.base\u003c/code\u003e. See the \u003ca href=\"https://kit.svelte.dev/docs/adapter-static#github-pages\"\u003eSvelteKit docs\u003c/a\u003e for more details.\u003cbr\u003e\n\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eimport adapter from '@sveltejs/adapter-static';\n\nconst dev = process.argv.includes('dev');\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n    kit: {\n        adapter: adapter(),\n        paths: {\n            base: dev ? '' : process.env.BASE_PATH,\n        }\n    }\n};\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003col\u003e\n\u003cli\u003eAdd an empty \u003ccode\u003e.nojekyll\u003c/code\u003e file in your \u003ccode\u003estatic\u003c/code\u003e folder to prevent GitHub Pages provided Jekyll configurations from managing the site.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--85ipWsLG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696772807659/1143e923-067a-4f8c-bf25-72291a131ac9.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--85ipWsLG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1696772807659/1143e923-067a-4f8c-bf25-72291a131ac9.png\" alt=\"No-Jekyll\" loading=\"lazy\" width=\"490\" height=\"180\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eManually build and push your output directory to GitHub or use a tool like \u003ca href=\"https://dev.to/scc33/deploying-to-github-pages-using-gh-pages-2d95\"\u003egh-pages\u003c/a\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eConfigure GitHub pages to \u003ca href=\"https://blog.seancoughlin.me/building-a-personal-website-with-github-pages\"\u003edeploy your app with the repo settings\u003c/a\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"publishing-a-sveltekit-app-to-github-pages-3p53-temp-slug-7354716","social_image":null,"title":"Publishing a SvelteKit App to GitHub Pages","video":null,"video_code":null},{"created_at":"2023-11-22T18:20:41.481Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/maximizing-web-development-efficiency-a-comprehensive-guide-to-vite","feed_source_url":"https://blog.seancoughlin.me/maximizing-web-development-efficiency-a-comprehensive-guide-to-vite","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Maximizing Web Development Efficiency: A Comprehensive Guide to Vite\npublished: false\ndate: 2023-11-22 17:39:13 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/maximizing-web-development-efficiency-a-comprehensive-guide-to-vite\n---\n\nAs web development evolves, tools like [Vite](https://vitejs.dev) are increasingly in the spotlight for their potential to streamline workflows. This post offers a detailed analysis of Vite's capabilities, considering its applicability in various web development scenarios.\n\n## **Development Speed and Efficiency**\n\n**Key Feature** : Vite's use of native ES modules bypasses traditional bundling during development, leading to faster server start times.\n\n**Context** : This feature can significantly accelerate development cycles, particularly in projects that are heavily reliant on [JavaScript modules](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules). However, it's important to understand how this approach meshes with other aspects of your development stack, such as compatibility with older browsers or integration with legacy systems.\n\n**Further Reading** : The Vite documentation provides a comprehensive overview of this feature: [Vite Features](https://vitejs.dev/guide/features.html)\n\n## **Hot Module Replacement (HMR)**\n\n**Key Feature** : Vite's HMR updates modules in real-time during development without full-page reloads.\n\n**Context** : While this can greatly enhance development efficiency, it requires a well-structured codebase to fully exploit. Developers may need to adjust their coding practices to accommodate this feature, especially in large or complex projects.\n\n**Further Reading** : Explore more on HMR in Vite's documentation: [Hot Module Replacement](https://vitejs.dev/guide/features.html#hot-module-replacement)\n\n## **Framework Support**\n\n**Key Feature** : Out-of-the-box support for Vue, React, Svelte, and others.\n\n**Context** : This built-in compatibility is a boon for projects utilizing these frameworks. However, if your project uses other technologies, you may need to explore additional plugins or configurations.\n\n**Further Reading** : For detailed guidance, check out [the official plugins](https://vitejs.dev/plugins/).\n\n## **Production Builds**\n\n**Key Feature** : Vite utilizes Rollup for optimized production builds, incorporating features like code splitting and lazy loading.\n\n**Context** : These optimizations can significantly enhance performance. Still, they should be customized according to the project's specific requirements to avoid unnecessary complexity or bloat.\n\n**Further Reading** : The build guide in Vite's documentation provides insights: [Building for Production](https://vitejs.dev/guide/build.html).\n\n## **Plugin Ecosystem**\n\n**Key Feature** : A diverse range of plugins extends Vite's core functionalities.\n\n**Context** : While this offers flexibility, it's crucial to select plugins that align with your project's goals. Overuse of plugins can lead to maintenance challenges and increased complexity.\n\n**Further Reading** : Browse through available plugins and their documentation on the Vite plugin GitHub repository or [the official plugins list](https://vitejs.dev/plugins/). [Awesome Vite](https://github.com/vitejs/awesome-vite) is another GitHub Repo with tons of great Vite resources.\n\n## **Modern Standards and Configuration**\n\n**Key Feature** : Alignment with modern JavaScript standards and a straightforward configuration system.\n\n**Context** : Vites modern approach ensures future compatibility but may require upskilling for teams accustomed to older practices. Its configuration, while user-friendly, should be fine-tuned for optimal performance in larger, more complex projects.\n\n**Further Reading** : For configuration options and best practices, refer to [Configuring Vite](https://vitejs.dev/config/).\n\n## **Conclusion**\n\nVite offers an intriguing blend of speed, modernity, and flexibility, making it a valuable tool in the web developer's arsenal. Its full potential is best realized when aligned with project-specific requirements and modern web practices. As with any tool, a nuanced understanding and strategic implementation are key to leveraging its strengths effectively.\n\nIn our continuous journey as web developers, it's essential to critically evaluate tools like Vite, integrating them thoughtfully into our development practices to create efficient, scalable, and future-proof applications.\n\nCheck out more with [Fireship](https://www.youtube.com/@Fireship). This is by far the best coding YouTube channel in my opinion.\n\n[https://youtu.be/KCrXgy8qtjM?si=Hb0GFdGmev5LV4PO](https://youtu.be/KCrXgy8qtjM?si=Hb0GFdGmev5LV4PO)","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"As web development evolves, tools like Vite are increasingly in the spotlight for their potential to...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/maximizing-web-development-efficiency-a-comprehensive-guide-to-vite-2lg1-temp-slug-2923514","public_reactions_count":0,"processed_html":"\u003cp\u003eAs web development evolves, tools like \u003ca href=\"https://vitejs.dev\"\u003eVite\u003c/a\u003e are increasingly in the spotlight for their potential to streamline workflows. This post offers a detailed analysis of Vite's capabilities, considering its applicability in various web development scenarios.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"development-speed-and-efficiency\" href=\"#development-speed-and-efficiency\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eDevelopment Speed and Efficiency\u003c/strong\u003e\n\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003eKey Feature\u003c/strong\u003e : Vite's use of native ES modules bypasses traditional bundling during development, leading to faster server start times.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eContext\u003c/strong\u003e : This feature can significantly accelerate development cycles, particularly in projects that are heavily reliant on \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules\"\u003eJavaScript modules\u003c/a\u003e. However, it's important to understand how this approach meshes with other aspects of your development stack, such as compatibility with older browsers or integration with legacy systems.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eFurther Reading\u003c/strong\u003e : The Vite documentation provides a comprehensive overview of this feature: \u003ca href=\"https://vitejs.dev/guide/features.html\"\u003eVite Features\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"hot-module-replacement-hmr\" href=\"#hot-module-replacement-hmr\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eHot Module Replacement (HMR)\u003c/strong\u003e\n\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003eKey Feature\u003c/strong\u003e : Vite's HMR updates modules in real-time during development without full-page reloads.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eContext\u003c/strong\u003e : While this can greatly enhance development efficiency, it requires a well-structured codebase to fully exploit. Developers may need to adjust their coding practices to accommodate this feature, especially in large or complex projects.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eFurther Reading\u003c/strong\u003e : Explore more on HMR in Vite's documentation: \u003ca href=\"https://vitejs.dev/guide/features.html#hot-module-replacement\"\u003eHot Module Replacement\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"framework-support\" href=\"#framework-support\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eFramework Support\u003c/strong\u003e\n\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003eKey Feature\u003c/strong\u003e : Out-of-the-box support for Vue, React, Svelte, and others.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eContext\u003c/strong\u003e : This built-in compatibility is a boon for projects utilizing these frameworks. However, if your project uses other technologies, you may need to explore additional plugins or configurations.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eFurther Reading\u003c/strong\u003e : For detailed guidance, check out \u003ca href=\"https://vitejs.dev/plugins/\"\u003ethe official plugins\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"production-builds\" href=\"#production-builds\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eProduction Builds\u003c/strong\u003e\n\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003eKey Feature\u003c/strong\u003e : Vite utilizes Rollup for optimized production builds, incorporating features like code splitting and lazy loading.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eContext\u003c/strong\u003e : These optimizations can significantly enhance performance. Still, they should be customized according to the project's specific requirements to avoid unnecessary complexity or bloat.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eFurther Reading\u003c/strong\u003e : The build guide in Vite's documentation provides insights: \u003ca href=\"https://vitejs.dev/guide/build.html\"\u003eBuilding for Production\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"plugin-ecosystem\" href=\"#plugin-ecosystem\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003ePlugin Ecosystem\u003c/strong\u003e\n\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003eKey Feature\u003c/strong\u003e : A diverse range of plugins extends Vite's core functionalities.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eContext\u003c/strong\u003e : While this offers flexibility, it's crucial to select plugins that align with your project's goals. Overuse of plugins can lead to maintenance challenges and increased complexity.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eFurther Reading\u003c/strong\u003e : Browse through available plugins and their documentation on the Vite plugin GitHub repository or \u003ca href=\"https://vitejs.dev/plugins/\"\u003ethe official plugins list\u003c/a\u003e. \u003ca href=\"https://github.com/vitejs/awesome-vite\"\u003eAwesome Vite\u003c/a\u003e is another GitHub Repo with tons of great Vite resources.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"modern-standards-and-configuration\" href=\"#modern-standards-and-configuration\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eModern Standards and Configuration\u003c/strong\u003e\n\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003eKey Feature\u003c/strong\u003e : Alignment with modern JavaScript standards and a straightforward configuration system.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eContext\u003c/strong\u003e : Vites modern approach ensures future compatibility but may require upskilling for teams accustomed to older practices. Its configuration, while user-friendly, should be fine-tuned for optimal performance in larger, more complex projects.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eFurther Reading\u003c/strong\u003e : For configuration options and best practices, refer to \u003ca href=\"https://vitejs.dev/config/\"\u003eConfiguring Vite\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eConclusion\u003c/strong\u003e\n\u003c/h2\u003e\n\n\u003cp\u003eVite offers an intriguing blend of speed, modernity, and flexibility, making it a valuable tool in the web developer's arsenal. Its full potential is best realized when aligned with project-specific requirements and modern web practices. As with any tool, a nuanced understanding and strategic implementation are key to leveraging its strengths effectively.\u003c/p\u003e\n\n\u003cp\u003eIn our continuous journey as web developers, it's essential to critically evaluate tools like Vite, integrating them thoughtfully into our development practices to create efficient, scalable, and future-proof applications.\u003c/p\u003e\n\n\u003cp\u003eCheck out more with \u003ca href=\"https://www.youtube.com/@Fireship\"\u003eFireship\u003c/a\u003e. This is by far the best coding YouTube channel in my opinion.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://youtu.be/KCrXgy8qtjM?si=Hb0GFdGmev5LV4PO\"\u003ehttps://youtu.be/KCrXgy8qtjM?si=Hb0GFdGmev5LV4PO\u003c/a\u003e\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"maximizing-web-development-efficiency-a-comprehensive-guide-to-vite-2lg1-temp-slug-2923514","social_image":null,"title":"Maximizing Web Development Efficiency: A Comprehensive Guide to Vite","video":null,"video_code":null},{"created_at":"2023-11-22T18:20:41.725Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/vite-vs-create-react-app","feed_source_url":"https://blog.seancoughlin.me/vite-vs-create-react-app","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Vite vs. Create React App: Navigating the Best Tools for Modern React Web Development\npublished: false\ndate: 2023-11-22 17:53:42 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/vite-vs-create-react-app\n---\n\nThe web development ecosystem is constantly evolving, with tools emerging to enhance efficiency and ease of use. Two such tools that have gained significant attention are [Vite](https://vitejs.dev) and [Create React App (CRA)](https://create-react-app.dev). While Vite is known for its speed and modern approach, CRA, historically a go-to solution for [React](https://react.dev) applications, has seen a decline in active maintenance from Facebook. This post compares Vite and CRA, discussing their advantages and disadvantages to help developers make informed decisions.\n\n## Vite: Speed and Modernity\n\nVite, a newer entrant in the space, offers a fresh approach to front-end tooling. Here are its key advantages and some considerations:\n\n### Advantages of Vite:\n\n1. **Speed** : Utilizes native ES modules for faster server start and [hot module replacement](https://vitejs.dev/guide/features#hot-module-replacement).\n\n2. **Framework Agnostic** : While optimized for Vue.js ([Vite was created by the creator of Vue](https://en.wikipedia.org/wiki/Vite_(software))), it also supports React, Svelte, and more.\n\n3. **Modern Tooling** : Leverages [Rollup](https://rollupjs.org) for production builds, offering optimized bundling.\n\n4. **Plugin Ecosystem** : A robust and growing [selection of plugins](https://vitejs.dev/plugins/) for extended functionality.\n\n5. **Out-of-the-Box TypeScript Support** : Simplifies the use of TypeScript in projects.\n\n6. **Optimized Development Experience** : Offers a more responsive development environment, particularly for larger projects.\n\n### Considerations for Vite:\n\n- **Learning Curve** : Requires familiarization, especially for those accustomed to Webpack-based tools.\n\n- **Community Size** : While growing, its community is currently smaller than CRAs.\n\n![](https://cdn.hashnode.com/res/hashnode/image/upload/v1700675274434/6e395049-2b72-443c-9be3-1ba5ba054e30.png)\n\n## Create React App: The Established Standard\n\nCRA has been a staple in React development, offering a straightforward setup for React projects. Despite its reduced maintenance from Facebook, it remains a popular choice. Heres why, along with some drawbacks:\n\n### Advantages of CRA:\n\n1. **Simplicity** : Easy setup for React applications with minimal configuration.\n\n2. **Large Community** : A vast ecosystem of users and resources for support and troubleshooting.\n\n3. **Stability** : A well-tested, stable environment for React development.\n\n4. **Preconfigured Webpack** : Offers a comprehensive build setup out of the box.\n\n### Considerations for CRA:\n\n- **Performance** : Can be slower in development mode, especially for larger projects.\n\n- **Flexibility** : Customization can be challenging due to its pre-configured nature.\n\n- **Maintenance** : Reduced active development and maintenance from Facebook. The last update to [react-scripts](https://www.npmjs.com/package/react-scripts) was over two years ago.\n\n![](https://cdn.hashnode.com/res/hashnode/image/upload/v1700675399973/7b131253-2be2-4f86-857c-77937f46ffd7.png)\n\n## Comparative Overview\n\nHeres a quick comparison table highlighting key differences:\n\n| Feature | Vite | Create React App |\n| Startup Speed | Fast | Slow |\n| HMR Efficiency | High | Moderate |\n| Framework Support | Multiple | React-focused |\n| Customization | Flexible | Limited |\n| Community | Growing | Established |\n| Maintenance | Actively developed | Reduced maintenance |\n\n## Conclusion\n\nChoosing between Vite and CRA depends on specific project requirements and personal or team familiarity with the tools. Vite is an excellent choice for those seeking speed and a modern toolset, particularly for larger, more complex projects or when working with multiple frameworks. CRA, on the other hand, remains a reliable option for those prioritizing simplicity and stability in React-only projects, despite its reduced active maintenance.\n\nAs the web development landscape continues to evolve, developers must stay informed about the tools available, weighing their pros and cons in the context of their unique development needs.\n\n* * *\n\nFor more detailed information on Vite and Create React App, you can refer to their official documentation:\n\n- [Vite Documentation](https://vitejs.dev/)\n\n- [Create React App Documentation](https://create-react-app.dev/)","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"The web development ecosystem is constantly evolving, with tools emerging to enhance efficiency and...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/vite-vs-create-react-app-navigating-the-best-tools-for-modern-react-web-development-182g-temp-slug-5555344","public_reactions_count":0,"processed_html":"\u003cp\u003eThe web development ecosystem is constantly evolving, with tools emerging to enhance efficiency and ease of use. Two such tools that have gained significant attention are \u003ca href=\"https://vitejs.dev\"\u003eVite\u003c/a\u003e and \u003ca href=\"https://create-react-app.dev\"\u003eCreate React App (CRA)\u003c/a\u003e. While Vite is known for its speed and modern approach, CRA, historically a go-to solution for \u003ca href=\"https://react.dev\"\u003eReact\u003c/a\u003e applications, has seen a decline in active maintenance from Facebook. This post compares Vite and CRA, discussing their advantages and disadvantages to help developers make informed decisions.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"vite-speed-and-modernity\" href=\"#vite-speed-and-modernity\"\u003e\n  \u003c/a\u003e\n  Vite: Speed and Modernity\n\u003c/h2\u003e\n\n\u003cp\u003eVite, a newer entrant in the space, offers a fresh approach to front-end tooling. Here are its key advantages and some considerations:\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"advantages-of-vite\" href=\"#advantages-of-vite\"\u003e\n  \u003c/a\u003e\n  Advantages of Vite:\n\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSpeed\u003c/strong\u003e : Utilizes native ES modules for faster server start and \u003ca href=\"https://vitejs.dev/guide/features#hot-module-replacement\"\u003ehot module replacement\u003c/a\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eFramework Agnostic\u003c/strong\u003e : While optimized for Vue.js (\u003ca href=\"https://en.wikipedia.org/wiki/Vite_(software)\"\u003eVite was created by the creator of Vue\u003c/a\u003e), it also supports React, Svelte, and more.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eModern Tooling\u003c/strong\u003e : Leverages \u003ca href=\"https://rollupjs.org\"\u003eRollup\u003c/a\u003e for production builds, offering optimized bundling.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003ePlugin Ecosystem\u003c/strong\u003e : A robust and growing \u003ca href=\"https://vitejs.dev/plugins/\"\u003eselection of plugins\u003c/a\u003e for extended functionality.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eOut-of-the-Box TypeScript Support\u003c/strong\u003e : Simplifies the use of TypeScript in projects.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eOptimized Development Experience\u003c/strong\u003e : Offers a more responsive development environment, particularly for larger projects.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"considerations-for-vite\" href=\"#considerations-for-vite\"\u003e\n  \u003c/a\u003e\n  Considerations for Vite:\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eLearning Curve\u003c/strong\u003e : Requires familiarization, especially for those accustomed to Webpack-based tools.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eCommunity Size\u003c/strong\u003e : While growing, its community is currently smaller than CRAs.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--uR5W0x80--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700675274434/6e395049-2b72-443c-9be3-1ba5ba054e30.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--uR5W0x80--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700675274434/6e395049-2b72-443c-9be3-1ba5ba054e30.png\" alt=\"\" loading=\"lazy\" width=\"762\" height=\"1462\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"create-react-app-the-established-standard\" href=\"#create-react-app-the-established-standard\"\u003e\n  \u003c/a\u003e\n  Create React App: The Established Standard\n\u003c/h2\u003e\n\n\u003cp\u003eCRA has been a staple in React development, offering a straightforward setup for React projects. Despite its reduced maintenance from Facebook, it remains a popular choice. Heres why, along with some drawbacks:\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"advantages-of-cra\" href=\"#advantages-of-cra\"\u003e\n  \u003c/a\u003e\n  Advantages of CRA:\n\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSimplicity\u003c/strong\u003e : Easy setup for React applications with minimal configuration.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eLarge Community\u003c/strong\u003e : A vast ecosystem of users and resources for support and troubleshooting.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eStability\u003c/strong\u003e : A well-tested, stable environment for React development.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003ePreconfigured Webpack\u003c/strong\u003e : Offers a comprehensive build setup out of the box.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"considerations-for-cra\" href=\"#considerations-for-cra\"\u003e\n  \u003c/a\u003e\n  Considerations for CRA:\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003ePerformance\u003c/strong\u003e : Can be slower in development mode, especially for larger projects.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eFlexibility\u003c/strong\u003e : Customization can be challenging due to its pre-configured nature.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eMaintenance\u003c/strong\u003e : Reduced active development and maintenance from Facebook. The last update to \u003ca href=\"https://www.npmjs.com/package/react-scripts\"\u003ereact-scripts\u003c/a\u003e was over two years ago.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GEFvR-m9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700675399973/7b131253-2be2-4f86-857c-77937f46ffd7.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GEFvR-m9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700675399973/7b131253-2be2-4f86-857c-77937f46ffd7.png\" alt=\"\" loading=\"lazy\" width=\"774\" height=\"1568\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"comparative-overview\" href=\"#comparative-overview\"\u003e\n  \u003c/a\u003e\n  Comparative Overview\n\u003c/h2\u003e\n\n\u003cp\u003eHeres a quick comparison table highlighting key differences:\u003c/p\u003e\n\n\u003cp\u003e| Feature | Vite | Create React App |\u003cbr\u003e\n| Startup Speed | Fast | Slow |\u003cbr\u003e\n| HMR Efficiency | High | Moderate |\u003cbr\u003e\n| Framework Support | Multiple | React-focused |\u003cbr\u003e\n| Customization | Flexible | Limited |\u003cbr\u003e\n| Community | Growing | Established |\u003cbr\u003e\n| Maintenance | Actively developed | Reduced maintenance |\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eChoosing between Vite and CRA depends on specific project requirements and personal or team familiarity with the tools. Vite is an excellent choice for those seeking speed and a modern toolset, particularly for larger, more complex projects or when working with multiple frameworks. CRA, on the other hand, remains a reliable option for those prioritizing simplicity and stability in React-only projects, despite its reduced active maintenance.\u003c/p\u003e\n\n\u003cp\u003eAs the web development landscape continues to evolve, developers must stay informed about the tools available, weighing their pros and cons in the context of their unique development needs.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eFor more detailed information on Vite and Create React App, you can refer to their official documentation:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://vitejs.dev/\"\u003eVite Documentation\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://create-react-app.dev/\"\u003eCreate React App Documentation\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"vite-vs-create-react-app-navigating-the-best-tools-for-modern-react-web-development-182g-temp-slug-5555344","social_image":null,"title":"Vite vs. Create React App: Navigating the Best Tools for Modern React Web Development","video":null,"video_code":null},{"created_at":"2023-11-22T23:20:38.427Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/vitest-vs-jest-the-new-javascript-testing-framework","feed_source_url":"https://blog.seancoughlin.me/vitest-vs-jest-the-new-javascript-testing-framework","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Vitest vs. Jest: The New JavaScript Testing Framework\npublished: false\ndate: 2023-11-22 23:12:21 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/vitest-vs-jest-the-new-javascript-testing-framework\n---\n\nIn the ever-evolving world of JavaScript development, choosing the right testing framework is crucial. Two notable contenders in this arena are [Vitest](https://vitest.dev) and [Jest](https://jestjs.io). While Jest has been a long-standing favorite among developers, Vitest emerges as a compelling alternative, powered by the modern build tool, Vite. This article provides a thorough comparison of Vitest and Jest, examining their features, advantages, and limitations.\n\n## Vitest: The Newcomer Powered by Vite\n\nVitest is a testing framework designed to work seamlessly with [Vite](https://vitejs.dev). It leverages Vite's capabilities, such as native ES module support and fast Hot Module Replacement, to offer a testing environment that aligns with modern JavaScript practices.\n\n### Key [Features of Vitest](https://vitest.dev/guide/features.html):\n\n- **Speed** : Utilizes Vite's infrastructure for faster test execution.\n\n- **ES Module Support** : Native handling of [ES modules](https://hacks.mozilla.org/2018/03/es-modules-a-cartoon-deep-dive/).\n\n- **TypeScript Integration** : Seamless integration with TypeScript projects.\n\n- **Built-In Utilities** : Comes with built-in mocking and assertion libraries.\n\n- **Familiar Syntax** : Offers a Jest-like API for ease of transition.\n\n- **Real-Time Feedback** : Watch mode for instant test reruns on code changes.\n\n### Pros:\n\n- **Performance** : Faster test runs, especially beneficial for large test suites.\n\n- **Modern Tooling** : Aligns with the latest JavaScript features and practices.\n\n- **Minimal Configuration** : Simplified setup process.\n\n### Cons:\n\n- **Community and Ecosystem** : Smaller community and ecosystem compared to Jest.\n\n- **Maturity** : Being newer, it may lack some features found in more established frameworks.\n\n![](https://cdn.hashnode.com/res/hashnode/image/upload/v1700694365995/f25b6289-fbd8-48a5-82f1-857c80b81a3c.png)\n\n### Documentation and Resources:\n\n- [Vitest Documentation](https://vitest.dev/)\n\n### Example Vitest Code Snippet:\n\n```\n// note the vitest import\n// this is required by default but can be turned off with configs\nimport { describe, it, expect } from 'vitest'; \n\ndescribe('sample test', () =\u003e {\n  it('should return true', () =\u003e {\n    expect(true).toBe(true);\n  });\n});\n\n```\n\n## Jest: The Established Standard\n\n**Jest** is a widely-used testing framework [formerly developed by Facebook](https://engineering.fb.com/2022/05/11/open-source/jest-openjs-foundation/), known for its simplicity and comprehensive feature set.\n\n### Key Features of Jest:\n\n- **Zero Configuration** : Works out of the box for most JavaScript projects.\n\n- **Mocking Capabilities** : Extensive support for [mocking functions](https://jestjs.io/docs/mock-functions) and modules.\n\n- **Snapshot Testing** : Offers snapshot testing to capture component states.\n\n- **Large Community** : Backed by a large community and extensive documentation.\n\n### Pros:\n\n- **Ecosystem and Support** : A vast array of plugins and integrations.\n\n- **Maturity** : Well-established with a proven track record.\n\n- **Documentation and Resources** : Extensive resources for learning and troubleshooting.\n\n### Cons:\n\n- **Performance** : Can be slower, particularly with large test suites.\n\n- **Modern JavaScript Support** : Might require additional configuration for ES modules.\n\n- Not really too many cons. Jest is a very solid, robust option. It can be a little difficult to configure with [Vite](https://dev.to/scc33/maximizing-web-development-efficiency-a-comprehensive-guide-to-vite-2lg1-temp-slug-2923514) though.\n\n### Documentation and Resources:\n\n- [Jest Documentation](https://jestjs.io/)\n\n### Example Code Snippet:\n\n```\n// notice the simplicity and how it just works out of the box\nimport { sum } from './math';\n\ntest('adds 1 + 2 to equal 3', () =\u003e {\n  expect(sum(1, 2)).toBe(3);\n});\n\n```\n\n## Comparative Overview\n\n| Feature | Vitest | Jest |\n| Speed | Faster | Slower |\n| ES Module Support | Native | Requires Configuration |\n| Community | Growing | Established |\n| Configuration | Minimal | Zero Config |\n| TypeScript Support | Native | Good Support |\n| Snapshot Testing | Supported | Supported |\n\n## Conclusion\n\nThe choice between Vitest and Jest depends largely on your project requirements and existing development stack. Vitest offers a modern and fast approach, making it an attractive option for projects using Vite or requiring native ES module support. Jest, with its maturity and extensive ecosystem, remains a reliable choice for a wide range of JavaScript projects.\n\nAs a software engineer, understanding the strengths and limitations of each framework is key to making an informed decision that aligns with your project's needs and goals. Both Vitest and Jest offer unique advantages, and the choice often boils down to specific project requirements and personal preferences.\n\n* * *\n\nFor a deeper dive into each framework, refer to their respective documentation, which offers comprehensive guides and API references to assist in your decision-making process.\n\n- [Jest documentation](https://jestjs.io/docs/getting-started)\n\n- [Vitest documentation](https://vitest.dev/guide/)\n\n* * *\n\nSide note: the cover art was created using [DALLE](https://openai.com/dall-e-2) and wow. Personally, I am blown away at some of the artwork that generative AI can create.","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"In the ever-evolving world of JavaScript development, choosing the right testing framework is...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/vitest-vs-jest-the-new-javascript-testing-framework-42d6-temp-slug-5654970","public_reactions_count":0,"processed_html":"\u003cp\u003eIn the ever-evolving world of JavaScript development, choosing the right testing framework is crucial. Two notable contenders in this arena are \u003ca href=\"https://vitest.dev\"\u003eVitest\u003c/a\u003e and \u003ca href=\"https://jestjs.io\"\u003eJest\u003c/a\u003e. While Jest has been a long-standing favorite among developers, Vitest emerges as a compelling alternative, powered by the modern build tool, Vite. This article provides a thorough comparison of Vitest and Jest, examining their features, advantages, and limitations.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"vitest-the-newcomer-powered-by-vite\" href=\"#vitest-the-newcomer-powered-by-vite\"\u003e\n  \u003c/a\u003e\n  Vitest: The Newcomer Powered by Vite\n\u003c/h2\u003e\n\n\u003cp\u003eVitest is a testing framework designed to work seamlessly with \u003ca href=\"https://vitejs.dev\"\u003eVite\u003c/a\u003e. It leverages Vite's capabilities, such as native ES module support and fast Hot Module Replacement, to offer a testing environment that aligns with modern JavaScript practices.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"key-features-of-vitest\" href=\"#key-features-of-vitest\"\u003e\n  \u003c/a\u003e\n  Key \u003ca href=\"https://vitest.dev/guide/features.html\"\u003eFeatures of Vitest\u003c/a\u003e:\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSpeed\u003c/strong\u003e : Utilizes Vite's infrastructure for faster test execution.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eES Module Support\u003c/strong\u003e : Native handling of \u003ca href=\"https://hacks.mozilla.org/2018/03/es-modules-a-cartoon-deep-dive/\"\u003eES modules\u003c/a\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eTypeScript Integration\u003c/strong\u003e : Seamless integration with TypeScript projects.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eBuilt-In Utilities\u003c/strong\u003e : Comes with built-in mocking and assertion libraries.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eFamiliar Syntax\u003c/strong\u003e : Offers a Jest-like API for ease of transition.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eReal-Time Feedback\u003c/strong\u003e : Watch mode for instant test reruns on code changes.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"pros\" href=\"#pros\"\u003e\n  \u003c/a\u003e\n  Pros:\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003ePerformance\u003c/strong\u003e : Faster test runs, especially beneficial for large test suites.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eModern Tooling\u003c/strong\u003e : Aligns with the latest JavaScript features and practices.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eMinimal Configuration\u003c/strong\u003e : Simplified setup process.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"cons\" href=\"#cons\"\u003e\n  \u003c/a\u003e\n  Cons:\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eCommunity and Ecosystem\u003c/strong\u003e : Smaller community and ecosystem compared to Jest.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eMaturity\u003c/strong\u003e : Being newer, it may lack some features found in more established frameworks.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Vqq9Jprj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700694365995/f25b6289-fbd8-48a5-82f1-857c80b81a3c.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Vqq9Jprj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700694365995/f25b6289-fbd8-48a5-82f1-857c80b81a3c.png\" alt=\"\" loading=\"lazy\" width=\"752\" height=\"1242\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"documentation-and-resources\" href=\"#documentation-and-resources\"\u003e\n  \u003c/a\u003e\n  Documentation and Resources:\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://vitest.dev/\"\u003eVitest Documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"example-vitest-code-snippet\" href=\"#example-vitest-code-snippet\"\u003e\n  \u003c/a\u003e\n  Example Vitest Code Snippet:\n\u003c/h3\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e// note the vitest import\n// this is required by default but can be turned off with configs\nimport { describe, it, expect } from 'vitest'; \n\ndescribe('sample test', () =\u0026gt; {\n  it('should return true', () =\u0026gt; {\n    expect(true).toBe(true);\n  });\n});\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"jest-the-established-standard\" href=\"#jest-the-established-standard\"\u003e\n  \u003c/a\u003e\n  Jest: The Established Standard\n\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003eJest\u003c/strong\u003e is a widely-used testing framework \u003ca href=\"https://engineering.fb.com/2022/05/11/open-source/jest-openjs-foundation/\"\u003eformerly developed by Facebook\u003c/a\u003e, known for its simplicity and comprehensive feature set.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"key-features-of-jest\" href=\"#key-features-of-jest\"\u003e\n  \u003c/a\u003e\n  Key Features of Jest:\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eZero Configuration\u003c/strong\u003e : Works out of the box for most JavaScript projects.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eMocking Capabilities\u003c/strong\u003e : Extensive support for \u003ca href=\"https://jestjs.io/docs/mock-functions\"\u003emocking functions\u003c/a\u003e and modules.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSnapshot Testing\u003c/strong\u003e : Offers snapshot testing to capture component states.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eLarge Community\u003c/strong\u003e : Backed by a large community and extensive documentation.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"pros\" href=\"#pros\"\u003e\n  \u003c/a\u003e\n  Pros:\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eEcosystem and Support\u003c/strong\u003e : A vast array of plugins and integrations.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eMaturity\u003c/strong\u003e : Well-established with a proven track record.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eDocumentation and Resources\u003c/strong\u003e : Extensive resources for learning and troubleshooting.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"cons\" href=\"#cons\"\u003e\n  \u003c/a\u003e\n  Cons:\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003ePerformance\u003c/strong\u003e : Can be slower, particularly with large test suites.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eModern JavaScript Support\u003c/strong\u003e : Might require additional configuration for ES modules.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eNot really too many cons. Jest is a very solid, robust option. It can be a little difficult to configure with \u003ca href=\"https://dev.to/scc33/maximizing-web-development-efficiency-a-comprehensive-guide-to-vite-2lg1-temp-slug-2923514\"\u003eVite\u003c/a\u003e though.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"documentation-and-resources\" href=\"#documentation-and-resources\"\u003e\n  \u003c/a\u003e\n  Documentation and Resources:\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://jestjs.io/\"\u003eJest Documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"example-code-snippet\" href=\"#example-code-snippet\"\u003e\n  \u003c/a\u003e\n  Example Code Snippet:\n\u003c/h3\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e// notice the simplicity and how it just works out of the box\nimport { sum } from './math';\n\ntest('adds 1 + 2 to equal 3', () =\u0026gt; {\n  expect(sum(1, 2)).toBe(3);\n});\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"comparative-overview\" href=\"#comparative-overview\"\u003e\n  \u003c/a\u003e\n  Comparative Overview\n\u003c/h2\u003e\n\n\u003cp\u003e| Feature | Vitest | Jest |\u003cbr\u003e\n| Speed | Faster | Slower |\u003cbr\u003e\n| ES Module Support | Native | Requires Configuration |\u003cbr\u003e\n| Community | Growing | Established |\u003cbr\u003e\n| Configuration | Minimal | Zero Config |\u003cbr\u003e\n| TypeScript Support | Native | Good Support |\u003cbr\u003e\n| Snapshot Testing | Supported | Supported |\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eThe choice between Vitest and Jest depends largely on your project requirements and existing development stack. Vitest offers a modern and fast approach, making it an attractive option for projects using Vite or requiring native ES module support. Jest, with its maturity and extensive ecosystem, remains a reliable choice for a wide range of JavaScript projects.\u003c/p\u003e\n\n\u003cp\u003eAs a software engineer, understanding the strengths and limitations of each framework is key to making an informed decision that aligns with your project's needs and goals. Both Vitest and Jest offer unique advantages, and the choice often boils down to specific project requirements and personal preferences.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eFor a deeper dive into each framework, refer to their respective documentation, which offers comprehensive guides and API references to assist in your decision-making process.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://jestjs.io/docs/getting-started\"\u003eJest documentation\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://vitest.dev/guide/\"\u003eVitest documentation\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eSide note: the cover art was created using \u003ca href=\"https://openai.com/dall-e-2\"\u003eDALLE\u003c/a\u003e and wow. Personally, I am blown away at some of the artwork that generative AI can create.\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"vitest-vs-jest-the-new-javascript-testing-framework-42d6-temp-slug-5654970","social_image":null,"title":"Vitest vs. Jest: The New JavaScript Testing Framework","video":null,"video_code":null},{"created_at":"2023-11-23T04:20:42.245Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/front-end-build-tools","feed_source_url":"https://blog.seancoughlin.me/front-end-build-tools","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Navigating Front-End Build Tools: A Comprehensive Guide for Developers\npublished: false\ndate: 2023-11-23 03:37:38 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/front-end-build-tools\n---\n\nIn the realm of front-end development, the choice of [build tools](https://en.wikipedia.org/wiki/Build_automation) can significantly impact the efficiency and effectiveness of your workflow. As a developer, its essential to understand the nuances of these tools to make informed decisions. This blog post delves into the most common front-end build tools, offering a comparison to help you choose the right one for your project.\n\n## Understanding Front-End Build Tools\n\nFront-end build tools are essential in modern web development as they automate and streamline the process of turning development code into production-ready files. These tools handle tasks like bundling JavaScript files, transpiling [ES6](https://www.w3schools.com/js/js_es6.asp) and [JSX](https://legacy.reactjs.org/docs/introducing-jsx.html) code to browser-compatible JavaScript, minifying code to reduce size, and optimizing images and other assets.\n\nTheir importance lies in enhancing development efficiency, ensuring code consistency, and improving website performance, which is crucial for providing a smooth and fast user experience. By managing these complex processes, front-end build tools allow developers to focus more on writing code and less on the technicalities of preparing it for deployment.\n\nFront-end build tools are an integral part of modern web development. They automate routine tasks, bundle code, optimize assets, and enhance overall development efficiency. Lets compare some of the most popular ones: Webpack, Parcel, and Vite.\n\n### Webpack\n\n[**Webpack**](https://en.wikipedia.org/wiki/Webpack) is a powerful module bundler and a widely used build tool in the front-end landscape.\n\n#### Pros:\n\n- **Versatility** : Can handle various assets like JavaScript, CSS, and images.\n\n- **Plugin Ecosystem** : A robust ecosystem of plugins for extended functionality.\n\n- **Loader System** : Allows preprocessing of files before bundling.\n\n#### Cons:\n\n- **Complex Configuration** : Can (arguably will) be overwhelming, especially for beginners.\n\n- **Build Time** : May be slower for larger projects.\n\n#### Resources:\n\n- [Webpack Documentation](https://webpack.js.org/concepts/)\n\n- [Webpack on GitHub](https://github.com/webpack/webpack)\n\n### Parcel\n\n[**Parcel**](https://www.npmjs.com/package/parcel) is known for its simplicity and zero-configuration approach.\n\n#### Pros:\n\n- **Zero Configuration** : Works out of the box for most projects.\n\n- **Speed** : Fast build times, especially for small to medium-sized projects.\n\n- **Simplified Development** : Easier to set up and use compared to Webpack.\n\n#### Cons:\n\n- **Plugin Availability** : Fewer plugins compared to Webpack.\n\n- **Customization** : Limited customization options for advanced use cases.\n\n#### Resources:\n\n- [Parcel Documentation](https://parceljs.org/docs/)\n\n- [Parcel on GitHub](https://github.com/parcel-bundler/parcel)\n\n### Vite\n\n[**Vite**](https://www.npmjs.com/package/vite) is a newer entrant, designed to provide a faster and more efficient development experience. It was [created](https://en.wikipedia.org/wiki/Vite_(software)) by the same folks as Vue.\n\n#### Pros:\n\n- **Fast Server Start** : Leverages ES modules for speedy server start.\n\n- **HMR** : Efficient Hot Module Replacement.\n\n- **Modern Tooling** : Built with modern JavaScript in mind, supporting features like TypeScript out of the box.\n\n#### Cons:\n\n- **Community Size** : Smaller community compared to Webpack.\n\n- **Maturity** : Newer and may lack some features of more established tools.\n\n#### Resources:\n\n- [Vite Documentation](https://vitejs.dev/guide/)\n\n- [Vite on GitHub](https://github.com/vitejs/vite)\n\n## Comparative Overview\n\nHeres a table for a quick comparison:\n\n| Feature | Webpack | Parcel | Vite |\n| **Configuration** | Complex | Zero Config | Minimal Config |\n| **Build Speed** | Moderate | Fast | Very Fast |\n| **Community Support** | Large | Moderate | Growing |\n| **Plugin Ecosystem** | Extensive | Moderate | Moderate |\n| **Use Case** | Versatile, large projects | Quick setups, small to medium projects | Modern web projects, fast development |\n\n## Conclusion\n\nThe choice of a front-end build tool depends on several factors, such as project size, complexity, and your teams familiarity with the tool.\n\n- Webpack is a great choice for large-scale projects requiring extensive customization.\n\n- Parcel shines in projects where a quick setup and fast build times are priorities.\n\n- Vite, with its modern approach and rapid development cycle, is ideal for newer projects leveraging modern JavaScript.\n\nAs front-end development continues to evolve, staying informed and adaptable to various tools is key. Each tool has its strengths and fits different scenarios; understanding these will guide you to make the right choice for your project needs.\n\n* * *\n\nFor a deeper exploration of these tools, their official documentation provides comprehensive guides and resources, helping you harness their full potential in your front-end development journey. Please check them out to learn more.\n\nAlso, go check out the Fireship YouTube channel. It probably has taught me more about practical development than my six-figure costing computer science undergrad.\n\n[https://youtu.be/5IG4UmULyoA?si=9Oo99DOZn5eE3\\_zM](https://youtu.be/5IG4UmULyoA?si=9Oo99DOZn5eE3_zM)","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"In the realm of front-end development, the choice of build tools can significantly impact the...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/navigating-front-end-build-tools-a-comprehensive-guide-for-developers-51l-temp-slug-3508087","public_reactions_count":0,"processed_html":"\u003cp\u003eIn the realm of front-end development, the choice of \u003ca href=\"https://en.wikipedia.org/wiki/Build_automation\"\u003ebuild tools\u003c/a\u003e can significantly impact the efficiency and effectiveness of your workflow. As a developer, its essential to understand the nuances of these tools to make informed decisions. This blog post delves into the most common front-end build tools, offering a comparison to help you choose the right one for your project.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"understanding-frontend-build-tools\" href=\"#understanding-frontend-build-tools\"\u003e\n  \u003c/a\u003e\n  Understanding Front-End Build Tools\n\u003c/h2\u003e\n\n\u003cp\u003eFront-end build tools are essential in modern web development as they automate and streamline the process of turning development code into production-ready files. These tools handle tasks like bundling JavaScript files, transpiling \u003ca href=\"https://www.w3schools.com/js/js_es6.asp\"\u003eES6\u003c/a\u003e and \u003ca href=\"https://legacy.reactjs.org/docs/introducing-jsx.html\"\u003eJSX\u003c/a\u003e code to browser-compatible JavaScript, minifying code to reduce size, and optimizing images and other assets.\u003c/p\u003e\n\n\u003cp\u003eTheir importance lies in enhancing development efficiency, ensuring code consistency, and improving website performance, which is crucial for providing a smooth and fast user experience. By managing these complex processes, front-end build tools allow developers to focus more on writing code and less on the technicalities of preparing it for deployment.\u003c/p\u003e\n\n\u003cp\u003eFront-end build tools are an integral part of modern web development. They automate routine tasks, bundle code, optimize assets, and enhance overall development efficiency. Lets compare some of the most popular ones: Webpack, Parcel, and Vite.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"webpack\" href=\"#webpack\"\u003e\n  \u003c/a\u003e\n  Webpack\n\u003c/h3\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Webpack\"\u003e\u003cstrong\u003eWebpack\u003c/strong\u003e\u003c/a\u003e is a powerful module bundler and a widely used build tool in the front-end landscape.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"pros\" href=\"#pros\"\u003e\n  \u003c/a\u003e\n  Pros:\n\u003c/h4\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eVersatility\u003c/strong\u003e : Can handle various assets like JavaScript, CSS, and images.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003ePlugin Ecosystem\u003c/strong\u003e : A robust ecosystem of plugins for extended functionality.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eLoader System\u003c/strong\u003e : Allows preprocessing of files before bundling.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"cons\" href=\"#cons\"\u003e\n  \u003c/a\u003e\n  Cons:\n\u003c/h4\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eComplex Configuration\u003c/strong\u003e : Can (arguably will) be overwhelming, especially for beginners.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eBuild Time\u003c/strong\u003e : May be slower for larger projects.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"resources\" href=\"#resources\"\u003e\n  \u003c/a\u003e\n  Resources:\n\u003c/h4\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://webpack.js.org/concepts/\"\u003eWebpack Documentation\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://github.com/webpack/webpack\"\u003eWebpack on GitHub\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"parcel\" href=\"#parcel\"\u003e\n  \u003c/a\u003e\n  Parcel\n\u003c/h3\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.npmjs.com/package/parcel\"\u003e\u003cstrong\u003eParcel\u003c/strong\u003e\u003c/a\u003e is known for its simplicity and zero-configuration approach.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"pros\" href=\"#pros\"\u003e\n  \u003c/a\u003e\n  Pros:\n\u003c/h4\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eZero Configuration\u003c/strong\u003e : Works out of the box for most projects.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSpeed\u003c/strong\u003e : Fast build times, especially for small to medium-sized projects.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSimplified Development\u003c/strong\u003e : Easier to set up and use compared to Webpack.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"cons\" href=\"#cons\"\u003e\n  \u003c/a\u003e\n  Cons:\n\u003c/h4\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003ePlugin Availability\u003c/strong\u003e : Fewer plugins compared to Webpack.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eCustomization\u003c/strong\u003e : Limited customization options for advanced use cases.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"resources\" href=\"#resources\"\u003e\n  \u003c/a\u003e\n  Resources:\n\u003c/h4\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://parceljs.org/docs/\"\u003eParcel Documentation\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://github.com/parcel-bundler/parcel\"\u003eParcel on GitHub\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"vite\" href=\"#vite\"\u003e\n  \u003c/a\u003e\n  Vite\n\u003c/h3\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.npmjs.com/package/vite\"\u003e\u003cstrong\u003eVite\u003c/strong\u003e\u003c/a\u003e is a newer entrant, designed to provide a faster and more efficient development experience. It was \u003ca href=\"https://en.wikipedia.org/wiki/Vite_(software)\"\u003ecreated\u003c/a\u003e by the same folks as Vue.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"pros\" href=\"#pros\"\u003e\n  \u003c/a\u003e\n  Pros:\n\u003c/h4\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eFast Server Start\u003c/strong\u003e : Leverages ES modules for speedy server start.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eHMR\u003c/strong\u003e : Efficient Hot Module Replacement.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eModern Tooling\u003c/strong\u003e : Built with modern JavaScript in mind, supporting features like TypeScript out of the box.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"cons\" href=\"#cons\"\u003e\n  \u003c/a\u003e\n  Cons:\n\u003c/h4\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eCommunity Size\u003c/strong\u003e : Smaller community compared to Webpack.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eMaturity\u003c/strong\u003e : Newer and may lack some features of more established tools.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"resources\" href=\"#resources\"\u003e\n  \u003c/a\u003e\n  Resources:\n\u003c/h4\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://vitejs.dev/guide/\"\u003eVite Documentation\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://github.com/vitejs/vite\"\u003eVite on GitHub\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"comparative-overview\" href=\"#comparative-overview\"\u003e\n  \u003c/a\u003e\n  Comparative Overview\n\u003c/h2\u003e\n\n\u003cp\u003eHeres a table for a quick comparison:\u003c/p\u003e\n\n\u003cp\u003e| Feature | Webpack | Parcel | Vite |\u003cbr\u003e\n| \u003cstrong\u003eConfiguration\u003c/strong\u003e | Complex | Zero Config | Minimal Config |\u003cbr\u003e\n| \u003cstrong\u003eBuild Speed\u003c/strong\u003e | Moderate | Fast | Very Fast |\u003cbr\u003e\n| \u003cstrong\u003eCommunity Support\u003c/strong\u003e | Large | Moderate | Growing |\u003cbr\u003e\n| \u003cstrong\u003ePlugin Ecosystem\u003c/strong\u003e | Extensive | Moderate | Moderate |\u003cbr\u003e\n| \u003cstrong\u003eUse Case\u003c/strong\u003e | Versatile, large projects | Quick setups, small to medium projects | Modern web projects, fast development |\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eThe choice of a front-end build tool depends on several factors, such as project size, complexity, and your teams familiarity with the tool.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eWebpack is a great choice for large-scale projects requiring extensive customization.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eParcel shines in projects where a quick setup and fast build times are priorities.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eVite, with its modern approach and rapid development cycle, is ideal for newer projects leveraging modern JavaScript.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAs front-end development continues to evolve, staying informed and adaptable to various tools is key. Each tool has its strengths and fits different scenarios; understanding these will guide you to make the right choice for your project needs.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eFor a deeper exploration of these tools, their official documentation provides comprehensive guides and resources, helping you harness their full potential in your front-end development journey. Please check them out to learn more.\u003c/p\u003e\n\n\u003cp\u003eAlso, go check out the Fireship YouTube channel. It probably has taught me more about practical development than my six-figure costing computer science undergrad.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://youtu.be/5IG4UmULyoA?si=9Oo99DOZn5eE3_zM\"\u003ehttps://youtu.be/5IG4UmULyoA?si=9Oo99DOZn5eE3_zM\u003c/a\u003e\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"navigating-front-end-build-tools-a-comprehensive-guide-for-developers-51l-temp-slug-3508087","social_image":null,"title":"Navigating Front-End Build Tools: A Comprehensive Guide for Developers","video":null,"video_code":null},{"created_at":"2023-11-23T19:20:32.229Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/learn-react-hooks","feed_source_url":"https://blog.seancoughlin.me/learn-react-hooks","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Learn React Basics: React Hooks\npublished: false\ndate: 2023-11-23 15:52:49 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/learn-react-hooks\n---\n\nHere we go another React Hooks tutorial :). I definitely created the first one of these on the internet (cough cough sarcasm).\n\nReact Hooks, [introduced in React 16.8](https://legacy.reactjs.org/docs/hooks-intro.html), drastically changed the way we write React components. They allow you to use state and other React features in functional components, which was previously only possible in [class components](https://legacy.reactjs.org/docs/react-component.html). This makes code more readable and easier to maintain.\n\nToday, we'll explore two key hooks: `useState` and `useEffect`, with examples and documentation links. These are by far the most common hooks out there. By no means do they mark the complete universe of hooks, but you can get pretty far in the React universe with just these two.\n\n## Understanding useState\n\nThe [`useState` hook](https://react.dev/reference/react/useState) is the cornerstone for managing state in functional components. It's a simpler and more elegant way to introduce state in your components without converting them into classes (which for all intents and purposes are dead in React at this point).\n\n### Example: A Simple Counter\n\nHere's a basic example that demonstrates the `useState` hook:\n\n```\nimport { useState } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  return (\n    \u003cdiv\u003e\n      \u003cp\u003eYou clicked {count} times\u003c/p\u003e\n      \u003cbutton onClick={() =\u003e setCount(count + 1)}\u003e\n        Click me\n      \u003c/button\u003e\n    \u003c/div\u003e\n  );\n}\n\nexport default Counter;\n\n```\n\nIn this example, `useState(0)` initializes the `count` state variable to 0. `setCount` is a function that updates `count`. When you click the button, `setCount` is called with the new count value, triggering a re-render with the updated state.\n\nNote the automatic re-render where React will re-render the page to show the updated state. There is some performance overhead with this operation.\n\nFor more details on `useState`, check the [official documentation](https://react.dev/reference/react/useState).\n\n## Exploring useEffect\n\nThe [`useEffect` hook](https://react.dev/reference/react/useEffect) is used for performing side effects in function components. It's similar to lifecycle methods like `componentDidMount`, `componentDidUpdate`, and `componentWillUnmount` in class components.\n\n### Example: Updating Document Title\n\nLet's look at an example where `useEffect` is used to update the document title:\n\n```\nimport { useState, useEffect } from 'react';\n\nfunction TitleUpdater() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() =\u003e {\n    // Update the document title using the browser API\n    document.title = `You clicked ${count} times`;\n  });\n\n  return (\n    \u003cdiv\u003e\n      \u003cp\u003eClick count: {count}\u003c/p\u003e\n      \u003cbutton onClick={() =\u003e setCount(count + 1)}\u003e\n        Increase count\n      \u003c/button\u003e\n    \u003c/div\u003e\n  );\n}\n\nexport default TitleUpdater;\n\n```\n\nIn this example, `useEffect` is used to update the document's title every time the component renders. The hook runs after every render by default, including the first render.\n\nFor an in-depth understanding of `useEffect`, refer to the [React documentation](https://react.dev/reference/react/useEffect).\n\n## Conclusion\n\nReact Hooks offer a more intuitive and functional approach to building components. By understanding and utilizing hooks like `useState` and `useEffect`, you can write more concise and maintainable React applications. They not only simplify your component logic but also pave the way for better state management and side-effect handling in functional components.\n\nFor further reading and advanced hook patterns, the [React documentation](https://react.dev) provides comprehensive guides and examples. Happy coding!","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Here we go another React Hooks tutorial :). I definitely created the first one of these on the...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/learn-react-basics-react-hooks-356c-temp-slug-2438861","public_reactions_count":0,"processed_html":"\u003cp\u003eHere we go another React Hooks tutorial :). I definitely created the first one of these on the internet (cough cough sarcasm).\u003c/p\u003e\n\n\u003cp\u003eReact Hooks, \u003ca href=\"https://legacy.reactjs.org/docs/hooks-intro.html\"\u003eintroduced in React 16.8\u003c/a\u003e, drastically changed the way we write React components. They allow you to use state and other React features in functional components, which was previously only possible in \u003ca href=\"https://legacy.reactjs.org/docs/react-component.html\"\u003eclass components\u003c/a\u003e. This makes code more readable and easier to maintain.\u003c/p\u003e\n\n\u003cp\u003eToday, we'll explore two key hooks: \u003ccode\u003euseState\u003c/code\u003e and \u003ccode\u003euseEffect\u003c/code\u003e, with examples and documentation links. These are by far the most common hooks out there. By no means do they mark the complete universe of hooks, but you can get pretty far in the React universe with just these two.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"understanding-usestate\" href=\"#understanding-usestate\"\u003e\n  \u003c/a\u003e\n  Understanding useState\n\u003c/h2\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://react.dev/reference/react/useState\"\u003e\u003ccode\u003euseState\u003c/code\u003e hook\u003c/a\u003e is the cornerstone for managing state in functional components. It's a simpler and more elegant way to introduce state in your components without converting them into classes (which for all intents and purposes are dead in React at this point).\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"example-a-simple-counter\" href=\"#example-a-simple-counter\"\u003e\n  \u003c/a\u003e\n  Example: A Simple Counter\n\u003c/h3\u003e\n\n\u003cp\u003eHere's a basic example that demonstrates the \u003ccode\u003euseState\u003c/code\u003e hook:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eimport { useState } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  return (\n    \u0026lt;div\u0026gt;\n      \u0026lt;p\u0026gt;You clicked {count} times\u0026lt;/p\u0026gt;\n      \u0026lt;button onClick={() =\u0026gt; setCount(count + 1)}\u0026gt;\n        Click me\n      \u0026lt;/button\u0026gt;\n    \u0026lt;/div\u0026gt;\n  );\n}\n\nexport default Counter;\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eIn this example, \u003ccode\u003euseState(0)\u003c/code\u003e initializes the \u003ccode\u003ecount\u003c/code\u003e state variable to 0. \u003ccode\u003esetCount\u003c/code\u003e is a function that updates \u003ccode\u003ecount\u003c/code\u003e. When you click the button, \u003ccode\u003esetCount\u003c/code\u003e is called with the new count value, triggering a re-render with the updated state.\u003c/p\u003e\n\n\u003cp\u003eNote the automatic re-render where React will re-render the page to show the updated state. There is some performance overhead with this operation.\u003c/p\u003e\n\n\u003cp\u003eFor more details on \u003ccode\u003euseState\u003c/code\u003e, check the \u003ca href=\"https://react.dev/reference/react/useState\"\u003eofficial documentation\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"exploring-useeffect\" href=\"#exploring-useeffect\"\u003e\n  \u003c/a\u003e\n  Exploring useEffect\n\u003c/h2\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://react.dev/reference/react/useEffect\"\u003e\u003ccode\u003euseEffect\u003c/code\u003e hook\u003c/a\u003e is used for performing side effects in function components. It's similar to lifecycle methods like \u003ccode\u003ecomponentDidMount\u003c/code\u003e, \u003ccode\u003ecomponentDidUpdate\u003c/code\u003e, and \u003ccode\u003ecomponentWillUnmount\u003c/code\u003e in class components.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"example-updating-document-title\" href=\"#example-updating-document-title\"\u003e\n  \u003c/a\u003e\n  Example: Updating Document Title\n\u003c/h3\u003e\n\n\u003cp\u003eLet's look at an example where \u003ccode\u003euseEffect\u003c/code\u003e is used to update the document title:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eimport { useState, useEffect } from 'react';\n\nfunction TitleUpdater() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() =\u0026gt; {\n    // Update the document title using the browser API\n    document.title = `You clicked ${count} times`;\n  });\n\n  return (\n    \u0026lt;div\u0026gt;\n      \u0026lt;p\u0026gt;Click count: {count}\u0026lt;/p\u0026gt;\n      \u0026lt;button onClick={() =\u0026gt; setCount(count + 1)}\u0026gt;\n        Increase count\n      \u0026lt;/button\u0026gt;\n    \u0026lt;/div\u0026gt;\n  );\n}\n\nexport default TitleUpdater;\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eIn this example, \u003ccode\u003euseEffect\u003c/code\u003e is used to update the document's title every time the component renders. The hook runs after every render by default, including the first render.\u003c/p\u003e\n\n\u003cp\u003eFor an in-depth understanding of \u003ccode\u003euseEffect\u003c/code\u003e, refer to the \u003ca href=\"https://react.dev/reference/react/useEffect\"\u003eReact documentation\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eReact Hooks offer a more intuitive and functional approach to building components. By understanding and utilizing hooks like \u003ccode\u003euseState\u003c/code\u003e and \u003ccode\u003euseEffect\u003c/code\u003e, you can write more concise and maintainable React applications. They not only simplify your component logic but also pave the way for better state management and side-effect handling in functional components.\u003c/p\u003e\n\n\u003cp\u003eFor further reading and advanced hook patterns, the \u003ca href=\"https://react.dev\"\u003eReact documentation\u003c/a\u003e provides comprehensive guides and examples. Happy coding!\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"learn-react-basics-react-hooks-356c-temp-slug-2438861","social_image":null,"title":"Learn React Basics: React Hooks","video":null,"video_code":null},{"created_at":"2023-11-24T00:20:17.675Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/learn-react-basics-components-and-props","feed_source_url":"https://blog.seancoughlin.me/learn-react-basics-components-and-props","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Learn React Basics: Components and Props\npublished: false\ndate: 2023-11-23 19:34:09 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/learn-react-basics-components-and-props\n---\n\n[React](https://react.dev), a popular JavaScript library for building user interfaces is known for its [component-based architecture](https://en.wikipedia.org/wiki/Component-based_software_engineering). This architecture not only makes React powerful but also easy to learn, especially when you start with the basics of React Components and Props. In this blog post, we'll delve into these concepts, providing code examples and linking to additional resources for an enriched learning experience.\n\n## What are React Components?\n\n[React components](https://react.dev/reference/react/components) are the core building blocks of a React application. They are independent, reusable pieces of UI that can be nested within each other. Components let you split the UI into separate sections, like header, footer, and body, each of which operates independently.\n\n### Types of Components\n\n#### 1. Class Components (Legacy)\n\n[Class components](https://react.dev/reference/react/Component) are a legacy method for creating components. They are defined using [ES6 classes](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes) and extend from `React.Component`. They can hold and manage local state and lifecycle methods.\n\n**Example:**\n\n```\nimport { Component } from 'react';\n\nclass Welcome extends Component {\n  render() {\n    return \u003ch1\u003eHello, {this.props.name}\u003c/h1\u003e;\n  }\n}\n\nexport default Welcome;\n\n```\n\nHere, `Welcome` is a class component that renders a simple greeting. It accesses props using [`this.props.name`](http://this.props.name).\n\nFor more on class components, check the [React documentation on Components and Props](https://react.dev/reference/react/Component). Note this is an older way of creating components. The new (and better method is functional components)\n\n#### 2. Functional Components\n\nFunctional components are simpler and defined using plain [JavaScript functions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions). They can manage state [using hooks](https://dev.to/scc33/learn-react-basics-react-hooks-356c-temp-slug-2438861), which was exclusive to class components in the past (before React 16.8).\n\n**Example:**\n\n```\nfunction Welcome(props) {\n  return \u003ch1\u003eHello, {props.name}\u003c/h1\u003e;\n}\n\nexport default Welcome;\n\n```\n\nThis functional component does the same thing as the class component above but with less boilerplate.\n\nRefer to [Reacts Functional Components](https://reactjs.org/docs/components-and-props.html#function-and-class-components) for more insights.\n\n## Understanding Props in React\n\nProps (short for properties) are how you pass data from a parent component to a child component in React. They are read-only, which means a child component cannot modify the props it receives.\n\n### Example of Using Props\n\n```\nimport Welcome from './Welcome'; // some other predefined component\n\nfunction App() {\n  return (\n    \u003cdiv\u003e\n      \u003cWelcome name=\"Alice\" /\u003e\n      \u003cWelcome name=\"Bob\" /\u003e\n    \u003c/div\u003e\n  );\n}\n\nexport default App;\n\n```\n\nIn this example, `App` is the parent component that renders the `Welcome` component twice, each time passing a different `name` as a prop.\n\nFor a comprehensive guide on props, visit [Reacts official documentation](https://reactjs.org/docs/components-and-props.html#rendering-a-component).\n\n## Conclusion\n\nUnderstanding React components and props is fundamental for any beginner in React development. These concepts form the backbone of React applications, enabling developers to create complex, efficient, and maintainable UIs.\n\nAs you progress, youll discover more advanced features and patterns, but mastering components and props will give you a solid foundation to build upon.\n\nRemember, the best way to learn React is by practice. Experiment with different types of components and props, and refer to the React documentation for deeper insights and best practices. Happy coding!\n\n* * *\n\nFor further exploration, the [React documentation](https://reactjs.org/docs/getting-started.html) is an invaluable resource, providing in-depth tutorials and guides on various aspects of React.","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"React, a popular JavaScript library for building user interfaces is known for its component-based...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/learn-react-basics-components-and-props-1g2c-temp-slug-7692193","public_reactions_count":0,"processed_html":"\u003cp\u003e\u003ca href=\"https://react.dev\"\u003eReact\u003c/a\u003e, a popular JavaScript library for building user interfaces is known for its \u003ca href=\"https://en.wikipedia.org/wiki/Component-based_software_engineering\"\u003ecomponent-based architecture\u003c/a\u003e. This architecture not only makes React powerful but also easy to learn, especially when you start with the basics of React Components and Props. In this blog post, we'll delve into these concepts, providing code examples and linking to additional resources for an enriched learning experience.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what-are-react-components\" href=\"#what-are-react-components\"\u003e\n  \u003c/a\u003e\n  What are React Components?\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://react.dev/reference/react/components\"\u003eReact components\u003c/a\u003e are the core building blocks of a React application. They are independent, reusable pieces of UI that can be nested within each other. Components let you split the UI into separate sections, like header, footer, and body, each of which operates independently.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"types-of-components\" href=\"#types-of-components\"\u003e\n  \u003c/a\u003e\n  Types of Components\n\u003c/h3\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"1-class-components-legacy\" href=\"#1-class-components-legacy\"\u003e\n  \u003c/a\u003e\n  1. Class Components (Legacy)\n\u003c/h4\u003e\n\n\u003cp\u003e\u003ca href=\"https://react.dev/reference/react/Component\"\u003eClass components\u003c/a\u003e are a legacy method for creating components. They are defined using \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes\"\u003eES6 classes\u003c/a\u003e and extend from \u003ccode\u003eReact.Component\u003c/code\u003e. They can hold and manage local state and lifecycle methods.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eExample:\u003c/strong\u003e\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eimport { Component } from 'react';\n\nclass Welcome extends Component {\n  render() {\n    return \u0026lt;h1\u0026gt;Hello, {this.props.name}\u0026lt;/h1\u0026gt;;\n  }\n}\n\nexport default Welcome;\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eHere, \u003ccode\u003eWelcome\u003c/code\u003e is a class component that renders a simple greeting. It accesses props using \u003ca href=\"http://this.props.name\"\u003e\u003ccode\u003ethis.props.name\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eFor more on class components, check the \u003ca href=\"https://react.dev/reference/react/Component\"\u003eReact documentation on Components and Props\u003c/a\u003e. Note this is an older way of creating components. The new (and better method is functional components)\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"2-functional-components\" href=\"#2-functional-components\"\u003e\n  \u003c/a\u003e\n  2. Functional Components\n\u003c/h4\u003e\n\n\u003cp\u003eFunctional components are simpler and defined using plain \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions\"\u003eJavaScript functions\u003c/a\u003e. They can manage state \u003ca href=\"https://dev.to/scc33/learn-react-basics-react-hooks-356c-temp-slug-2438861\"\u003eusing hooks\u003c/a\u003e, which was exclusive to class components in the past (before React 16.8).\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eExample:\u003c/strong\u003e\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003efunction Welcome(props) {\n  return \u0026lt;h1\u0026gt;Hello, {props.name}\u0026lt;/h1\u0026gt;;\n}\n\nexport default Welcome;\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eThis functional component does the same thing as the class component above but with less boilerplate.\u003c/p\u003e\n\n\u003cp\u003eRefer to \u003ca href=\"https://reactjs.org/docs/components-and-props.html#function-and-class-components\"\u003eReacts Functional Components\u003c/a\u003e for more insights.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"understanding-props-in-react\" href=\"#understanding-props-in-react\"\u003e\n  \u003c/a\u003e\n  Understanding Props in React\n\u003c/h2\u003e\n\n\u003cp\u003eProps (short for properties) are how you pass data from a parent component to a child component in React. They are read-only, which means a child component cannot modify the props it receives.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"example-of-using-props\" href=\"#example-of-using-props\"\u003e\n  \u003c/a\u003e\n  Example of Using Props\n\u003c/h3\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eimport Welcome from './Welcome'; // some other predefined component\n\nfunction App() {\n  return (\n    \u0026lt;div\u0026gt;\n      \u0026lt;Welcome name=\"Alice\" /\u0026gt;\n      \u0026lt;Welcome name=\"Bob\" /\u0026gt;\n    \u0026lt;/div\u0026gt;\n  );\n}\n\nexport default App;\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eIn this example, \u003ccode\u003eApp\u003c/code\u003e is the parent component that renders the \u003ccode\u003eWelcome\u003c/code\u003e component twice, each time passing a different \u003ccode\u003ename\u003c/code\u003e as a prop.\u003c/p\u003e\n\n\u003cp\u003eFor a comprehensive guide on props, visit \u003ca href=\"https://reactjs.org/docs/components-and-props.html#rendering-a-component\"\u003eReacts official documentation\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eUnderstanding React components and props is fundamental for any beginner in React development. These concepts form the backbone of React applications, enabling developers to create complex, efficient, and maintainable UIs.\u003c/p\u003e\n\n\u003cp\u003eAs you progress, youll discover more advanced features and patterns, but mastering components and props will give you a solid foundation to build upon.\u003c/p\u003e\n\n\u003cp\u003eRemember, the best way to learn React is by practice. Experiment with different types of components and props, and refer to the React documentation for deeper insights and best practices. Happy coding!\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eFor further exploration, the \u003ca href=\"https://reactjs.org/docs/getting-started.html\"\u003eReact documentation\u003c/a\u003e is an invaluable resource, providing in-depth tutorials and guides on various aspects of React.\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"learn-react-basics-components-and-props-1g2c-temp-slug-7692193","social_image":null,"title":"Learn React Basics: Components and Props","video":null,"video_code":null},{"created_at":"2023-11-24T19:20:53.636Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/learn-react-basics-code-splitting","feed_source_url":"https://blog.seancoughlin.me/learn-react-basics-code-splitting","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Learn React Basics: Code Splitting\npublished: false\ndate: 2023-11-24 16:56:05 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/learn-react-basics-code-splitting\n---\n\n## Introduction\n\nFor developers working on increasingly complex React applications, performance optimization is key to a smooth user experience. An effective method for enhancing performance in these applications is **code splitting**.\n\nThis guide is crafted for those with basic JavaScript and React backgrounds, providing an in-depth understanding of code splitting.\n\n## What is Code Splitting?\n\nCode splitting in React is a technique that divides your application's code into various bundles. These bundles can then be loaded on demand or in parallel, rather than loading the entire application bundle at once.\n\n### The Importance of Code Splitting\n\n- **Enhanced Performance** : It ensures users aren't waiting for unnecessary code to load, leading to faster initial page load times.\n\n- **Optimized Resource Use** : This approach minimizes the code transferred over the network, enhancing load times and conserving bandwidth.\n\n- **Improved User Experience** : Especially beneficial for users on slower networks or devices, it ensures quicker access to critical application features.\n\n## Ideal Scenarios for Code Splitting\n\n1. **Large Components** : Split off components that are large and not required for the initial render.\n\n2. **Conditional Components** : Components that appear only in certain scenarios, such as modal windows.\n\n3. **Routes** : Implementing code splitting at different pages or routes in your application (this is probably the easiest and most common usage).\n\n## Implementing Code Splitting in React\n\nReact facilitates code splitting with the `lazy()` function and the `Suspense` component. This functionality is built right into React.\n\n### Understanding lazy and Suspense\n\n`lazy` allows you to define a component that will be dynamically loaded.\n\n```\nimport { lazy, Suspense } from 'react';\n\nconst OtherComponent = lazy(() =\u003e import('./OtherComponent'));\n\nfunction MyComponent() {\n  return (\n    \u003cSuspense fallback={\u003cdiv\u003eLoading...\u003c/div\u003e}\u003e\n      \u003cOtherComponent /\u003e\n    \u003c/Suspense\u003e\n  );\n}\n\n```\n\nIn this setup, `OtherComponent` is loaded only when `MyComponent` gets rendered.\n\n### The Role of Suspense\n\nThe `Suspense` component wraps lazy components and specifies a loading state (using the `fallback` prop) to show until the lazy component is loaded. It's crucial for handling the loading state gracefully.\n\n### Route-based Code Splitting\n\nYou can split code based on routes using libraries like `react-router-dom`.\n\n```\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { lazy, Suspense } from 'react';\n\nconst Home = lazy(() =\u003e import('./routes/Home'));\nconst About = lazy(() =\u003e import('./routes/About'));\n\nfunction App() {\n  return (\n    \u003cRouter\u003e\n      \u003cSuspense fallback={\u003cdiv\u003eLoading...\u003c/div\u003e}\u003e\n        \u003cSwitch\u003e\n          \u003cRoute exact path=\"/\" component={Home}/\u003e\n          \u003cRoute path=\"/about\" component={About}/\u003e\n        \u003c/Switch\u003e\n      \u003c/Suspense\u003e\n    \u003c/Router\u003e\n  );\n}\n\n```\n\nHere, `Home` and `About` components are only loaded when the user navigates to the respective routes.\n\n### Practical Example\n\nFirst, I'll create a very basic app that includes a bunch of routes that all point to the same component.\n\n```\nimport React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App.tsx'\nimport './index.css'\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  \u003cReact.StrictMode\u003e\n    \u003cRouter\u003e\n      \u003cReact.Suspense fallback={\u003cdiv\u003eLoading...\u003c/div\u003e}\u003e\n        \u003cRoutes\u003e\n          \u003cRoute path=\"/\" element={\u003cApp /\u003e} /\u003e\n          \u003cRoute path=\"/1\" element={\u003cApp /\u003e} /\u003e\n          \u003cRoute path=\"/2\" element={\u003cApp /\u003e} /\u003e\n          \u003cRoute path=\"/3\" element={\u003cApp /\u003e} /\u003e\n          \u003cRoute path=\"/4\" element={\u003cApp /\u003e} /\u003e\n          \u003cRoute path=\"/5\" element={\u003cApp /\u003e} /\u003e\n          \u003cRoute path=\"/6\" element={\u003cApp /\u003e} /\u003e\n          \u003cRoute path=\"/7\" element={\u003cApp /\u003e} /\u003e\n          \u003cRoute path=\"/8\" element={\u003cApp /\u003e} /\u003e\n          \u003cRoute path=\"/9\" element={\u003cApp /\u003e} /\u003e\n          \u003cRoute path=\"/10\" element={\u003cApp /\u003e} /\u003e\n        \u003c/Routes\u003e\n      \u003c/React.Suspense\u003e\n    \u003c/Router\u003e\n  \u003c/React.StrictMode\u003e,\n)\n\n```\n\nUpon building this application I get an output `dist` file that contains all the minified code bundle required to deploy and run the application. For this example, I have used [Vite](https://dev.to/scc33/maximizing-web-development-efficiency-a-comprehensive-guide-to-vite-2lg1-temp-slug-2923514), but any build tool would work.\n\n![](https://cdn.hashnode.com/res/hashnode/image/upload/v1700840258615/18ef760b-1318-4060-ab55-17bd51b2a715.png)\n\nNow we add a lazy function and lazy import the same `App` component. Once again I'll build this application using Vite.\n\n```\nimport React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport './index.css'\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\nimport { lazy } from 'react'\n\nconst App = lazy(() =\u003e import('./App.tsx'))\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  \u003cReact.StrictMode\u003e\n    \u003cRouter\u003e\n      \u003cReact.Suspense fallback={\u003cdiv\u003eLoading...\u003c/div\u003e}\u003e\n        \u003cRoutes\u003e\n          \u003cRoute path=\"/\" element={\u003cApp /\u003e} /\u003e\n          \u003cRoute path=\"/1\" element={\u003cApp /\u003e} /\u003e\n          \u003cRoute path=\"/2\" element={\u003cApp /\u003e} /\u003e\n          \u003cRoute path=\"/3\" element={\u003cApp /\u003e} /\u003e\n          \u003cRoute path=\"/4\" element={\u003cApp /\u003e} /\u003e\n          \u003cRoute path=\"/5\" element={\u003cApp /\u003e} /\u003e\n          \u003cRoute path=\"/6\" element={\u003cApp /\u003e} /\u003e\n          \u003cRoute path=\"/7\" element={\u003cApp /\u003e} /\u003e\n          \u003cRoute path=\"/8\" element={\u003cApp /\u003e} /\u003e\n          \u003cRoute path=\"/9\" element={\u003cApp /\u003e} /\u003e\n          \u003cRoute path=\"/10\" element={\u003cApp /\u003e} /\u003e\n        \u003c/Routes\u003e\n      \u003c/React.Suspense\u003e\n    \u003c/Router\u003e\n  \u003c/React.StrictMode\u003e,\n)\n\n```\n\nNow notice with this build we see two new files generated. `App-cfVfczdt.css` and `dist/assets/App-_KEqqJC2.js`. These files contain the required code to drive the `App` component. They will only be sent to the client when that component needs to be loaded.\n\nMany routes point to `App`, but the underlying component is the same for all of these routes so only one new code chunk is created.\n\n![](https://cdn.hashnode.com/res/hashnode/image/upload/v1700840407473/aa070635-9717-4bd0-92f2-e7bec074ab96.png)\n\nThis is a small example, but imagine you have some big page that often isn't viewed by a user. If that page is code split with lazy loading you can save sending it. That will shrink bundle sizes and speed up your client load times.\n\n## Best Practices\n\n- **Performance Testing** : Use tools like Chrome DevTools to evaluate the performance impact.\n\n- **Avoid Excessive Splitting** : Too much splitting can lead to many small files, causing performance issues (mostly latency) due to numerous requests.\n\n- **Utilize Bundling Tools** : Tools like Webpack or [Parcel](https://parceljs.org/docs/) are essential for effective bundling and splitting strategies.\n\n## Conclusion\n\nCode splitting is a potent technique for optimizing React application performance. Proper understanding and implementation can lead to a significantly better user experience.\n\n## Additional Resources\n\n- React Documentation on Code Splitting: [React Docs - Code Splitting](https://reactjs.org/docs/code-splitting.html)\n\n- Webpack's Guide on Code Splitting: [Webpack - Code Splitting](https://webpack.js.org/guides/code-splitting/)\n\n- Rollup's Guide on Code Splitting: [Tutorial | Rollup - Code Splitting](https://rollupjs.org/tutorial/#code-splitting)\n\n- Using Chrome DevTools for Performance Analysis: [Chrome DevTools - Performance](https://developer.chrome.com/docs/devtools/performance/)\n\nImplementing code splitting in your React applications can result in a noticeable improvement in performance, especially for large-scale projects. Best of luck!","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Introduction   For developers working on increasingly complex React applications,...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/learn-react-basics-code-splitting-6hn-temp-slug-4055446","public_reactions_count":0,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"introduction\" href=\"#introduction\"\u003e\n  \u003c/a\u003e\n  Introduction\n\u003c/h2\u003e\n\n\u003cp\u003eFor developers working on increasingly complex React applications, performance optimization is key to a smooth user experience. An effective method for enhancing performance in these applications is \u003cstrong\u003ecode splitting\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis guide is crafted for those with basic JavaScript and React backgrounds, providing an in-depth understanding of code splitting.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what-is-code-splitting\" href=\"#what-is-code-splitting\"\u003e\n  \u003c/a\u003e\n  What is Code Splitting?\n\u003c/h2\u003e\n\n\u003cp\u003eCode splitting in React is a technique that divides your application's code into various bundles. These bundles can then be loaded on demand or in parallel, rather than loading the entire application bundle at once.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"the-importance-of-code-splitting\" href=\"#the-importance-of-code-splitting\"\u003e\n  \u003c/a\u003e\n  The Importance of Code Splitting\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eEnhanced Performance\u003c/strong\u003e : It ensures users aren't waiting for unnecessary code to load, leading to faster initial page load times.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eOptimized Resource Use\u003c/strong\u003e : This approach minimizes the code transferred over the network, enhancing load times and conserving bandwidth.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eImproved User Experience\u003c/strong\u003e : Especially beneficial for users on slower networks or devices, it ensures quicker access to critical application features.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"ideal-scenarios-for-code-splitting\" href=\"#ideal-scenarios-for-code-splitting\"\u003e\n  \u003c/a\u003e\n  Ideal Scenarios for Code Splitting\n\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eLarge Components\u003c/strong\u003e : Split off components that are large and not required for the initial render.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eConditional Components\u003c/strong\u003e : Components that appear only in certain scenarios, such as modal windows.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eRoutes\u003c/strong\u003e : Implementing code splitting at different pages or routes in your application (this is probably the easiest and most common usage).\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"implementing-code-splitting-in-react\" href=\"#implementing-code-splitting-in-react\"\u003e\n  \u003c/a\u003e\n  Implementing Code Splitting in React\n\u003c/h2\u003e\n\n\u003cp\u003eReact facilitates code splitting with the \u003ccode\u003elazy()\u003c/code\u003e function and the \u003ccode\u003eSuspense\u003c/code\u003e component. This functionality is built right into React.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"understanding-lazy-and-suspense\" href=\"#understanding-lazy-and-suspense\"\u003e\n  \u003c/a\u003e\n  Understanding lazy and Suspense\n\u003c/h3\u003e\n\n\u003cp\u003e\u003ccode\u003elazy\u003c/code\u003e allows you to define a component that will be dynamically loaded.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eimport { lazy, Suspense } from 'react';\n\nconst OtherComponent = lazy(() =\u0026gt; import('./OtherComponent'));\n\nfunction MyComponent() {\n  return (\n    \u0026lt;Suspense fallback={\u0026lt;div\u0026gt;Loading...\u0026lt;/div\u0026gt;}\u0026gt;\n      \u0026lt;OtherComponent /\u0026gt;\n    \u0026lt;/Suspense\u0026gt;\n  );\n}\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eIn this setup, \u003ccode\u003eOtherComponent\u003c/code\u003e is loaded only when \u003ccode\u003eMyComponent\u003c/code\u003e gets rendered.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"the-role-of-suspense\" href=\"#the-role-of-suspense\"\u003e\n  \u003c/a\u003e\n  The Role of Suspense\n\u003c/h3\u003e\n\n\u003cp\u003eThe \u003ccode\u003eSuspense\u003c/code\u003e component wraps lazy components and specifies a loading state (using the \u003ccode\u003efallback\u003c/code\u003e prop) to show until the lazy component is loaded. It's crucial for handling the loading state gracefully.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"routebased-code-splitting\" href=\"#routebased-code-splitting\"\u003e\n  \u003c/a\u003e\n  Route-based Code Splitting\n\u003c/h3\u003e\n\n\u003cp\u003eYou can split code based on routes using libraries like \u003ccode\u003ereact-router-dom\u003c/code\u003e.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { lazy, Suspense } from 'react';\n\nconst Home = lazy(() =\u0026gt; import('./routes/Home'));\nconst About = lazy(() =\u0026gt; import('./routes/About'));\n\nfunction App() {\n  return (\n    \u0026lt;Router\u0026gt;\n      \u0026lt;Suspense fallback={\u0026lt;div\u0026gt;Loading...\u0026lt;/div\u0026gt;}\u0026gt;\n        \u0026lt;Switch\u0026gt;\n          \u0026lt;Route exact path=\"/\" component={Home}/\u0026gt;\n          \u0026lt;Route path=\"/about\" component={About}/\u0026gt;\n        \u0026lt;/Switch\u0026gt;\n      \u0026lt;/Suspense\u0026gt;\n    \u0026lt;/Router\u0026gt;\n  );\n}\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eHere, \u003ccode\u003eHome\u003c/code\u003e and \u003ccode\u003eAbout\u003c/code\u003e components are only loaded when the user navigates to the respective routes.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"practical-example\" href=\"#practical-example\"\u003e\n  \u003c/a\u003e\n  Practical Example\n\u003c/h3\u003e\n\n\u003cp\u003eFirst, I'll create a very basic app that includes a bunch of routes that all point to the same component.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eimport React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App.tsx'\nimport './index.css'\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  \u0026lt;React.StrictMode\u0026gt;\n    \u0026lt;Router\u0026gt;\n      \u0026lt;React.Suspense fallback={\u0026lt;div\u0026gt;Loading...\u0026lt;/div\u0026gt;}\u0026gt;\n        \u0026lt;Routes\u0026gt;\n          \u0026lt;Route path=\"/\" element={\u0026lt;App /\u0026gt;} /\u0026gt;\n          \u0026lt;Route path=\"/1\" element={\u0026lt;App /\u0026gt;} /\u0026gt;\n          \u0026lt;Route path=\"/2\" element={\u0026lt;App /\u0026gt;} /\u0026gt;\n          \u0026lt;Route path=\"/3\" element={\u0026lt;App /\u0026gt;} /\u0026gt;\n          \u0026lt;Route path=\"/4\" element={\u0026lt;App /\u0026gt;} /\u0026gt;\n          \u0026lt;Route path=\"/5\" element={\u0026lt;App /\u0026gt;} /\u0026gt;\n          \u0026lt;Route path=\"/6\" element={\u0026lt;App /\u0026gt;} /\u0026gt;\n          \u0026lt;Route path=\"/7\" element={\u0026lt;App /\u0026gt;} /\u0026gt;\n          \u0026lt;Route path=\"/8\" element={\u0026lt;App /\u0026gt;} /\u0026gt;\n          \u0026lt;Route path=\"/9\" element={\u0026lt;App /\u0026gt;} /\u0026gt;\n          \u0026lt;Route path=\"/10\" element={\u0026lt;App /\u0026gt;} /\u0026gt;\n        \u0026lt;/Routes\u0026gt;\n      \u0026lt;/React.Suspense\u0026gt;\n    \u0026lt;/Router\u0026gt;\n  \u0026lt;/React.StrictMode\u0026gt;,\n)\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eUpon building this application I get an output \u003ccode\u003edist\u003c/code\u003e file that contains all the minified code bundle required to deploy and run the application. For this example, I have used \u003ca href=\"https://dev.to/scc33/maximizing-web-development-efficiency-a-comprehensive-guide-to-vite-2lg1-temp-slug-2923514\"\u003eVite\u003c/a\u003e, but any build tool would work.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--XybDTfR8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700840258615/18ef760b-1318-4060-ab55-17bd51b2a715.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--XybDTfR8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700840258615/18ef760b-1318-4060-ab55-17bd51b2a715.png\" alt=\"\" loading=\"lazy\" width=\"800\" height=\"320\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eNow we add a lazy function and lazy import the same \u003ccode\u003eApp\u003c/code\u003e component. Once again I'll build this application using Vite.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eimport React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport './index.css'\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\nimport { lazy } from 'react'\n\nconst App = lazy(() =\u0026gt; import('./App.tsx'))\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  \u0026lt;React.StrictMode\u0026gt;\n    \u0026lt;Router\u0026gt;\n      \u0026lt;React.Suspense fallback={\u0026lt;div\u0026gt;Loading...\u0026lt;/div\u0026gt;}\u0026gt;\n        \u0026lt;Routes\u0026gt;\n          \u0026lt;Route path=\"/\" element={\u0026lt;App /\u0026gt;} /\u0026gt;\n          \u0026lt;Route path=\"/1\" element={\u0026lt;App /\u0026gt;} /\u0026gt;\n          \u0026lt;Route path=\"/2\" element={\u0026lt;App /\u0026gt;} /\u0026gt;\n          \u0026lt;Route path=\"/3\" element={\u0026lt;App /\u0026gt;} /\u0026gt;\n          \u0026lt;Route path=\"/4\" element={\u0026lt;App /\u0026gt;} /\u0026gt;\n          \u0026lt;Route path=\"/5\" element={\u0026lt;App /\u0026gt;} /\u0026gt;\n          \u0026lt;Route path=\"/6\" element={\u0026lt;App /\u0026gt;} /\u0026gt;\n          \u0026lt;Route path=\"/7\" element={\u0026lt;App /\u0026gt;} /\u0026gt;\n          \u0026lt;Route path=\"/8\" element={\u0026lt;App /\u0026gt;} /\u0026gt;\n          \u0026lt;Route path=\"/9\" element={\u0026lt;App /\u0026gt;} /\u0026gt;\n          \u0026lt;Route path=\"/10\" element={\u0026lt;App /\u0026gt;} /\u0026gt;\n        \u0026lt;/Routes\u0026gt;\n      \u0026lt;/React.Suspense\u0026gt;\n    \u0026lt;/Router\u0026gt;\n  \u0026lt;/React.StrictMode\u0026gt;,\n)\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eNow notice with this build we see two new files generated. \u003ccode\u003eApp-cfVfczdt.css\u003c/code\u003e and \u003ccode\u003edist/assets/App-_KEqqJC2.js\u003c/code\u003e. These files contain the required code to drive the \u003ccode\u003eApp\u003c/code\u003e component. They will only be sent to the client when that component needs to be loaded.\u003c/p\u003e\n\n\u003cp\u003eMany routes point to \u003ccode\u003eApp\u003c/code\u003e, but the underlying component is the same for all of these routes so only one new code chunk is created.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Bvgs-ORi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700840407473/aa070635-9717-4bd0-92f2-e7bec074ab96.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Bvgs-ORi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700840407473/aa070635-9717-4bd0-92f2-e7bec074ab96.png\" alt=\"\" loading=\"lazy\" width=\"800\" height=\"380\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThis is a small example, but imagine you have some big page that often isn't viewed by a user. If that page is code split with lazy loading you can save sending it. That will shrink bundle sizes and speed up your client load times.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"best-practices\" href=\"#best-practices\"\u003e\n  \u003c/a\u003e\n  Best Practices\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003ePerformance Testing\u003c/strong\u003e : Use tools like Chrome DevTools to evaluate the performance impact.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eAvoid Excessive Splitting\u003c/strong\u003e : Too much splitting can lead to many small files, causing performance issues (mostly latency) due to numerous requests.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eUtilize Bundling Tools\u003c/strong\u003e : Tools like Webpack or \u003ca href=\"https://parceljs.org/docs/\"\u003eParcel\u003c/a\u003e are essential for effective bundling and splitting strategies.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eCode splitting is a potent technique for optimizing React application performance. Proper understanding and implementation can lead to a significantly better user experience.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"additional-resources\" href=\"#additional-resources\"\u003e\n  \u003c/a\u003e\n  Additional Resources\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eReact Documentation on Code Splitting: \u003ca href=\"https://reactjs.org/docs/code-splitting.html\"\u003eReact Docs - Code Splitting\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eWebpack's Guide on Code Splitting: \u003ca href=\"https://webpack.js.org/guides/code-splitting/\"\u003eWebpack - Code Splitting\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eRollup's Guide on Code Splitting: \u003ca href=\"https://rollupjs.org/tutorial/#code-splitting\"\u003eTutorial | Rollup - Code Splitting\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eUsing Chrome DevTools for Performance Analysis: \u003ca href=\"https://developer.chrome.com/docs/devtools/performance/\"\u003eChrome DevTools - Performance\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eImplementing code splitting in your React applications can result in a noticeable improvement in performance, especially for large-scale projects. Best of luck!\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"learn-react-basics-code-splitting-6hn-temp-slug-4055446","social_image":null,"title":"Learn React Basics: Code Splitting","video":null,"video_code":null},{"created_at":"2023-11-24T19:20:54.321Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/learn-react-basics-react-router-navigating-single-page-applications","feed_source_url":"https://blog.seancoughlin.me/learn-react-basics-react-router-navigating-single-page-applications","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Learn React Basics: React Router \u0026 Navigating Single Page Applications\npublished: false\ndate: 2023-11-24 18:04:16 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/learn-react-basics-react-router-navigating-single-page-applications\n---\n\n## Introduction\n\nIn the world of React development, understanding how to handle routing in [single-page applications (SPAs)](https://en.wikipedia.org/wiki/Single-page_application) is essential. This blog post will guide you through the fundamentals of [React Router](https://reactrouter.com/en/main), a library that enables dynamic routing in a web application.\n\nThis post is designed for developers who are familiar with React and are looking to deepen their understanding of SPAs and routing. Also note routing changed a lot from [v5 to v6](https://reactrouter.com/en/main/upgrading/v5) be wary when following online tutorials :).\n\n## What is React Router?\n\n[React Router](https://www.npmjs.com/package/react-router) is a standard library for routing in React. It allows you to build a single-page web application with navigation without the page refreshing as the user navigates.\n\nReact Router uses a component structure to call components, which display the appropriate information.\n\n![React Router NPM page listing](https://cdn.hashnode.com/res/hashnode/image/upload/v1700846699325/2ba772df-9700-4bb5-a567-905ed64ae6db.png)\n\n### Why Use React Router?\n\n- **Seamless Navigation** : It enables the navigation between different components in your application without reloading the page.\n\n- **Maintains UI State** : Helps in managing the UI state consistent with the URL.\n\n- **Dynamic Routing** : React Router allows dynamic routing, which means routes are defined as your application renders, not in a configuration or convention outside of a running app.\n\n## Setting Up React Router\n\nFirst, you need to install React Router by running `npm install react-router-dom`. This package includes the DOM bindings for the React Router. Once installed, you can start using it in your application.\n\n## Basic Routing with React Router\n\nHere is a simple example of how to use React Router for basic navigation.\n\n### Step 1: Import Required Components from React Router\n\n```\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n```\n\n### Step 2: Define Your Routes\n\nWrap your application in the `Router` component, then define your routes using the `Route` component. `Routes` is used to group `Route` components.\n\n```\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    \u003cRouter\u003e\n      \u003cdiv\u003e\n        \u003cnav\u003e\n          \u003cul\u003e\n            \u003cli\u003e\n              \u003cLink to=\"/\"\u003eHome\u003c/Link\u003e\n            \u003c/li\u003e\n            \u003cli\u003e\n              \u003cLink to=\"/about\"\u003eAbout\u003c/Link\u003e\n            \u003c/li\u003e\n            \u003cli\u003e\n              \u003cLink to=\"/users\"\u003eUsers\u003c/Link\u003e\n            \u003c/li\u003e\n          \u003c/ul\u003e\n        \u003c/nav\u003e\n        \u003cRoutes\u003e\n          \u003cRoute path=\"/about\" element={\u003cAbout /\u003e} /\u003e\n          \u003cRoute path=\"/users\" element={\u003cUsers /\u003e} /\u003e\n          \u003cRoute path=\"/\" element={\u003cHome /\u003e} /\u003e\n        \u003c/Routes\u003e\n      \u003c/div\u003e\n    \u003c/Router\u003e\n  );\n}\n\n```\n\n### Step 3: Create Components for Your Routes\n\nDefine the components that correspond to your routes.\n\n```\nfunction Home() {\n  return \u003ch2\u003eHome\u003c/h2\u003e;\n}\n\nfunction About() {\n  return \u003ch2\u003eAbout\u003c/h2\u003e;\n}\n\nfunction Users() {\n  return \u003ch2\u003eUsers\u003c/h2\u003e;\n}\n\n```\n\nAnd voil you've created routes!\n\n![](https://cdn.hashnode.com/res/hashnode/image/upload/v1700847318179/055ca449-863e-424a-9ee4-5002fa672950.png)\n\n## Advanced Routing Concepts\n\n- [**Nested Routing**](https://reactrouter.com/en/main/start/overview#nested-routes): This allows you to nest routes within routes, creating a hierarchy of views.\n\n- [**Dynamic Routing**](https://reactrouter.com/en/main/route/route#dynamic-segments): React Router can dynamically match parts of the URL and pass them as props to components.\n\n- **Protected Routes** : Implementing authentication in your routes to control access to certain parts of your app.\n\n- [**Code Splitting**](https://dev.to/scc33/learn-react-basics-code-splitting-6hn-temp-slug-4055446): Consider code-splitting your routes for best performance.\n\n## Best Practices\n\n- Keep your routes structured and predictable.\n\n- Utilize [`useParams`](https://reactrouter.com/en/main/hooks/use-params) and other hooks for more dynamic and complex routing scenarios.\n\n- Always test your routes and navigation thoroughly. These can be difficult to unit test so acceptance and end-to-end style tests written in a library like [Playwright](https://playwright.dev) can be helpful.\n\n## Conclusion\n\nReact Router plays a vital role in building SPAs by enabling efficient and smooth navigation.\n\nUnderstanding how to implement routing effectively can greatly enhance the user experience and the performance of your React application.\n\n## Further Reading and Documentation\n\n- Official React Router Documentation: [React Router - Documentation](https://reactrouter.com/)\n\nRouting in React, especially with React Router, opens up a world of possibilities for building dynamic, user-friendly SPAs. With this guide, you are well on your way to mastering this essential aspect of React development.\n\nHappy coding!","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Introduction   In the world of React development, understanding how to handle routing in...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/learn-react-basics-react-router-navigating-single-page-applications-h3k-temp-slug-5244047","public_reactions_count":0,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"introduction\" href=\"#introduction\"\u003e\n  \u003c/a\u003e\n  Introduction\n\u003c/h2\u003e\n\n\u003cp\u003eIn the world of React development, understanding how to handle routing in \u003ca href=\"https://en.wikipedia.org/wiki/Single-page_application\"\u003esingle-page applications (SPAs)\u003c/a\u003e is essential. This blog post will guide you through the fundamentals of \u003ca href=\"https://reactrouter.com/en/main\"\u003eReact Router\u003c/a\u003e, a library that enables dynamic routing in a web application.\u003c/p\u003e\n\n\u003cp\u003eThis post is designed for developers who are familiar with React and are looking to deepen their understanding of SPAs and routing. Also note routing changed a lot from \u003ca href=\"https://reactrouter.com/en/main/upgrading/v5\"\u003ev5 to v6\u003c/a\u003e be wary when following online tutorials :).\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what-is-react-router\" href=\"#what-is-react-router\"\u003e\n  \u003c/a\u003e\n  What is React Router?\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.npmjs.com/package/react-router\"\u003eReact Router\u003c/a\u003e is a standard library for routing in React. It allows you to build a single-page web application with navigation without the page refreshing as the user navigates.\u003c/p\u003e\n\n\u003cp\u003eReact Router uses a component structure to call components, which display the appropriate information.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--z-RsrIK0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700846699325/2ba772df-9700-4bb5-a567-905ed64ae6db.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--z-RsrIK0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700846699325/2ba772df-9700-4bb5-a567-905ed64ae6db.png\" alt=\"React Router NPM page listing\" loading=\"lazy\" width=\"800\" height=\"385\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"why-use-react-router\" href=\"#why-use-react-router\"\u003e\n  \u003c/a\u003e\n  Why Use React Router?\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSeamless Navigation\u003c/strong\u003e : It enables the navigation between different components in your application without reloading the page.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eMaintains UI State\u003c/strong\u003e : Helps in managing the UI state consistent with the URL.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eDynamic Routing\u003c/strong\u003e : React Router allows dynamic routing, which means routes are defined as your application renders, not in a configuration or convention outside of a running app.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"setting-up-react-router\" href=\"#setting-up-react-router\"\u003e\n  \u003c/a\u003e\n  Setting Up React Router\n\u003c/h2\u003e\n\n\u003cp\u003eFirst, you need to install React Router by running \u003ccode\u003enpm install react-router-dom\u003c/code\u003e. This package includes the DOM bindings for the React Router. Once installed, you can start using it in your application.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"basic-routing-with-react-router\" href=\"#basic-routing-with-react-router\"\u003e\n  \u003c/a\u003e\n  Basic Routing with React Router\n\u003c/h2\u003e\n\n\u003cp\u003eHere is a simple example of how to use React Router for basic navigation.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"step-1-import-required-components-from-react-router\" href=\"#step-1-import-required-components-from-react-router\"\u003e\n  \u003c/a\u003e\n  Step 1: Import Required Components from React Router\n\u003c/h3\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch3\u003e\n  \u003ca name=\"step-2-define-your-routes\" href=\"#step-2-define-your-routes\"\u003e\n  \u003c/a\u003e\n  Step 2: Define Your Routes\n\u003c/h3\u003e\n\n\u003cp\u003eWrap your application in the \u003ccode\u003eRouter\u003c/code\u003e component, then define your routes using the \u003ccode\u003eRoute\u003c/code\u003e component. \u003ccode\u003eRoutes\u003c/code\u003e is used to group \u003ccode\u003eRoute\u003c/code\u003e components.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    \u0026lt;Router\u0026gt;\n      \u0026lt;div\u0026gt;\n        \u0026lt;nav\u0026gt;\n          \u0026lt;ul\u0026gt;\n            \u0026lt;li\u0026gt;\n              \u0026lt;Link to=\"/\"\u0026gt;Home\u0026lt;/Link\u0026gt;\n            \u0026lt;/li\u0026gt;\n            \u0026lt;li\u0026gt;\n              \u0026lt;Link to=\"/about\"\u0026gt;About\u0026lt;/Link\u0026gt;\n            \u0026lt;/li\u0026gt;\n            \u0026lt;li\u0026gt;\n              \u0026lt;Link to=\"/users\"\u0026gt;Users\u0026lt;/Link\u0026gt;\n            \u0026lt;/li\u0026gt;\n          \u0026lt;/ul\u0026gt;\n        \u0026lt;/nav\u0026gt;\n        \u0026lt;Routes\u0026gt;\n          \u0026lt;Route path=\"/about\" element={\u0026lt;About /\u0026gt;} /\u0026gt;\n          \u0026lt;Route path=\"/users\" element={\u0026lt;Users /\u0026gt;} /\u0026gt;\n          \u0026lt;Route path=\"/\" element={\u0026lt;Home /\u0026gt;} /\u0026gt;\n        \u0026lt;/Routes\u0026gt;\n      \u0026lt;/div\u0026gt;\n    \u0026lt;/Router\u0026gt;\n  );\n}\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch3\u003e\n  \u003ca name=\"step-3-create-components-for-your-routes\" href=\"#step-3-create-components-for-your-routes\"\u003e\n  \u003c/a\u003e\n  Step 3: Create Components for Your Routes\n\u003c/h3\u003e\n\n\u003cp\u003eDefine the components that correspond to your routes.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003efunction Home() {\n  return \u0026lt;h2\u0026gt;Home\u0026lt;/h2\u0026gt;;\n}\n\nfunction About() {\n  return \u0026lt;h2\u0026gt;About\u0026lt;/h2\u0026gt;;\n}\n\nfunction Users() {\n  return \u0026lt;h2\u0026gt;Users\u0026lt;/h2\u0026gt;;\n}\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eAnd voil you've created routes!\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s---Ej3XCPY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700847318179/055ca449-863e-424a-9ee4-5002fa672950.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s---Ej3XCPY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700847318179/055ca449-863e-424a-9ee4-5002fa672950.png\" alt=\"\" loading=\"lazy\" width=\"800\" height=\"556\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"advanced-routing-concepts\" href=\"#advanced-routing-concepts\"\u003e\n  \u003c/a\u003e\n  Advanced Routing Concepts\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://reactrouter.com/en/main/start/overview#nested-routes\"\u003e\u003cstrong\u003eNested Routing\u003c/strong\u003e\u003c/a\u003e: This allows you to nest routes within routes, creating a hierarchy of views.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://reactrouter.com/en/main/route/route#dynamic-segments\"\u003e\u003cstrong\u003eDynamic Routing\u003c/strong\u003e\u003c/a\u003e: React Router can dynamically match parts of the URL and pass them as props to components.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eProtected Routes\u003c/strong\u003e : Implementing authentication in your routes to control access to certain parts of your app.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://dev.to/scc33/learn-react-basics-code-splitting-6hn-temp-slug-4055446\"\u003e\u003cstrong\u003eCode Splitting\u003c/strong\u003e\u003c/a\u003e: Consider code-splitting your routes for best performance.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"best-practices\" href=\"#best-practices\"\u003e\n  \u003c/a\u003e\n  Best Practices\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eKeep your routes structured and predictable.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eUtilize \u003ca href=\"https://reactrouter.com/en/main/hooks/use-params\"\u003e\u003ccode\u003euseParams\u003c/code\u003e\u003c/a\u003e and other hooks for more dynamic and complex routing scenarios.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eAlways test your routes and navigation thoroughly. These can be difficult to unit test so acceptance and end-to-end style tests written in a library like \u003ca href=\"https://playwright.dev\"\u003ePlaywright\u003c/a\u003e can be helpful.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eReact Router plays a vital role in building SPAs by enabling efficient and smooth navigation.\u003c/p\u003e\n\n\u003cp\u003eUnderstanding how to implement routing effectively can greatly enhance the user experience and the performance of your React application.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"further-reading-and-documentation\" href=\"#further-reading-and-documentation\"\u003e\n  \u003c/a\u003e\n  Further Reading and Documentation\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eOfficial React Router Documentation: \u003ca href=\"https://reactrouter.com/\"\u003eReact Router - Documentation\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eRouting in React, especially with React Router, opens up a world of possibilities for building dynamic, user-friendly SPAs. With this guide, you are well on your way to mastering this essential aspect of React development.\u003c/p\u003e\n\n\u003cp\u003eHappy coding!\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"learn-react-basics-react-router-navigating-single-page-applications-h3k-temp-slug-5244047","social_image":null,"title":"Learn React Basics: React Router \u0026 Navigating Single Page Applications","video":null,"video_code":null},{"created_at":"2023-11-25T00:21:19.711Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/creating-images-with-dalle-and-gpt","feed_source_url":"https://blog.seancoughlin.me/creating-images-with-dalle-and-gpt","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Creating Images with Dall·E and GPT\npublished: false\ndate: 2023-11-24 19:51:53 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/creating-images-with-dalle-and-gpt\n---\n\n## Introduction\n\nLately, I've started using [DallE 3](https://openai.com/dall-e-3) and its [integration into ChatGPT](https://openai.com/blog/dall-e-3-is-now-available-in-chatgpt-plus-and-enterprise) to create cover art for my posts. I used to use code screens, Giphy images, or nothing at all because I'm not a very artistic person.\n\nGPT has opened up a whole new avenue of creativity for me. I think these AI-generated pieces have been making my posts a little more creative and far more unique.\n\nIn the spirit of generative AI, I asked GPT to write its own explanation of how to use it. The prompts were created by me but the text and image output you see are from the bot.\n\nNow, without further ado, here is the blog post explaining how to create artwork for your posts using GPT.\n\n## GPT's Intro (it is pretty formulaic)\n\n\u003e Welcome to my latest blog post, where we dive into an exciting feature of ChatGPT the ability to create images! If you've ever wished for a tool that could bring your ideas to life visually, then you're in for a treat. In this post, we'll explore how ChatGPT, with its integration of Dalle, can transform your descriptions into vivid, detailed images. Whether it's for creative projects, conceptual visualization, or just for fun, you'll see how effortlessly ChatGPT can turn your imagination into stunning visuals. Let's embark on this creative journey together and unlock the potential of AI-powered image generation!\n\n## Example Image Creation Process with GPT\n\n\u003e **User** : Hi! I want an image created using Dalle that looks like a futuristic cityscape at dusk, with flying cars and neon lights, sized at 1600x840.\n\u003e \n\u003e **ChatGPT** : Sure thing! I'll create an image of a futuristic cityscape at dusk for you. This city will have flying cars zipping through the sky and buildings illuminated with neon lights. The size will be 1600x840. Just a moment while I work on this.\n\u003e \n\u003e [ChatGPT processes the request and generates the image]\n\u003e \n\u003e **ChatGPT** : Here's your image! It captures a bustling, futuristic city at dusk, complete with flying cars and vibrant neon lights. Is there anything else you'd like to add or change in this image?\n\nIt's that simple! Now you'll have cool-looking artwork to incorporate. Two notes:\n\n1. This currently requires a pro subscription to ChatGPT.\n\n2. The images are generated as PNGs with huge file sizes (I'd recommend exporting into something more efficient like JPEG).\n\n## DallE Examples\n\nI bet you wanted to see some examples ;).\n\n### Futuristic Cityscape\n\n\u003e Hi! I want an image created using Dalle that looks like a futuristic cityscape at dusk, with flying cars and neon lights, sized at 1600x840.\n\n![Futuristic cityscape](https://cdn.hashnode.com/res/hashnode/image/upload/v1700850068695/dd858517-b3a3-43f2-b922-3a096f3794fc.jpeg)\n\n### Dragons\n\n\u003e Hi! I want an image created using Dalle that looks like a fantasy mountain range at dawn, with a flying riot of dragons in the distance, sized at 1600x840.\n\n![Dragons flying over a vale](https://cdn.hashnode.com/res/hashnode/image/upload/v1700850073976/e9f0ba5e-cd73-4f61-934e-a4ba1861bb62.jpeg)\n\n### Robots Coding\n\n\u003e Hi! I want an image created using Dalle that looks like robots working in a giant office with code flying out of their hands at computer screens, sized at 1600x840.\n\n![](https://cdn.hashnode.com/res/hashnode/image/upload/v1700850439605/a01d17c3-61e7-463d-a57d-136fbfdc7429.jpeg)\n\n### A Spy\n\n\u003e Hi! I want an image created using Dalle that looks like a spy walking down a dark city street with just one street lamp above (1950s Cold War-style), sized at 1600x840.\n\n![A spy](https://cdn.hashnode.com/res/hashnode/image/upload/v1700850384970/56c561b2-b4dd-42e0-bbd6-0ceb23ced360.jpeg)\n\n### A Mouse\n\n\u003e Hi! I want an image created using Dalle that looks like a mouse wandering in a field of wheat, sized at 1600x840.\n\n![](https://cdn.hashnode.com/res/hashnode/image/upload/v1700855434752/47000de3-8220-4c20-8f79-6e83eeccbcb1.jpeg)\n\nHopefully, you can use this quick tutorial to create wonderful things. Cheers!","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Introduction   Lately, I've started using DallE 3 and its integration into ChatGPT to create...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/creating-images-with-dalle-and-gpt-56c5-temp-slug-9426438","public_reactions_count":0,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"introduction\" href=\"#introduction\"\u003e\n  \u003c/a\u003e\n  Introduction\n\u003c/h2\u003e\n\n\u003cp\u003eLately, I've started using \u003ca href=\"https://openai.com/dall-e-3\"\u003eDallE 3\u003c/a\u003e and its \u003ca href=\"https://openai.com/blog/dall-e-3-is-now-available-in-chatgpt-plus-and-enterprise\"\u003eintegration into ChatGPT\u003c/a\u003e to create cover art for my posts. I used to use code screens, Giphy images, or nothing at all because I'm not a very artistic person.\u003c/p\u003e\n\n\u003cp\u003eGPT has opened up a whole new avenue of creativity for me. I think these AI-generated pieces have been making my posts a little more creative and far more unique.\u003c/p\u003e\n\n\u003cp\u003eIn the spirit of generative AI, I asked GPT to write its own explanation of how to use it. The prompts were created by me but the text and image output you see are from the bot.\u003c/p\u003e\n\n\u003cp\u003eNow, without further ado, here is the blog post explaining how to create artwork for your posts using GPT.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"gpts-intro-it-is-pretty-formulaic\" href=\"#gpts-intro-it-is-pretty-formulaic\"\u003e\n  \u003c/a\u003e\n  GPT's Intro (it is pretty formulaic)\n\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eWelcome to my latest blog post, where we dive into an exciting feature of ChatGPT the ability to create images! If you've ever wished for a tool that could bring your ideas to life visually, then you're in for a treat. In this post, we'll explore how ChatGPT, with its integration of Dalle, can transform your descriptions into vivid, detailed images. Whether it's for creative projects, conceptual visualization, or just for fun, you'll see how effortlessly ChatGPT can turn your imagination into stunning visuals. Let's embark on this creative journey together and unlock the potential of AI-powered image generation!\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"example-image-creation-process-with-gpt\" href=\"#example-image-creation-process-with-gpt\"\u003e\n  \u003c/a\u003e\n  Example Image Creation Process with GPT\n\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eUser\u003c/strong\u003e : Hi! I want an image created using Dalle that looks like a futuristic cityscape at dusk, with flying cars and neon lights, sized at 1600x840.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eChatGPT\u003c/strong\u003e : Sure thing! I'll create an image of a futuristic cityscape at dusk for you. This city will have flying cars zipping through the sky and buildings illuminated with neon lights. The size will be 1600x840. Just a moment while I work on this.\u003c/p\u003e\n\n\u003cp\u003e[ChatGPT processes the request and generates the image]\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eChatGPT\u003c/strong\u003e : Here's your image! It captures a bustling, futuristic city at dusk, complete with flying cars and vibrant neon lights. Is there anything else you'd like to add or change in this image?\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eIt's that simple! Now you'll have cool-looking artwork to incorporate. Two notes:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eThis currently requires a pro subscription to ChatGPT.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe images are generated as PNGs with huge file sizes (I'd recommend exporting into something more efficient like JPEG).\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"dalle-examples\" href=\"#dalle-examples\"\u003e\n  \u003c/a\u003e\n  DallE Examples\n\u003c/h2\u003e\n\n\u003cp\u003eI bet you wanted to see some examples ;).\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"futuristic-cityscape\" href=\"#futuristic-cityscape\"\u003e\n  \u003c/a\u003e\n  Futuristic Cityscape\n\u003c/h3\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eHi! I want an image created using Dalle that looks like a futuristic cityscape at dusk, with flying cars and neon lights, sized at 1600x840.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--zMez7ZuD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700850068695/dd858517-b3a3-43f2-b922-3a096f3794fc.jpeg\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--zMez7ZuD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700850068695/dd858517-b3a3-43f2-b922-3a096f3794fc.jpeg\" alt=\"Futuristic cityscape\" loading=\"lazy\" width=\"800\" height=\"457\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"dragons\" href=\"#dragons\"\u003e\n  \u003c/a\u003e\n  Dragons\n\u003c/h3\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eHi! I want an image created using Dalle that looks like a fantasy mountain range at dawn, with a flying riot of dragons in the distance, sized at 1600x840.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ZLyJa50G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700850073976/e9f0ba5e-cd73-4f61-934e-a4ba1861bb62.jpeg\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ZLyJa50G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700850073976/e9f0ba5e-cd73-4f61-934e-a4ba1861bb62.jpeg\" alt=\"Dragons flying over a vale\" loading=\"lazy\" width=\"800\" height=\"457\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"robots-coding\" href=\"#robots-coding\"\u003e\n  \u003c/a\u003e\n  Robots Coding\n\u003c/h3\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eHi! I want an image created using Dalle that looks like robots working in a giant office with code flying out of their hands at computer screens, sized at 1600x840.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--2rLOeKvb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700850439605/a01d17c3-61e7-463d-a57d-136fbfdc7429.jpeg\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--2rLOeKvb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700850439605/a01d17c3-61e7-463d-a57d-136fbfdc7429.jpeg\" alt=\"\" loading=\"lazy\" width=\"800\" height=\"457\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"a-spy\" href=\"#a-spy\"\u003e\n  \u003c/a\u003e\n  A Spy\n\u003c/h3\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eHi! I want an image created using Dalle that looks like a spy walking down a dark city street with just one street lamp above (1950s Cold War-style), sized at 1600x840.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--zyWUmCzQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700850384970/56c561b2-b4dd-42e0-bbd6-0ceb23ced360.jpeg\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--zyWUmCzQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700850384970/56c561b2-b4dd-42e0-bbd6-0ceb23ced360.jpeg\" alt=\"A spy\" loading=\"lazy\" width=\"800\" height=\"457\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"a-mouse\" href=\"#a-mouse\"\u003e\n  \u003c/a\u003e\n  A Mouse\n\u003c/h3\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eHi! I want an image created using Dalle that looks like a mouse wandering in a field of wheat, sized at 1600x840.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s---Kv5QfkA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700855434752/47000de3-8220-4c20-8f79-6e83eeccbcb1.jpeg\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s---Kv5QfkA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700855434752/47000de3-8220-4c20-8f79-6e83eeccbcb1.jpeg\" alt=\"\" loading=\"lazy\" width=\"800\" height=\"457\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eHopefully, you can use this quick tutorial to create wonderful things. Cheers!\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"creating-images-with-dalle-and-gpt-56c5-temp-slug-9426438","social_image":null,"title":"Creating Images with Dall·E and GPT","video":null,"video_code":null},{"created_at":"2023-11-25T20:20:50.990Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/learn-react-basics-redux","feed_source_url":"https://blog.seancoughlin.me/learn-react-basics-redux","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Learn React Basics: Redux\npublished: false\ndate: 2023-11-25 19:33:48 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/learn-react-basics-redux\n---\n\nRedux has emerged as a significant player in the realm of state management for modern web applications, particularly those built with React.\n\nPowerfully, its utility extends beyond React, making it a versatile choice for developers. However, it is a complex library with a high learning curve and a lot of boilerplate.\n\nIn this blog post, we'll dive into what Redux is, its use cases, and how it integrates with React, along with alternatives and an introduction to Redux Toolkit.\n\n[![Redux NPM page](https://cdn.hashnode.com/res/hashnode/image/upload/v1700940248490/2b24f3c4-42d3-4ddb-9e54-81772e75c77e.png)](https://www.npmjs.com/package/redux)\n\n## What is Redux?\n\nRedux is both a pattern and a library for managing and updating application state, using events called \"actions\". One mental shortcut for thinking about Redux is that it's a client-side database.\n\nIt's based on the [Flux architecture](https://www.geeksforgeeks.org/redux-and-the-flux-architecture/), but with simpler and more predictable behavior, thanks in part to its use of a single central store. This design makes state mutations predictable in large-scale applications.\n\nThis type of architecture is sometimes called a [unidirectional data flow](https://en.wikipedia.org/wiki/Unidirectional_Data_Flow_(computer_science)). It is a powerful concept, but not typically how I think of using data in an application.\n\nRedux was [built by Facebook and released in 2015](https://en.wikipedia.org/wiki/Redux_(JavaScript_library)). Redux operates with a few key patterns that define the structure of the library and how it functions.\n\n- [Redux Documentation](https://redux.js.org/)\n\n### Redux as a Pattern\n\nAs a pattern, Redux establishes strict guidelines for how state should be updated and accessed. This pattern involves three main principles:\n\n1. **Single Source of Truth** : The state of your entire application is stored in an object tree within a single store.\n\n2. **State is Read-Only** : The only way to change the state is to emit an action, an object describing what happened.\n\n3. **Changes are Made with Pure Functions** : To specify how the state tree is transformed by actions, you write pure reducers.\n\n- [Redux's Three Principles](https://redux.js.org/understanding/thinking-in-redux/three-principles)\n\n### Redux as a Library\n\nAs a library, Redux provides a [lightweight and flexible API](https://redux.js.org/api/api-reference) to implement this pattern. It offers functions like [`createStore`](https://redux.js.org/api/createstore), [`combineReducers`](https://redux.js.org/tutorials/fundamentals/part-3-state-actions-reducers#combinereducers), and [`applyMiddleware`](https://redux.js.org/api/applymiddleware) to help manage the state and integrate middleware.\n\nBe warned. While the API might seem small, warm, and fuzzy, it is chocked full of boilerplate and confusing pitfalls. This is just a high-level overview and I would recommend watching and reading more tutorials before diving into implementation.\n\n## When to Use Redux\n\nRedux shines in scenarios where:\n\n- You have large-scale, complex applications with significant amounts of application state.\n\n- Multiple parts of the application need to access and modify the same state.\n\n- The state structure is complex or involves deep nesting.\n\n- You need a predictable state with a powerful debugging toolset.\n\n## Integrating Redux with React\n\nHere's how to quickly install Redux:\n\n```\nyarn add -D redux\n\n```\n\nAnd here's a simple example of using Redux in a React application:\n\n```\nimport { createStore } from 'redux';\n\n// Reducer function\nfunction counter(state = 0, action) {\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + 1;\n    case 'DECREMENT':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\n// Create Redux store\nconst store = createStore(counter);\n\n// React Component\nfunction Counter () {\n    return (\n      \u003cdiv\u003e\n        \u003cbutton onClick={() =\u003e store.dispatch({ type: 'DECREMENT' })}\u003e-\u003c/button\u003e\n        \u003cspan\u003e{store.getState()}\u003c/span\u003e\n        \u003cbutton onClick={() =\u003e store.dispatch({ type: 'INCREMENT' })}\u003e+\u003c/button\u003e\n      \u003c/div\u003e\n    );\n}\n\nexport default Counter;\n\n```\n\n- [React-Redux Documentation Quick Start](https://react-redux.js.org/tutorials/quick-start)\n\n### Redux DevTools\n\nRedux DevTools is a powerful debugging tool that enhances the development experience with Redux.\n\nIt provides a live-editing and time-traveling environment, allowing developers to inspect every state and action payload, track state changes over time, and even \"travel back in time\" by reverting to previous states. This makes it easier to understand how and why your application's state changes, facilitating debugging and development.\n\nThe DevTools can be used as a browser extension, offering features like action replay and state snapshots. This tool is invaluable for developers working with Redux, as it provides deep insights into the state and behavior of their applications, greatly simplifying the debugging process.\n\n![Redux dev tools chrome extension](https://lh3.googleusercontent.com/ji5MEDLJ4bCt4FqacHWhcAAvC2aMXs537utkDQdTaFs4T3RgyZIwJRiXX9i9_SBcmJY219PE-lsCr0OmqJ29uC7Xbw=s1280-w1280-h800)\n\n- [Redux DevTools](https://github.com/zalmoxisus/redux-devtools-extension)\n\n- [Redux DevTools Chrome Extension](https://chromewebstore.google.com/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd?pli=1)\n\n## Alternatives to Redux\n\nWhile Redux is popular, it's not the only option for state management in React applications. Alternatives include:\n\n- [**Context API** :](https://legacy.reactjs.org/docs/context.html) A React feature for passing data through the component tree without having to pass props down manually.\n\n- [**MobX**](https://mobx.js.org/README.html): A library that makes state management simple and scalable by transparently applying functional reactive programming.\n\n- [**Recoil**](https://recoiljs.org): A state management library for React that provides several capabilities to efficiently manage state with minimal boilerplate.\n\n## Redux Beyond React\n\nRedux is not exclusively tied to React. It can be used with any UI layer or framework, including Angular, Vue, and even vanilla JavaScript. This universality is part of what makes Redux a versatile tool in a developer's arsenal.\n\n- [Redux in Angular](https://blog.angular-university.io/angular-2-redux-ngrx-rxjs/)\n\n## Redux Toolkit\n\nRedux Toolkit is the \"[official, opinionated, batteries-included toolset for efficient Redux development](https://redux.js.org/redux-toolkit/overview#what-is-redux-toolkit).\" It simplifies store setup, reduces boilerplate, and even includes utilities to define reducers and perform asynchronous logic.\n\nBy incorporating best practices and simplifying common Redux patterns, RTK makes Redux development more straightforward and maintainable. It's an essential toolkit for any developer working with Redux, streamlining state management tasks and enhancing productivity.\n\nIn my professional experience, production environments are not using plain Redux anymore. They use Redux Toolkit because it greatly improves the developer experience.\n\n- [Redux Toolkit Documentation](https://redux-toolkit.js.org)\n\n[![Redux toolkit NPM page](https://cdn.hashnode.com/res/hashnode/image/upload/v1700940764188/4c9cbfda-637b-483b-846e-1c5a137a3918.png)](https://www.npmjs.com/package/@reduxjs/toolkit)\n\n* * *\n\n## Further Learning\n\nTo deepen your understanding of Redux and its ecosystem, here are some resources:\n\n- [Redux Essentials](https://redux.js.org/tutorials/essentials/part-1-overview-concepts)\n\n- [Redux Advanced Tutorial](https://redux.js.org/tutorials/fundamentals/part-1-overview)\n\n- [React-Redux Documentation](https://react-redux.js.org/)\n\n- [Redux Toolkit Tutorial](https://redux-toolkit.js.org/tutorials/overview)\n\nBy embracing Redux and its alternatives, developers can choose the most suitable state management strategy for their React applications, enhancing scalability, maintainability, and developer experience.\n\nAs usual, no one explains it better than [Fireship](https://www.youtube.com/@Fireship). These 100-second videos are wicked good and I would always highly recommend them.\n\n[https://youtu.be/\\_shA5Xwe8\\_4?si=97XQY9fzlVFvDOB1](https://youtu.be/_shA5Xwe8_4?si=97XQY9fzlVFvDOB1)\n\nOne last note. Don't forget that Redux and state management tools might be overkill! If you're building a small app or just learning, you might be able to forgo any complex libraries.\n\nCheers! Best of luck coding!","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Redux has emerged as a significant player in the realm of state management for modern web...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/learn-react-basics-redux-5fia-temp-slug-3027464","public_reactions_count":0,"processed_html":"\u003cp\u003eRedux has emerged as a significant player in the realm of state management for modern web applications, particularly those built with React.\u003c/p\u003e\n\n\u003cp\u003ePowerfully, its utility extends beyond React, making it a versatile choice for developers. However, it is a complex library with a high learning curve and a lot of boilerplate.\u003c/p\u003e\n\n\u003cp\u003eIn this blog post, we'll dive into what Redux is, its use cases, and how it integrates with React, along with alternatives and an introduction to Redux Toolkit.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.npmjs.com/package/redux\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--5DXcZm1d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700940248490/2b24f3c4-42d3-4ddb-9e54-81772e75c77e.png\" alt=\"Redux NPM page\" loading=\"lazy\" width=\"800\" height=\"601\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what-is-redux\" href=\"#what-is-redux\"\u003e\n  \u003c/a\u003e\n  What is Redux?\n\u003c/h2\u003e\n\n\u003cp\u003eRedux is both a pattern and a library for managing and updating application state, using events called \"actions\". One mental shortcut for thinking about Redux is that it's a client-side database.\u003c/p\u003e\n\n\u003cp\u003eIt's based on the \u003ca href=\"https://www.geeksforgeeks.org/redux-and-the-flux-architecture/\"\u003eFlux architecture\u003c/a\u003e, but with simpler and more predictable behavior, thanks in part to its use of a single central store. This design makes state mutations predictable in large-scale applications.\u003c/p\u003e\n\n\u003cp\u003eThis type of architecture is sometimes called a \u003ca href=\"https://en.wikipedia.org/wiki/Unidirectional_Data_Flow_(computer_science)\"\u003eunidirectional data flow\u003c/a\u003e. It is a powerful concept, but not typically how I think of using data in an application.\u003c/p\u003e\n\n\u003cp\u003eRedux was \u003ca href=\"https://en.wikipedia.org/wiki/Redux_(JavaScript_library)\"\u003ebuilt by Facebook and released in 2015\u003c/a\u003e. Redux operates with a few key patterns that define the structure of the library and how it functions.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://redux.js.org/\"\u003eRedux Documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"redux-as-a-pattern\" href=\"#redux-as-a-pattern\"\u003e\n  \u003c/a\u003e\n  Redux as a Pattern\n\u003c/h3\u003e\n\n\u003cp\u003eAs a pattern, Redux establishes strict guidelines for how state should be updated and accessed. This pattern involves three main principles:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSingle Source of Truth\u003c/strong\u003e : The state of your entire application is stored in an object tree within a single store.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eState is Read-Only\u003c/strong\u003e : The only way to change the state is to emit an action, an object describing what happened.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eChanges are Made with Pure Functions\u003c/strong\u003e : To specify how the state tree is transformed by actions, you write pure reducers.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://redux.js.org/understanding/thinking-in-redux/three-principles\"\u003eRedux's Three Principles\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"redux-as-a-library\" href=\"#redux-as-a-library\"\u003e\n  \u003c/a\u003e\n  Redux as a Library\n\u003c/h3\u003e\n\n\u003cp\u003eAs a library, Redux provides a \u003ca href=\"https://redux.js.org/api/api-reference\"\u003elightweight and flexible API\u003c/a\u003e to implement this pattern. It offers functions like \u003ca href=\"https://redux.js.org/api/createstore\"\u003e\u003ccode\u003ecreateStore\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://redux.js.org/tutorials/fundamentals/part-3-state-actions-reducers#combinereducers\"\u003e\u003ccode\u003ecombineReducers\u003c/code\u003e\u003c/a\u003e, and \u003ca href=\"https://redux.js.org/api/applymiddleware\"\u003e\u003ccode\u003eapplyMiddleware\u003c/code\u003e\u003c/a\u003e to help manage the state and integrate middleware.\u003c/p\u003e\n\n\u003cp\u003eBe warned. While the API might seem small, warm, and fuzzy, it is chocked full of boilerplate and confusing pitfalls. This is just a high-level overview and I would recommend watching and reading more tutorials before diving into implementation.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"when-to-use-redux\" href=\"#when-to-use-redux\"\u003e\n  \u003c/a\u003e\n  When to Use Redux\n\u003c/h2\u003e\n\n\u003cp\u003eRedux shines in scenarios where:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eYou have large-scale, complex applications with significant amounts of application state.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eMultiple parts of the application need to access and modify the same state.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe state structure is complex or involves deep nesting.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eYou need a predictable state with a powerful debugging toolset.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"integrating-redux-with-react\" href=\"#integrating-redux-with-react\"\u003e\n  \u003c/a\u003e\n  Integrating Redux with React\n\u003c/h2\u003e\n\n\u003cp\u003eHere's how to quickly install Redux:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eyarn add -D redux\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eAnd here's a simple example of using Redux in a React application:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eimport { createStore } from 'redux';\n\n// Reducer function\nfunction counter(state = 0, action) {\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + 1;\n    case 'DECREMENT':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\n// Create Redux store\nconst store = createStore(counter);\n\n// React Component\nfunction Counter () {\n    return (\n      \u0026lt;div\u0026gt;\n        \u0026lt;button onClick={() =\u0026gt; store.dispatch({ type: 'DECREMENT' })}\u0026gt;-\u0026lt;/button\u0026gt;\n        \u0026lt;span\u0026gt;{store.getState()}\u0026lt;/span\u0026gt;\n        \u0026lt;button onClick={() =\u0026gt; store.dispatch({ type: 'INCREMENT' })}\u0026gt;+\u0026lt;/button\u0026gt;\n      \u0026lt;/div\u0026gt;\n    );\n}\n\nexport default Counter;\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://react-redux.js.org/tutorials/quick-start\"\u003eReact-Redux Documentation Quick Start\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"redux-devtools\" href=\"#redux-devtools\"\u003e\n  \u003c/a\u003e\n  Redux DevTools\n\u003c/h3\u003e\n\n\u003cp\u003eRedux DevTools is a powerful debugging tool that enhances the development experience with Redux.\u003c/p\u003e\n\n\u003cp\u003eIt provides a live-editing and time-traveling environment, allowing developers to inspect every state and action payload, track state changes over time, and even \"travel back in time\" by reverting to previous states. This makes it easier to understand how and why your application's state changes, facilitating debugging and development.\u003c/p\u003e\n\n\u003cp\u003eThe DevTools can be used as a browser extension, offering features like action replay and state snapshots. This tool is invaluable for developers working with Redux, as it provides deep insights into the state and behavior of their applications, greatly simplifying the debugging process.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--8tHZ1tVb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://lh3.googleusercontent.com/ji5MEDLJ4bCt4FqacHWhcAAvC2aMXs537utkDQdTaFs4T3RgyZIwJRiXX9i9_SBcmJY219PE-lsCr0OmqJ29uC7Xbw%3Ds1280-w1280-h800\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--8tHZ1tVb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://lh3.googleusercontent.com/ji5MEDLJ4bCt4FqacHWhcAAvC2aMXs537utkDQdTaFs4T3RgyZIwJRiXX9i9_SBcmJY219PE-lsCr0OmqJ29uC7Xbw%3Ds1280-w1280-h800\" alt=\"Redux dev tools chrome extension\" loading=\"lazy\" width=\"800\" height=\"500\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://github.com/zalmoxisus/redux-devtools-extension\"\u003eRedux DevTools\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://chromewebstore.google.com/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd?pli=1\"\u003eRedux DevTools Chrome Extension\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"alternatives-to-redux\" href=\"#alternatives-to-redux\"\u003e\n  \u003c/a\u003e\n  Alternatives to Redux\n\u003c/h2\u003e\n\n\u003cp\u003eWhile Redux is popular, it's not the only option for state management in React applications. Alternatives include:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://legacy.reactjs.org/docs/context.html\"\u003e\u003cstrong\u003eContext API\u003c/strong\u003e :\u003c/a\u003e A React feature for passing data through the component tree without having to pass props down manually.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://mobx.js.org/README.html\"\u003e\u003cstrong\u003eMobX\u003c/strong\u003e\u003c/a\u003e: A library that makes state management simple and scalable by transparently applying functional reactive programming.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://recoiljs.org\"\u003e\u003cstrong\u003eRecoil\u003c/strong\u003e\u003c/a\u003e: A state management library for React that provides several capabilities to efficiently manage state with minimal boilerplate.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"redux-beyond-react\" href=\"#redux-beyond-react\"\u003e\n  \u003c/a\u003e\n  Redux Beyond React\n\u003c/h2\u003e\n\n\u003cp\u003eRedux is not exclusively tied to React. It can be used with any UI layer or framework, including Angular, Vue, and even vanilla JavaScript. This universality is part of what makes Redux a versatile tool in a developer's arsenal.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://blog.angular-university.io/angular-2-redux-ngrx-rxjs/\"\u003eRedux in Angular\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"redux-toolkit\" href=\"#redux-toolkit\"\u003e\n  \u003c/a\u003e\n  Redux Toolkit\n\u003c/h2\u003e\n\n\u003cp\u003eRedux Toolkit is the \"\u003ca href=\"https://redux.js.org/redux-toolkit/overview#what-is-redux-toolkit\"\u003eofficial, opinionated, batteries-included toolset for efficient Redux development\u003c/a\u003e.\" It simplifies store setup, reduces boilerplate, and even includes utilities to define reducers and perform asynchronous logic.\u003c/p\u003e\n\n\u003cp\u003eBy incorporating best practices and simplifying common Redux patterns, RTK makes Redux development more straightforward and maintainable. It's an essential toolkit for any developer working with Redux, streamlining state management tasks and enhancing productivity.\u003c/p\u003e\n\n\u003cp\u003eIn my professional experience, production environments are not using plain Redux anymore. They use Redux Toolkit because it greatly improves the developer experience.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://redux-toolkit.js.org\"\u003eRedux Toolkit Documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.npmjs.com/package/@reduxjs/toolkit\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--qarIP2xj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1700940764188/4c9cbfda-637b-483b-846e-1c5a137a3918.png\" alt=\"Redux toolkit NPM page\" loading=\"lazy\" width=\"768\" height=\"606\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"further-learning\" href=\"#further-learning\"\u003e\n  \u003c/a\u003e\n  Further Learning\n\u003c/h2\u003e\n\n\u003cp\u003eTo deepen your understanding of Redux and its ecosystem, here are some resources:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://redux.js.org/tutorials/essentials/part-1-overview-concepts\"\u003eRedux Essentials\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://redux.js.org/tutorials/fundamentals/part-1-overview\"\u003eRedux Advanced Tutorial\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://react-redux.js.org/\"\u003eReact-Redux Documentation\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://redux-toolkit.js.org/tutorials/overview\"\u003eRedux Toolkit Tutorial\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eBy embracing Redux and its alternatives, developers can choose the most suitable state management strategy for their React applications, enhancing scalability, maintainability, and developer experience.\u003c/p\u003e\n\n\u003cp\u003eAs usual, no one explains it better than \u003ca href=\"https://www.youtube.com/@Fireship\"\u003eFireship\u003c/a\u003e. These 100-second videos are wicked good and I would always highly recommend them.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://youtu.be/_shA5Xwe8_4?si=97XQY9fzlVFvDOB1\"\u003ehttps://youtu.be/_shA5Xwe8_4?si=97XQY9fzlVFvDOB1\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eOne last note. Don't forget that Redux and state management tools might be overkill! If you're building a small app or just learning, you might be able to forgo any complex libraries.\u003c/p\u003e\n\n\u003cp\u003eCheers! Best of luck coding!\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"learn-react-basics-redux-5fia-temp-slug-3027464","social_image":null,"title":"Learn React Basics: Redux","video":null,"video_code":null},{"created_at":"2023-11-27T02:20:32.619Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/learn-react-basics-nextjs","feed_source_url":"https://blog.seancoughlin.me/learn-react-basics-nextjs","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Learn React Basics: Next.Js\npublished: false\ndate: 2023-11-27 01:03:34 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/learn-react-basics-nextjs\n---\n\nWelcome to this exploration of Next.js, a cutting-edge framework that's reshaping React development. This blog post serves as an overview of Next.js, designed to illuminate its core features, benefits, and the unique role it plays in the React ecosystem.\n\nWhether you're a seasoned developer or just beginning your journey with React, this guide aims to provide a clear understanding of what Next.js is and how it can significantly enhance your web development projects.\n\nRead on as we delve into the world of Next.js, unlocking its potential to streamline and elevate your React applications.\n\n## What is Next.js?\n\n[Next.js](https://en.wikipedia.org/wiki/Next.js) is a React framework known for enhancing the React development experience through features like server-side rendering and static site generation.\n\nUnlike traditional React setups, Next.js offers a more integrated solution, streamlining the process of building robust, SEO-friendly web applications.\n\nThe framework's emphasis on performance and developer experience makes it a popular choice for both new and seasoned developers. Learn more about its capabilities on the [Next.js Official Website](https://nextjs.org/).\n\n[![Key features of Next.js](https://cdn.hashnode.com/res/hashnode/image/upload/v1701044656731/30a49b5a-42f6-4b1f-9aa9-fd9cb31e18d7.png)](https://nextjs.org/)\n\n### The History of Next.js\n\nLaunched in October 2016 by [Vercel](https://vercel.com) ([formerly ZEIT](https://en.wikipedia.org/wiki/Vercel)), Next.js has rapidly evolved to address the growing needs of the React community.\n\nIts journey has been marked by significant updates, including the game-changing addition of [static site generation in version 9.3](https://nextjs.org/blog/next-9-3). Or the redesign of [routing with the introduction of App Router in version 13](https://nextjs.org/blog/june-2023-update).\n\nThese updates reflect an ongoing commitment to balancing flexibility with out-of-the-box functionality. The evolution of Next.js can be traced through its [Release History](https://github.com/vercel/next.js/releases), showcasing its response to the evolving web landscape.\n\nThe foundering company Vercel is a [PaaS](https://blog.seancoughlin.me/exploring-cloud-computing-types-iaas-paas-saas-and-beyond#heading-platform-as-a-service-paas) company that continues to sponsor the development of Next.js.\n\n### Key Features of Next.js\n\nNext.js stands out in the React ecosystem with several distinctive features designed to enhance both developer experience and application performance.\n\n- **Server-Side Rendering (SSR)** is a fundamental feature, allowing pages to be rendered on the server and sent to the client as fully formed HTML, enhancing load times and SEO. This is detailed in their [SSR documentation](https://nextjs.org/docs/pages/building-your-application/rendering/server-side-rendering).\n\n- Equally notable is **Static Site Generation (SSG)**, where Next.js pre-renders pages at build time, optimizing them for fast delivery and performance; this feature is explained [here](https://nextjs.org/docs/pages/building-your-application/rendering/static-site-generation).\n\n- Next.js offers **Automatic Code Splitting** , which ensures that each page only loads the JavaScript needed for that page, greatly improving page load times, as discussed [here](https://nextjs.org/learn-pages-router/foundations/how-nextjs-works/code-splitting#).\n\n- The framework also supports **API Routes** , enabling the creation of API endpoints as part of your Next.js application, as outlined [in this section](https://nextjs.org/docs/api-routes/introduction).\n\n- An [opinionated routing structure](https://nextjs.org/docs/pages/building-your-application/routing) that is determined by the location of files in the codebase directory.\n\nThese features, among others, make Next.js a versatile, powerful, and opinionated framework for modern web development.\n\n### Cons of Next.js\n\nWhile Next.js offers some pretty cool features, no framework is without its cons.\n\n- **Opinionated Framework:** This can be restrictive for developers who prefer more control or a different architectural approach.\n\n- **Complexity in Scaling and Deployment:** Server-side components may complicate deployment and scaling, especially for developers less experienced with server-side logic.\n\n- **Steeper Learning Curve:** The range of features and configurations can be overwhelming for new developers, particularly those new to React.\n\n- **Potential for Larger Bundle Sizes:** While automatic code splitting helps, the inclusion of numerous features can lead to larger overall bundle sizes, affecting performance.\n\n- **Less Flexibility with Routing:** The file-system-based routing requires great specificity and can be less flexible when compared to custom routing solutions.\n\n## Next.js in the Landscape of React Frameworks\n\nNext.js stands among several notable frameworks in the React ecosystem, each serving different development needs.\n\n- **Create React App (CRA)** simplifies the setup of a new React project, providing a solid default configuration. It's a go-to for those who prefer a no-frills, straightforward React environment.\n\n- [**Gatsby**](https://github.com/gatsbyjs/gatsby) specializes in generating static websites using React. It excels in producing high-performance sites with a focus on SEO and scalability. It is a more niche solution with far fewer users in the React community\n\n- [**Razzle**](https://github.com/jaredpalmer/razzle) offers a blend of server-rendered and static site approaches, allowing developers to build universal React applications without the complexity of configuration. Razzle is more along the lines of a CRA style and works with multiple different JS frameworks.\n\nEach of these frameworks, including Next.js, caters to specific project requirements, be it performance, SEO, or flexibility. The choice largely depends on the project's goals and the developer's preference.\n\n## Getting Started with Next.js\n\nNext.js streamlines the process of starting new projects with its [`create-next-app`](https://nextjs.org/docs/pages/api-reference/create-next-app) utility, a powerful tool that sets up a new Next.js application with minimal effort.\n\nVercel also maintains a [community page of various templates](https://vercel.com/templates). These include templates for Next and other frameworks and it is a handy tool for launching quickly.\n\n## Next.js in Conclusion\n\nIn conclusion, Next.js stands as a formidable and versatile framework within the React ecosystem, offering a blend of performance, ease of use, and flexibility. Through features like server-side rendering, static site generation, and automatic code splitting, it addresses many of the common challenges faced in web development.\n\nWhether you're building a small personal project or a large-scale commercial application, Next.js provides the tools and capabilities to build fast, scalable, and SEO-friendly web applications. With its continuous evolution and strong community support, Next.js is undoubtedly a key player in shaping the future of React development.\n\nWhile Next.js offers a wealth of benefits, it's also important to consider its potential drawbacks. One notable limitation is its opinionated nature, which might not align with every project's requirements or a developer's preferred practices. Additionally, the framework's reliance on server-side rendering can introduce complexity in deployment and scaling, particularly for those unfamiliar with server-side concepts.\n\nNext.js also tends to have a steeper learning curve, especially for developers new to React, due to its advanced features and configuration options. Furthermore, the framework's extensive feature set can lead to larger bundle sizes, potentially impacting performance. These factors are crucial to consider when deciding whether Next.js is the right choice for your specific project needs.\n\nRemember to always think carefully about your framework choices! While the new shiny tool might be fun, often the simplest tool will get the job done.","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Welcome to this exploration of Next.js, a cutting-edge framework that's reshaping React development....","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/learn-react-basics-nextjs-8o0-temp-slug-4735961","public_reactions_count":0,"processed_html":"\u003cp\u003eWelcome to this exploration of Next.js, a cutting-edge framework that's reshaping React development. This blog post serves as an overview of Next.js, designed to illuminate its core features, benefits, and the unique role it plays in the React ecosystem.\u003c/p\u003e\n\n\u003cp\u003eWhether you're a seasoned developer or just beginning your journey with React, this guide aims to provide a clear understanding of what Next.js is and how it can significantly enhance your web development projects.\u003c/p\u003e\n\n\u003cp\u003eRead on as we delve into the world of Next.js, unlocking its potential to streamline and elevate your React applications.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what-is-nextjs\" href=\"#what-is-nextjs\"\u003e\n  \u003c/a\u003e\n  What is Next.js?\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Next.js\"\u003eNext.js\u003c/a\u003e is a React framework known for enhancing the React development experience through features like server-side rendering and static site generation.\u003c/p\u003e\n\n\u003cp\u003eUnlike traditional React setups, Next.js offers a more integrated solution, streamlining the process of building robust, SEO-friendly web applications.\u003c/p\u003e\n\n\u003cp\u003eThe framework's emphasis on performance and developer experience makes it a popular choice for both new and seasoned developers. Learn more about its capabilities on the \u003ca href=\"https://nextjs.org/\"\u003eNext.js Official Website\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://nextjs.org/\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GssQJQxl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1701044656731/30a49b5a-42f6-4b1f-9aa9-fd9cb31e18d7.png\" alt=\"Key features of Next.js\" loading=\"lazy\" width=\"800\" height=\"575\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"the-history-of-nextjs\" href=\"#the-history-of-nextjs\"\u003e\n  \u003c/a\u003e\n  The History of Next.js\n\u003c/h3\u003e\n\n\u003cp\u003eLaunched in October 2016 by \u003ca href=\"https://vercel.com\"\u003eVercel\u003c/a\u003e (\u003ca href=\"https://en.wikipedia.org/wiki/Vercel\"\u003eformerly ZEIT\u003c/a\u003e), Next.js has rapidly evolved to address the growing needs of the React community.\u003c/p\u003e\n\n\u003cp\u003eIts journey has been marked by significant updates, including the game-changing addition of \u003ca href=\"https://nextjs.org/blog/next-9-3\"\u003estatic site generation in version 9.3\u003c/a\u003e. Or the redesign of \u003ca href=\"https://nextjs.org/blog/june-2023-update\"\u003erouting with the introduction of App Router in version 13\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThese updates reflect an ongoing commitment to balancing flexibility with out-of-the-box functionality. The evolution of Next.js can be traced through its \u003ca href=\"https://github.com/vercel/next.js/releases\"\u003eRelease History\u003c/a\u003e, showcasing its response to the evolving web landscape.\u003c/p\u003e\n\n\u003cp\u003eThe foundering company Vercel is a \u003ca href=\"https://blog.seancoughlin.me/exploring-cloud-computing-types-iaas-paas-saas-and-beyond#heading-platform-as-a-service-paas\"\u003ePaaS\u003c/a\u003e company that continues to sponsor the development of Next.js.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"key-features-of-nextjs\" href=\"#key-features-of-nextjs\"\u003e\n  \u003c/a\u003e\n  Key Features of Next.js\n\u003c/h3\u003e\n\n\u003cp\u003eNext.js stands out in the React ecosystem with several distinctive features designed to enhance both developer experience and application performance.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eServer-Side Rendering (SSR)\u003c/strong\u003e is a fundamental feature, allowing pages to be rendered on the server and sent to the client as fully formed HTML, enhancing load times and SEO. This is detailed in their \u003ca href=\"https://nextjs.org/docs/pages/building-your-application/rendering/server-side-rendering\"\u003eSSR documentation\u003c/a\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eEqually notable is \u003cstrong\u003eStatic Site Generation (SSG)\u003c/strong\u003e, where Next.js pre-renders pages at build time, optimizing them for fast delivery and performance; this feature is explained \u003ca href=\"https://nextjs.org/docs/pages/building-your-application/rendering/static-site-generation\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eNext.js offers \u003cstrong\u003eAutomatic Code Splitting\u003c/strong\u003e , which ensures that each page only loads the JavaScript needed for that page, greatly improving page load times, as discussed \u003ca href=\"https://nextjs.org/learn-pages-router/foundations/how-nextjs-works/code-splitting#\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe framework also supports \u003cstrong\u003eAPI Routes\u003c/strong\u003e , enabling the creation of API endpoints as part of your Next.js application, as outlined \u003ca href=\"https://nextjs.org/docs/api-routes/introduction\"\u003ein this section\u003c/a\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eAn \u003ca href=\"https://nextjs.org/docs/pages/building-your-application/routing\"\u003eopinionated routing structure\u003c/a\u003e that is determined by the location of files in the codebase directory.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThese features, among others, make Next.js a versatile, powerful, and opinionated framework for modern web development.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"cons-of-nextjs\" href=\"#cons-of-nextjs\"\u003e\n  \u003c/a\u003e\n  Cons of Next.js\n\u003c/h3\u003e\n\n\u003cp\u003eWhile Next.js offers some pretty cool features, no framework is without its cons.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eOpinionated Framework:\u003c/strong\u003e This can be restrictive for developers who prefer more control or a different architectural approach.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eComplexity in Scaling and Deployment:\u003c/strong\u003e Server-side components may complicate deployment and scaling, especially for developers less experienced with server-side logic.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSteeper Learning Curve:\u003c/strong\u003e The range of features and configurations can be overwhelming for new developers, particularly those new to React.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003ePotential for Larger Bundle Sizes:\u003c/strong\u003e While automatic code splitting helps, the inclusion of numerous features can lead to larger overall bundle sizes, affecting performance.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eLess Flexibility with Routing:\u003c/strong\u003e The file-system-based routing requires great specificity and can be less flexible when compared to custom routing solutions.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"nextjs-in-the-landscape-of-react-frameworks\" href=\"#nextjs-in-the-landscape-of-react-frameworks\"\u003e\n  \u003c/a\u003e\n  Next.js in the Landscape of React Frameworks\n\u003c/h2\u003e\n\n\u003cp\u003eNext.js stands among several notable frameworks in the React ecosystem, each serving different development needs.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eCreate React App (CRA)\u003c/strong\u003e simplifies the setup of a new React project, providing a solid default configuration. It's a go-to for those who prefer a no-frills, straightforward React environment.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://github.com/gatsbyjs/gatsby\"\u003e\u003cstrong\u003eGatsby\u003c/strong\u003e\u003c/a\u003e specializes in generating static websites using React. It excels in producing high-performance sites with a focus on SEO and scalability. It is a more niche solution with far fewer users in the React community\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://github.com/jaredpalmer/razzle\"\u003e\u003cstrong\u003eRazzle\u003c/strong\u003e\u003c/a\u003e offers a blend of server-rendered and static site approaches, allowing developers to build universal React applications without the complexity of configuration. Razzle is more along the lines of a CRA style and works with multiple different JS frameworks.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eEach of these frameworks, including Next.js, caters to specific project requirements, be it performance, SEO, or flexibility. The choice largely depends on the project's goals and the developer's preference.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"getting-started-with-nextjs\" href=\"#getting-started-with-nextjs\"\u003e\n  \u003c/a\u003e\n  Getting Started with Next.js\n\u003c/h2\u003e\n\n\u003cp\u003eNext.js streamlines the process of starting new projects with its \u003ca href=\"https://nextjs.org/docs/pages/api-reference/create-next-app\"\u003e\u003ccode\u003ecreate-next-app\u003c/code\u003e\u003c/a\u003e utility, a powerful tool that sets up a new Next.js application with minimal effort.\u003c/p\u003e\n\n\u003cp\u003eVercel also maintains a \u003ca href=\"https://vercel.com/templates\"\u003ecommunity page of various templates\u003c/a\u003e. These include templates for Next and other frameworks and it is a handy tool for launching quickly.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"nextjs-in-conclusion\" href=\"#nextjs-in-conclusion\"\u003e\n  \u003c/a\u003e\n  Next.js in Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eIn conclusion, Next.js stands as a formidable and versatile framework within the React ecosystem, offering a blend of performance, ease of use, and flexibility. Through features like server-side rendering, static site generation, and automatic code splitting, it addresses many of the common challenges faced in web development.\u003c/p\u003e\n\n\u003cp\u003eWhether you're building a small personal project or a large-scale commercial application, Next.js provides the tools and capabilities to build fast, scalable, and SEO-friendly web applications. With its continuous evolution and strong community support, Next.js is undoubtedly a key player in shaping the future of React development.\u003c/p\u003e\n\n\u003cp\u003eWhile Next.js offers a wealth of benefits, it's also important to consider its potential drawbacks. One notable limitation is its opinionated nature, which might not align with every project's requirements or a developer's preferred practices. Additionally, the framework's reliance on server-side rendering can introduce complexity in deployment and scaling, particularly for those unfamiliar with server-side concepts.\u003c/p\u003e\n\n\u003cp\u003eNext.js also tends to have a steeper learning curve, especially for developers new to React, due to its advanced features and configuration options. Furthermore, the framework's extensive feature set can lead to larger bundle sizes, potentially impacting performance. These factors are crucial to consider when deciding whether Next.js is the right choice for your specific project needs.\u003c/p\u003e\n\n\u003cp\u003eRemember to always think carefully about your framework choices! While the new shiny tool might be fun, often the simplest tool will get the job done.\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"learn-react-basics-nextjs-8o0-temp-slug-4735961","social_image":null,"title":"Learn React Basics: Next.Js","video":null,"video_code":null},{"created_at":"2023-11-27T02:20:32.853Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/understanding-system-testing-in-software-engineering","feed_source_url":"https://blog.seancoughlin.me/understanding-system-testing-in-software-engineering","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Understanding System Testing in Software Engineering\npublished: false\ndate: 2023-11-27 01:23:00 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/understanding-system-testing-in-software-engineering\n---\n\n## Introduction\n\nIn the dynamic field of software engineering, various [testing methodologies](https://en.wikipedia.org/wiki/Software_testing) play a crucial role in delivering reliable and efficient software products.\n\nAmong these methodologies, [system testing](https://en.wikipedia.org/wiki/System_testing) stands out as a pivotal phase in the software development life cycle.\n\nThis blog post aims to elucidate what system testing is, providing a clear understanding of its purpose and process.\n\n## What is System Testing?\n\nSystem testing is a high-level software testing process where a complete and integrated software system is tested.\n\nThe primary goal of system testing is to evaluate the system's compliance with requirements.\n\nIt is typically conducted after the integration testing phase and before the software is delivered for user acceptance testing.\n\nThis form of testing is crucial because it verifies and validates both the application's functional and non-functional requirements.\n\nIt encompasses a series of different tests to ensure that all the components of the system work together as intended.\n\nThese tests include, but are not limited to, performance testing, security testing, usability testing, and compliance testing.\n\nI like to think of system testing as more of an umbrella term that captures lots of different testing forms.\n\n### Characteristics of System Testing:\n\n- **Holistic Approach:** It views the software as a whole rather than focusing on its individual components.\n\n- **End-to-End Testing Scenario:** It involves testing the application in an environment that closely simulates or is real-world use.\n\n- **Requirement Verification:** It checks if the system meets the predefined requirements and specifications.\n\n- **Non-Functional Testing:** It includes testing aspects like performance, security, and usability, which go beyond mere functionality.\n\n- **Multiple stakeholders:** It typically involves multiple stakeholders who all have a vested interest in some part of the system.\n\n## Example of System Testing\n\nTo illustrate, let's consider an e-commerce website. System testing for such a website would involve:\n\n- **Functional Testing:** Ensuring all features like product search, shopping cart functionality, payment processing, and order management work correctly together.\n\n- **Performance Testing:** Testing how the website performs under different levels of user load, ensuring it can handle peak shopping times.\n\n- **Security Testing:** Verifying that customer data is securely handled and that the website is robust against cyber threats.\n\n- **Usability Testing:** Ensuring the website is user-friendly and accessible across various devices and browsers.\n\nThis comprehensive testing ensures that the e-commerce website operates efficiently, securely, and reliably in a real-world scenario.\n\nThese tests of the example e-commerce site would likely include automated tests and human verification.\n\nFor example, performance tests are typically automated to create load. However, usability tests are typically done manually by stakeholders like developers, designers, and product owners.\n\n## Conclusion\n\nIn summary, system testing is an integral and comprehensive testing phase in software engineering, focused on evaluating a complete system to ensure it meets specified requirements and functions effectively in the real world.\n\nBy conducting system testing, software engineers can identify and rectify any issues before the software product is released, thereby enhancing the quality and reliability of the final product.","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Introduction   In the dynamic field of software engineering, various testing methodologies...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/understanding-system-testing-in-software-engineering-5667-temp-slug-697049","public_reactions_count":0,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"introduction\" href=\"#introduction\"\u003e\n  \u003c/a\u003e\n  Introduction\n\u003c/h2\u003e\n\n\u003cp\u003eIn the dynamic field of software engineering, various \u003ca href=\"https://en.wikipedia.org/wiki/Software_testing\"\u003etesting methodologies\u003c/a\u003e play a crucial role in delivering reliable and efficient software products.\u003c/p\u003e\n\n\u003cp\u003eAmong these methodologies, \u003ca href=\"https://en.wikipedia.org/wiki/System_testing\"\u003esystem testing\u003c/a\u003e stands out as a pivotal phase in the software development life cycle.\u003c/p\u003e\n\n\u003cp\u003eThis blog post aims to elucidate what system testing is, providing a clear understanding of its purpose and process.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what-is-system-testing\" href=\"#what-is-system-testing\"\u003e\n  \u003c/a\u003e\n  What is System Testing?\n\u003c/h2\u003e\n\n\u003cp\u003eSystem testing is a high-level software testing process where a complete and integrated software system is tested.\u003c/p\u003e\n\n\u003cp\u003eThe primary goal of system testing is to evaluate the system's compliance with requirements.\u003c/p\u003e\n\n\u003cp\u003eIt is typically conducted after the integration testing phase and before the software is delivered for user acceptance testing.\u003c/p\u003e\n\n\u003cp\u003eThis form of testing is crucial because it verifies and validates both the application's functional and non-functional requirements.\u003c/p\u003e\n\n\u003cp\u003eIt encompasses a series of different tests to ensure that all the components of the system work together as intended.\u003c/p\u003e\n\n\u003cp\u003eThese tests include, but are not limited to, performance testing, security testing, usability testing, and compliance testing.\u003c/p\u003e\n\n\u003cp\u003eI like to think of system testing as more of an umbrella term that captures lots of different testing forms.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"characteristics-of-system-testing\" href=\"#characteristics-of-system-testing\"\u003e\n  \u003c/a\u003e\n  Characteristics of System Testing:\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eHolistic Approach:\u003c/strong\u003e It views the software as a whole rather than focusing on its individual components.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eEnd-to-End Testing Scenario:\u003c/strong\u003e It involves testing the application in an environment that closely simulates or is real-world use.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eRequirement Verification:\u003c/strong\u003e It checks if the system meets the predefined requirements and specifications.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eNon-Functional Testing:\u003c/strong\u003e It includes testing aspects like performance, security, and usability, which go beyond mere functionality.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eMultiple stakeholders:\u003c/strong\u003e It typically involves multiple stakeholders who all have a vested interest in some part of the system.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"example-of-system-testing\" href=\"#example-of-system-testing\"\u003e\n  \u003c/a\u003e\n  Example of System Testing\n\u003c/h2\u003e\n\n\u003cp\u003eTo illustrate, let's consider an e-commerce website. System testing for such a website would involve:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eFunctional Testing:\u003c/strong\u003e Ensuring all features like product search, shopping cart functionality, payment processing, and order management work correctly together.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003ePerformance Testing:\u003c/strong\u003e Testing how the website performs under different levels of user load, ensuring it can handle peak shopping times.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSecurity Testing:\u003c/strong\u003e Verifying that customer data is securely handled and that the website is robust against cyber threats.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eUsability Testing:\u003c/strong\u003e Ensuring the website is user-friendly and accessible across various devices and browsers.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThis comprehensive testing ensures that the e-commerce website operates efficiently, securely, and reliably in a real-world scenario.\u003c/p\u003e\n\n\u003cp\u003eThese tests of the example e-commerce site would likely include automated tests and human verification.\u003c/p\u003e\n\n\u003cp\u003eFor example, performance tests are typically automated to create load. However, usability tests are typically done manually by stakeholders like developers, designers, and product owners.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eIn summary, system testing is an integral and comprehensive testing phase in software engineering, focused on evaluating a complete system to ensure it meets specified requirements and functions effectively in the real world.\u003c/p\u003e\n\n\u003cp\u003eBy conducting system testing, software engineers can identify and rectify any issues before the software product is released, thereby enhancing the quality and reliability of the final product.\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"understanding-system-testing-in-software-engineering-5667-temp-slug-697049","social_image":null,"title":"Understanding System Testing in Software Engineering","video":null,"video_code":null},{"created_at":"2023-11-27T02:20:33.113Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/what-is-the-packagejson-file","feed_source_url":"https://blog.seancoughlin.me/what-is-the-packagejson-file","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: What is the package.json file?\npublished: false\ndate: 2023-11-27 02:18:29 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/what-is-the-packagejson-file\n---\n\n## Introduction\n\nIn frontend development, [`package.json`](https://docs.npmjs.com/cli/v10/configuring-npm/package-json) is a fundamental file used primarily with Node.js and JavaScript projects. It serves several key purposes:\n\n1. **Project Metadata** : It includes metadata about the project, such as the name, version, description, author, and license. This information is useful for identifying the project and its purpose.\n\n2. **Dependency Management** : One of its primary roles is to manage project dependencies. It lists all the libraries and frameworks that your project needs to run correctly. These dependencies are typically installed via npm (Node Package Manager) or Yarn.\n\n3. **Scripts** : `package.json` can define scripts for common tasks like starting the development server, building the project, running tests, etc. These scripts provide a convenient way to execute complex tasks with simple commands like `npm start` or `npm test`.\n\n4. **Version Management** : It allows specifying versions for your dependencies, ensuring consistency and compatibility across different development environments.\n\n5. **Publishing Configuration** : If you are creating a library or a package that will be published to npm, `package.json` includes details necessary for publication, like entry points and additional metadata.\n\n6. **Configuration** : Some projects use `package.json` to store configuration settings for various tools and libraries, ensuring that all necessary configurations are centralized and version-controlled.\n\n## Common Package Fields\n\n### Dependencies\n\nIn client-side projects like React, the `dependencies` section will typically include libraries related to UI components, routing, state management, and other front-end concerns.\n\nFor example, a React project might list React itself (`react`) and the React DOM library (`react-dom`) as dependencies:\n\n```\n{\n  \"dependencies\": {\n    \"react\": \"^17.0.0\",\n    \"react-dom\": \"^17.0.0\",\n    \"react-router-dom\": \"^5.2.0\"\n  }\n}\n\n```\n\n### Development Dependencies\n\nSimilarly, the `devDependencies` section for a client-side project will include packages necessary for the development toolchain.\n\nThis often includes things like Webpack for bundling your JavaScript files, Babel for transpiling JSX and ES6+ code, and various loaders and plugins for handling styles, images, or other assets:\n\n```\n{\n  \"devDependencies\": {\n    \"webpack\": \"^5.0.0\",\n    \"babel-core\": \"^6.26.3\",\n    \"babel-loader\": \"^8.0.0\",\n    \"css-loader\": \"^5.0.0\"\n  }\n}\n\n```\n\n### Scripts\n\nThe `scripts` section provides aliases for terminal commands. Along with commands for starting, testing, and building your app, you may also have scripts for ejecting from create-react-app, running database migrations, or deploying your application to a server or CDN:\n\n```\n{\n  \"scripts\": {\n    \"start\": \"webpack-dev-server --open\",\n    \"build\": \"webpack\",\n    \"eject\": \"react-scripts eject\",\n    \"deploy\": \"npm run build \u0026\u0026 aws s3 sync build/ s3://my-bucket\"\n  }\n}\n\n```\n\n### Homepage\n\nThe `homepage` field specifies the root URL at which the app will be hosted. This is useful for ensuring that routes and assets work correctly when deploying to a subdirectory:\n\n```\n{\n  \"homepage\": \"http://mywebsite.com/subdirectory\"\n}\n\n```\n\n### Proxy\n\nThe `proxy` field is often used in client-side applications to proxy API requests to a different domain in development, helping to avoid CORS issues:\n\n```\n{\n  \"proxy\": \"http://api.mywebsite.com\"\n}\n\n```\n\n### Browserlist\n\nThe `browserslist` field is particularly relevant for client-side projects. This field specifies which browser versions your project aims to support.\n\n```\n{\n  \"browserslist\": \"\u003e 0.2%, not dead, not ie \u003c= 11, not op_mini all\"\n}\n\n```\n\n### Resolutions\n\nAdditionally, you can use the `resolutions` field to lock nested dependencies to specific versions, which can help avoid bugs or vulnerabilities in transitive dependencies:\n\n```\n{\n  \"resolutions\": {\n    \"lodash\": \"4.17.19\"\n  }\n}\n\n```\n\n## Conclusion\n\nIn summary, the `package.json` file is a comprehensive and flexible tool that serves as the backbone for configuring both server-side and client-side JavaScript projects.\n\nIts architecture accommodates a wide variety of use cases, from managing dependencies and defining custom scripts to specifying environmental setups and deployment procedures.\n\nWhether you're building an API with Node.js, a front-end application with React, or any other kind of JavaScript project, the `package.json` file serves as your go-to for project configuration.","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Introduction   In frontend development, package.json is a fundamental file used primarily...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/what-is-the-packagejson-file-9jm-temp-slug-9809333","public_reactions_count":0,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"introduction\" href=\"#introduction\"\u003e\n  \u003c/a\u003e\n  Introduction\n\u003c/h2\u003e\n\n\u003cp\u003eIn frontend development, \u003ca href=\"https://docs.npmjs.com/cli/v10/configuring-npm/package-json\"\u003e\u003ccode\u003epackage.json\u003c/code\u003e\u003c/a\u003e is a fundamental file used primarily with Node.js and JavaScript projects. It serves several key purposes:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eProject Metadata\u003c/strong\u003e : It includes metadata about the project, such as the name, version, description, author, and license. This information is useful for identifying the project and its purpose.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eDependency Management\u003c/strong\u003e : One of its primary roles is to manage project dependencies. It lists all the libraries and frameworks that your project needs to run correctly. These dependencies are typically installed via npm (Node Package Manager) or Yarn.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eScripts\u003c/strong\u003e : \u003ccode\u003epackage.json\u003c/code\u003e can define scripts for common tasks like starting the development server, building the project, running tests, etc. These scripts provide a convenient way to execute complex tasks with simple commands like \u003ccode\u003enpm start\u003c/code\u003e or \u003ccode\u003enpm test\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eVersion Management\u003c/strong\u003e : It allows specifying versions for your dependencies, ensuring consistency and compatibility across different development environments.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003ePublishing Configuration\u003c/strong\u003e : If you are creating a library or a package that will be published to npm, \u003ccode\u003epackage.json\u003c/code\u003e includes details necessary for publication, like entry points and additional metadata.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eConfiguration\u003c/strong\u003e : Some projects use \u003ccode\u003epackage.json\u003c/code\u003e to store configuration settings for various tools and libraries, ensuring that all necessary configurations are centralized and version-controlled.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"common-package-fields\" href=\"#common-package-fields\"\u003e\n  \u003c/a\u003e\n  Common Package Fields\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"dependencies\" href=\"#dependencies\"\u003e\n  \u003c/a\u003e\n  Dependencies\n\u003c/h3\u003e\n\n\u003cp\u003eIn client-side projects like React, the \u003ccode\u003edependencies\u003c/code\u003e section will typically include libraries related to UI components, routing, state management, and other front-end concerns.\u003c/p\u003e\n\n\u003cp\u003eFor example, a React project might list React itself (\u003ccode\u003ereact\u003c/code\u003e) and the React DOM library (\u003ccode\u003ereact-dom\u003c/code\u003e) as dependencies:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e{\n  \"dependencies\": {\n    \"react\": \"^17.0.0\",\n    \"react-dom\": \"^17.0.0\",\n    \"react-router-dom\": \"^5.2.0\"\n  }\n}\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch3\u003e\n  \u003ca name=\"development-dependencies\" href=\"#development-dependencies\"\u003e\n  \u003c/a\u003e\n  Development Dependencies\n\u003c/h3\u003e\n\n\u003cp\u003eSimilarly, the \u003ccode\u003edevDependencies\u003c/code\u003e section for a client-side project will include packages necessary for the development toolchain.\u003c/p\u003e\n\n\u003cp\u003eThis often includes things like Webpack for bundling your JavaScript files, Babel for transpiling JSX and ES6+ code, and various loaders and plugins for handling styles, images, or other assets:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e{\n  \"devDependencies\": {\n    \"webpack\": \"^5.0.0\",\n    \"babel-core\": \"^6.26.3\",\n    \"babel-loader\": \"^8.0.0\",\n    \"css-loader\": \"^5.0.0\"\n  }\n}\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch3\u003e\n  \u003ca name=\"scripts\" href=\"#scripts\"\u003e\n  \u003c/a\u003e\n  Scripts\n\u003c/h3\u003e\n\n\u003cp\u003eThe \u003ccode\u003escripts\u003c/code\u003e section provides aliases for terminal commands. Along with commands for starting, testing, and building your app, you may also have scripts for ejecting from create-react-app, running database migrations, or deploying your application to a server or CDN:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e{\n  \"scripts\": {\n    \"start\": \"webpack-dev-server --open\",\n    \"build\": \"webpack\",\n    \"eject\": \"react-scripts eject\",\n    \"deploy\": \"npm run build \u0026amp;\u0026amp; aws s3 sync build/ s3://my-bucket\"\n  }\n}\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch3\u003e\n  \u003ca name=\"homepage\" href=\"#homepage\"\u003e\n  \u003c/a\u003e\n  Homepage\n\u003c/h3\u003e\n\n\u003cp\u003eThe \u003ccode\u003ehomepage\u003c/code\u003e field specifies the root URL at which the app will be hosted. This is useful for ensuring that routes and assets work correctly when deploying to a subdirectory:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e{\n  \"homepage\": \"http://mywebsite.com/subdirectory\"\n}\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch3\u003e\n  \u003ca name=\"proxy\" href=\"#proxy\"\u003e\n  \u003c/a\u003e\n  Proxy\n\u003c/h3\u003e\n\n\u003cp\u003eThe \u003ccode\u003eproxy\u003c/code\u003e field is often used in client-side applications to proxy API requests to a different domain in development, helping to avoid CORS issues:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e{\n  \"proxy\": \"http://api.mywebsite.com\"\n}\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch3\u003e\n  \u003ca name=\"browserlist\" href=\"#browserlist\"\u003e\n  \u003c/a\u003e\n  Browserlist\n\u003c/h3\u003e\n\n\u003cp\u003eThe \u003ccode\u003ebrowserslist\u003c/code\u003e field is particularly relevant for client-side projects. This field specifies which browser versions your project aims to support.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e{\n  \"browserslist\": \"\u0026gt; 0.2%, not dead, not ie \u0026lt;= 11, not op_mini all\"\n}\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch3\u003e\n  \u003ca name=\"resolutions\" href=\"#resolutions\"\u003e\n  \u003c/a\u003e\n  Resolutions\n\u003c/h3\u003e\n\n\u003cp\u003eAdditionally, you can use the \u003ccode\u003eresolutions\u003c/code\u003e field to lock nested dependencies to specific versions, which can help avoid bugs or vulnerabilities in transitive dependencies:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e{\n  \"resolutions\": {\n    \"lodash\": \"4.17.19\"\n  }\n}\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eIn summary, the \u003ccode\u003epackage.json\u003c/code\u003e file is a comprehensive and flexible tool that serves as the backbone for configuring both server-side and client-side JavaScript projects.\u003c/p\u003e\n\n\u003cp\u003eIts architecture accommodates a wide variety of use cases, from managing dependencies and defining custom scripts to specifying environmental setups and deployment procedures.\u003c/p\u003e\n\n\u003cp\u003eWhether you're building an API with Node.js, a front-end application with React, or any other kind of JavaScript project, the \u003ccode\u003epackage.json\u003c/code\u003e file serves as your go-to for project configuration.\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"what-is-the-packagejson-file-9jm-temp-slug-9809333","social_image":null,"title":"What is the package.json file?","video":null,"video_code":null},{"created_at":"2023-11-28T08:20:53.891Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/automating-npm-dependency-updates-with-github-actions","feed_source_url":"https://blog.seancoughlin.me/automating-npm-dependency-updates-with-github-actions","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Automating NPM Dependency Updates with GitHub Actions\npublished: false\ndate: 2023-11-28 05:09:19 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/automating-npm-dependency-updates-with-github-actions\n---\n\nMaintaining up-to-date dependencies in your software projects is crucial for security, performance, and accessing new features. This task, however, can be tedious and time-consuming.\n\nFortunately, GitHub Actions offer a powerful and flexible way to automate this process. In this blog post, we'll explore how to set up a GitHub Action to automatically update dependencies in a JavaScript project.\n\n## What are GitHub Actions?\n\n[GitHub Actions](https://docs.github.com/en/actions) is a CI/CD (Continuous Integration and Continuous Deployment) platform that allows you to automate your build, test, and deployment workflows right from your GitHub repository.\n\nYou can write individual tasks, called actions, and combine them to create a workflow. Workflows are defined by a YAML file in your repository and can be triggered by various GitHub events (like a push, pull request, or scheduled event).\n\n## Setting Up an Automatic Dependency Update Workflow\n\nLet's dive into how we can use GitHub Actions to automatically update dependencies in a JavaScript project. Heres a step-by-step guide using the provided example workflow:\n\n### 1. Understanding the Workflow File\n\nThe YAML file for our workflow, which might be named `.github/workflows/update-dependencies.yml`, looks like this:\n\n```\nname: Update Dependencies\n\non:\n  workflow_dispatch:\n  schedule:\n    - cron: '0 0 * * *' # Runs every day at midnight\n\njobs:\n  update:\n    runs-on: ubuntu-latest\n    steps:\n      ...\n\n```\n\nThis configuration sets up a workflow named Update Dependencies that triggers on two occasions: manually (`workflow_dispatch`) and on a schedule (`cron: '0 0 * * *'`, [which means every day at midnight](https://crontab.guru/every-day-at-midnight)).\n\nI like to add the manual configuration (`workflow_dispatch`) because it makes testing easier.\n\nThe location of the file is important. [GitHub looks for these actions](https://docs.github.com/en/actions/quickstart) to be located in the `.github/workflow` folder.\n\n### 2. Configuring the Job\n\nThe `update` job runs on the latest Ubuntu runner provided by GitHub and consists of several steps:\n\n- **Checking out the repository** : `actions/checkout@v2` checks out your repository, so your workflow can access it. This action is [provided by GitHub](https://github.com/actions/checkout).\n\n- **Setting up Node.js** : `actions/setup-node@v1` sets up the Node.js environment with a specified version (`node-version: '20'`).\n\n- **Installing Yarn** : This step installs Yarn, a package manager, using NPM. This step is only required if your application uses Yarn. If your application is based on NPM feel free to skip.\n\n### 3. Updating Dependencies\n\nThe core of our workflow is updating the dependencies:\n\n```\n- name: Update Dependencies\n  run: |\n    yarn global add npm-check-updates\n    ncu -u\n    yarn install\n\n```\n\nThis step does the following:\n\n- Installs `npm-check-updates`, a tool for upgrading your `package.json` dependencies to the latest versions.\n\n- Runs `ncu -u` (npm-check-updates) which upgrades the `package.json` file.\n\n- Runs `yarn install` to install the updated dependencies and generate a new lock file.\n\n### 4. Creating a Pull Request\n\nFinally, the workflow uses the `peter-evans/create-pull-request@v3` action to create a pull request with the updated `package.json` and `yarn.lock` files.\n\nThe pull request will include a predefined message, title, and branch name. What you decide to put in the message is entirely up to you.\n\n```\n- name: Create Pull Request\n  uses: peter-evans/create-pull-request@v3\n  with:\n      commit-message: Update dependencies\n      title: '[DEPENDENCY] Update Dependencies'\n      body: |\n          Updates dependencies in `package.json`.\n      branch: update-dependencies\n\n```\n\n### 5. Running the Action\n\nThe action will run automatically at midnight or whenever you trigger using the manual run workflow trigger (`Actions \u003e Update Dependencies \u003e Run workflow`).\n\nWhen the action finds dependencies to update, it will automatically create a PR with the required changes that you can merge at your leisure.\n\n[![Example PR created by the update dependencies GitHub action](https://cdn.hashnode.com/res/hashnode/image/upload/v1701146817325/dcf2826b-4a85-4766-830f-cddbc57741fd.png)](https://github.com/Scc33/Scc33.github.io/pull/101)\n\n## Conclusion\n\nBy automating the dependency update process using GitHub Actions, you can significantly reduce the manual effort involved in keeping your project dependencies current.\n\nThis not only saves time but also helps in maintaining a secure and stable code base. Remember, while the example provided focuses on a JavaScript project, the concept can be adapted to other languages and package managers.\n\nYou can find a complete example of this code [here](https://github.com/Scc33/Scc33.github.io/blob/master/.github/workflows/update-dependencies.yml) (I use this to keep my personal site up-to-date).\n\nHappy coding!","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Maintaining up-to-date dependencies in your software projects is crucial for security, performance,...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/automating-npm-dependency-updates-with-github-actions-444j-temp-slug-9907063","public_reactions_count":0,"processed_html":"\u003cp\u003eMaintaining up-to-date dependencies in your software projects is crucial for security, performance, and accessing new features. This task, however, can be tedious and time-consuming.\u003c/p\u003e\n\n\u003cp\u003eFortunately, GitHub Actions offer a powerful and flexible way to automate this process. In this blog post, we'll explore how to set up a GitHub Action to automatically update dependencies in a JavaScript project.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what-are-github-actions\" href=\"#what-are-github-actions\"\u003e\n  \u003c/a\u003e\n  What are GitHub Actions?\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://docs.github.com/en/actions\"\u003eGitHub Actions\u003c/a\u003e is a CI/CD (Continuous Integration and Continuous Deployment) platform that allows you to automate your build, test, and deployment workflows right from your GitHub repository.\u003c/p\u003e\n\n\u003cp\u003eYou can write individual tasks, called actions, and combine them to create a workflow. Workflows are defined by a YAML file in your repository and can be triggered by various GitHub events (like a push, pull request, or scheduled event).\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"setting-up-an-automatic-dependency-update-workflow\" href=\"#setting-up-an-automatic-dependency-update-workflow\"\u003e\n  \u003c/a\u003e\n  Setting Up an Automatic Dependency Update Workflow\n\u003c/h2\u003e\n\n\u003cp\u003eLet's dive into how we can use GitHub Actions to automatically update dependencies in a JavaScript project. Heres a step-by-step guide using the provided example workflow:\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"1-understanding-the-workflow-file\" href=\"#1-understanding-the-workflow-file\"\u003e\n  \u003c/a\u003e\n  1. Understanding the Workflow File\n\u003c/h3\u003e\n\n\u003cp\u003eThe YAML file for our workflow, which might be named \u003ccode\u003e.github/workflows/update-dependencies.yml\u003c/code\u003e, looks like this:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ename: Update Dependencies\n\non:\n  workflow_dispatch:\n  schedule:\n    - cron: '0 0 * * *' # Runs every day at midnight\n\njobs:\n  update:\n    runs-on: ubuntu-latest\n    steps:\n      ...\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eThis configuration sets up a workflow named Update Dependencies that triggers on two occasions: manually (\u003ccode\u003eworkflow_dispatch\u003c/code\u003e) and on a schedule (\u003ccode\u003ecron: '0 0 * * *'\u003c/code\u003e, \u003ca href=\"https://crontab.guru/every-day-at-midnight\"\u003ewhich means every day at midnight\u003c/a\u003e).\u003c/p\u003e\n\n\u003cp\u003eI like to add the manual configuration (\u003ccode\u003eworkflow_dispatch\u003c/code\u003e) because it makes testing easier.\u003c/p\u003e\n\n\u003cp\u003eThe location of the file is important. \u003ca href=\"https://docs.github.com/en/actions/quickstart\"\u003eGitHub looks for these actions\u003c/a\u003e to be located in the \u003ccode\u003e.github/workflow\u003c/code\u003e folder.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"2-configuring-the-job\" href=\"#2-configuring-the-job\"\u003e\n  \u003c/a\u003e\n  2. Configuring the Job\n\u003c/h3\u003e\n\n\u003cp\u003eThe \u003ccode\u003eupdate\u003c/code\u003e job runs on the latest Ubuntu runner provided by GitHub and consists of several steps:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eChecking out the repository\u003c/strong\u003e : \u003ccode\u003eactions/checkout@v2\u003c/code\u003e checks out your repository, so your workflow can access it. This action is \u003ca href=\"https://github.com/actions/checkout\"\u003eprovided by GitHub\u003c/a\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSetting up Node.js\u003c/strong\u003e : \u003ccode\u003eactions/setup-node@v1\u003c/code\u003e sets up the Node.js environment with a specified version (\u003ccode\u003enode-version: '20'\u003c/code\u003e).\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eInstalling Yarn\u003c/strong\u003e : This step installs Yarn, a package manager, using NPM. This step is only required if your application uses Yarn. If your application is based on NPM feel free to skip.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"3-updating-dependencies\" href=\"#3-updating-dependencies\"\u003e\n  \u003c/a\u003e\n  3. Updating Dependencies\n\u003c/h3\u003e\n\n\u003cp\u003eThe core of our workflow is updating the dependencies:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e- name: Update Dependencies\n  run: |\n    yarn global add npm-check-updates\n    ncu -u\n    yarn install\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eThis step does the following:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eInstalls \u003ccode\u003enpm-check-updates\u003c/code\u003e, a tool for upgrading your \u003ccode\u003epackage.json\u003c/code\u003e dependencies to the latest versions.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eRuns \u003ccode\u003encu -u\u003c/code\u003e (npm-check-updates) which upgrades the \u003ccode\u003epackage.json\u003c/code\u003e file.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eRuns \u003ccode\u003eyarn install\u003c/code\u003e to install the updated dependencies and generate a new lock file.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"4-creating-a-pull-request\" href=\"#4-creating-a-pull-request\"\u003e\n  \u003c/a\u003e\n  4. Creating a Pull Request\n\u003c/h3\u003e\n\n\u003cp\u003eFinally, the workflow uses the \u003ccode\u003epeter-evans/create-pull-request@v3\u003c/code\u003e action to create a pull request with the updated \u003ccode\u003epackage.json\u003c/code\u003e and \u003ccode\u003eyarn.lock\u003c/code\u003e files.\u003c/p\u003e\n\n\u003cp\u003eThe pull request will include a predefined message, title, and branch name. What you decide to put in the message is entirely up to you.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e- name: Create Pull Request\n  uses: peter-evans/create-pull-request@v3\n  with:\n      commit-message: Update dependencies\n      title: '[DEPENDENCY] Update Dependencies'\n      body: |\n          Updates dependencies in `package.json`.\n      branch: update-dependencies\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch3\u003e\n  \u003ca name=\"5-running-the-action\" href=\"#5-running-the-action\"\u003e\n  \u003c/a\u003e\n  5. Running the Action\n\u003c/h3\u003e\n\n\u003cp\u003eThe action will run automatically at midnight or whenever you trigger using the manual run workflow trigger (\u003ccode\u003eActions \u0026gt; Update Dependencies \u0026gt; Run workflow\u003c/code\u003e).\u003c/p\u003e\n\n\u003cp\u003eWhen the action finds dependencies to update, it will automatically create a PR with the required changes that you can merge at your leisure.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/Scc33/Scc33.github.io/pull/101\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--zCU-qcgl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1701146817325/dcf2826b-4a85-4766-830f-cddbc57741fd.png\" alt=\"Example PR created by the update dependencies GitHub action\" loading=\"lazy\" width=\"800\" height=\"280\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eBy automating the dependency update process using GitHub Actions, you can significantly reduce the manual effort involved in keeping your project dependencies current.\u003c/p\u003e\n\n\u003cp\u003eThis not only saves time but also helps in maintaining a secure and stable code base. Remember, while the example provided focuses on a JavaScript project, the concept can be adapted to other languages and package managers.\u003c/p\u003e\n\n\u003cp\u003eYou can find a complete example of this code \u003ca href=\"https://github.com/Scc33/Scc33.github.io/blob/master/.github/workflows/update-dependencies.yml\"\u003ehere\u003c/a\u003e (I use this to keep my personal site up-to-date).\u003c/p\u003e\n\n\u003cp\u003eHappy coding!\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"automating-npm-dependency-updates-with-github-actions-444j-temp-slug-9907063","social_image":null,"title":"Automating NPM Dependency Updates with GitHub Actions","video":null,"video_code":null},{"created_at":"2023-11-29T04:22:16.408Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/streamlining-your-javascript-development-with-github-actions-for-continuous-integration","feed_source_url":"https://blog.seancoughlin.me/streamlining-your-javascript-development-with-github-actions-for-continuous-integration","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Streamlining Your JavaScript Development with GitHub Actions for Continuous Integration\npublished: false\ndate: 2023-11-29 04:04:23 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/streamlining-your-javascript-development-with-github-actions-for-continuous-integration\n---\n\n## Introduction\n\n[Continuous Integration (CI)](https://en.wikipedia.org/wiki/Continuous_integration) has revolutionized web development. CI methodologies automate the integration of code changes, ensuring smooth collaboration and quality in software projects. They are common across production environments and open-source software.\n\n### Common CI checks\n\nIn a typical Continuous Integration (CI) pipeline, several key tasks are routinely performed to ensure the quality and viability of the codebase.\n\nThese often include pulling the latest code changes, running automated tests to detect bugs or inconsistencies, and executing linting processes to maintain coding standards and style guidelines.\n\nAdditionally, CI pipelines usually involve building the application to verify that it compiles correctly and performing static code analysis to catch potential issues.\n\nAdvanced CI pipelines may also run security checks, code coverage analysis to assess test effectiveness, and automated performance testing to ensure the application runs efficiently.\n\nBy automating these tasks, CI pipelines play a crucial role in maintaining the health and stability of software projects, streamlining the development process, and allowing teams to deliver high-quality software efficiently.\n\n### Why Continuous Integration?\n\nThe advantages of CI in web development include:\n\n1. **Automated Testing:** Automatically runs tests on every commit.\n\n2. **Immediate Feedback:** Quickly identifies issues for early resolution.\n\n3. **Streamlined Workflow:** Automates build and deployment processes.\n\n4. **Consistency:** Maintains coding standards across teams.\n\n5. **Quality:** Keeps code commit quality high.\n\n### What are GitHub Actions?\n\n[GitHub Actions is a CI/CD](https://en.wikipedia.org/wiki/GitHub#Services) platform that automates your workflows directly within your GitHub repository. It enables you to automate your build, test, and deployment pipeline. You can create custom workflows using configurations stored in YAML files within your GitHub repositories.\n\n## The CI Configuration File\n\nFor this configuration, I'm using my [personal site](https://github.com/Scc33/Scc33.github.io) as an example. It is a [Svelte application](https://svelte.dev), so some of these configurations are specific to Svelte.\n\nThe layout of my CI file is intended to cover only the basics of a Svelte application. You can customize these actions to your heart's desire.\n\n1. **Workflow Triggers:**\n\n2. **Build Job:**\n\n3. **Workflow Steps:**\n\n### The Complete CI Files\n\n```\nname: CI\n\non:\n  # Can run on command\n  workflow_dispatch:\n  # Runs on pushes to main\n  push:\n    branches: [master]\n  # Runs on pull requests\n  pull_request:\n    branches: [master]\n\njobs:\n  build:\n    name: build-and-test\n    # Running on ubuntu-latest, nothing special\n    runs-on: ubuntu-latest\n    steps:\n      # As usual, we simply checkout the project\n      - name: Checkout\n        uses: actions/checkout@v2\n      # Install the latest version of node\n      - name: Set up Node.js\n        uses: actions/setup-node@v1\n        with:\n          node-version: '20'\n      # Install yarn (prefered build tool)\n      - name: Install Yarn\n        run: npm install -g yarn\n      # Install project dependencies\n      - name: Install dependencies\n        run: yarn install --frozen-lockfile\n      # Make sure the application can build\n      - name: Build application\n        run: yarn run build\n      # Now we run our tests\n      - name: Run tests\n        run: yarn run test\n      # Now we run our lints\n      - name: Run lints\n        run: yarn run lint\n      # Now we run our pretty checks for code formatting\n      - name: Run pretty checks\n        run: yarn run pretty-check\n      # Finally we run svelte-check for some last minute svelte sanity\n      - name: Run svelte-check\n        run: yarn run svelte-check\n\n```\n\n### Implementing the CI Pipeline\n\nTo implement this CI pipeline, create a `.github/workflows` directory in your project and add a file (e.g., `ci.yml`) with the above configuration. This setup activates GitHub Actions to run your workflow based on the defined triggers.\n\nYou can find the [code that drives this action in my repository](https://github.com/Scc33/Scc33.github.io/blob/master/.github/workflows/ci.yml).\n\n## Conclusion\n\nIntegrating CI into your development process, particularly with JavaScript frameworks, enhances code quality and streamlines development.\n\nGitHub Actions offers a flexible, powerful tool for implementing CI in modern web development.\n\n### Additional Resources\n\n- [GitHub Actions Documentation](https://docs.github.com/en/actions)\n\n- [Svelte Official Documentation](https://svelte.dev/docs)\n\n- [Yarn Package Manager](https://yarnpkg.com/)\n\n- [ESLint Documentation](https://eslint.org)\n\n- [Automating NPM Dependency Updates with GitHub Actions](https://dev.to/scc33/automating-npm-dependency-updates-with-github-actions-444j-temp-slug-9907063)","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Introduction   Continuous Integration (CI) has revolutionized web development. CI...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/streamlining-your-javascript-development-with-github-actions-for-continuous-integration-28m5-temp-slug-8785333","public_reactions_count":0,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"introduction\" href=\"#introduction\"\u003e\n  \u003c/a\u003e\n  Introduction\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Continuous_integration\"\u003eContinuous Integration (CI)\u003c/a\u003e has revolutionized web development. CI methodologies automate the integration of code changes, ensuring smooth collaboration and quality in software projects. They are common across production environments and open-source software.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"common-ci-checks\" href=\"#common-ci-checks\"\u003e\n  \u003c/a\u003e\n  Common CI checks\n\u003c/h3\u003e\n\n\u003cp\u003eIn a typical Continuous Integration (CI) pipeline, several key tasks are routinely performed to ensure the quality and viability of the codebase.\u003c/p\u003e\n\n\u003cp\u003eThese often include pulling the latest code changes, running automated tests to detect bugs or inconsistencies, and executing linting processes to maintain coding standards and style guidelines.\u003c/p\u003e\n\n\u003cp\u003eAdditionally, CI pipelines usually involve building the application to verify that it compiles correctly and performing static code analysis to catch potential issues.\u003c/p\u003e\n\n\u003cp\u003eAdvanced CI pipelines may also run security checks, code coverage analysis to assess test effectiveness, and automated performance testing to ensure the application runs efficiently.\u003c/p\u003e\n\n\u003cp\u003eBy automating these tasks, CI pipelines play a crucial role in maintaining the health and stability of software projects, streamlining the development process, and allowing teams to deliver high-quality software efficiently.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"why-continuous-integration\" href=\"#why-continuous-integration\"\u003e\n  \u003c/a\u003e\n  Why Continuous Integration?\n\u003c/h3\u003e\n\n\u003cp\u003eThe advantages of CI in web development include:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eAutomated Testing:\u003c/strong\u003e Automatically runs tests on every commit.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eImmediate Feedback:\u003c/strong\u003e Quickly identifies issues for early resolution.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eStreamlined Workflow:\u003c/strong\u003e Automates build and deployment processes.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eConsistency:\u003c/strong\u003e Maintains coding standards across teams.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eQuality:\u003c/strong\u003e Keeps code commit quality high.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"what-are-github-actions\" href=\"#what-are-github-actions\"\u003e\n  \u003c/a\u003e\n  What are GitHub Actions?\n\u003c/h3\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/GitHub#Services\"\u003eGitHub Actions is a CI/CD\u003c/a\u003e platform that automates your workflows directly within your GitHub repository. It enables you to automate your build, test, and deployment pipeline. You can create custom workflows using configurations stored in YAML files within your GitHub repositories.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"the-ci-configuration-file\" href=\"#the-ci-configuration-file\"\u003e\n  \u003c/a\u003e\n  The CI Configuration File\n\u003c/h2\u003e\n\n\u003cp\u003eFor this configuration, I'm using my \u003ca href=\"https://github.com/Scc33/Scc33.github.io\"\u003epersonal site\u003c/a\u003e as an example. It is a \u003ca href=\"https://svelte.dev\"\u003eSvelte application\u003c/a\u003e, so some of these configurations are specific to Svelte.\u003c/p\u003e\n\n\u003cp\u003eThe layout of my CI file is intended to cover only the basics of a Svelte application. You can customize these actions to your heart's desire.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eWorkflow Triggers:\u003c/strong\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eBuild Job:\u003c/strong\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eWorkflow Steps:\u003c/strong\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"the-complete-ci-files\" href=\"#the-complete-ci-files\"\u003e\n  \u003c/a\u003e\n  The Complete CI Files\n\u003c/h3\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ename: CI\n\non:\n  # Can run on command\n  workflow_dispatch:\n  # Runs on pushes to main\n  push:\n    branches: [master]\n  # Runs on pull requests\n  pull_request:\n    branches: [master]\n\njobs:\n  build:\n    name: build-and-test\n    # Running on ubuntu-latest, nothing special\n    runs-on: ubuntu-latest\n    steps:\n      # As usual, we simply checkout the project\n      - name: Checkout\n        uses: actions/checkout@v2\n      # Install the latest version of node\n      - name: Set up Node.js\n        uses: actions/setup-node@v1\n        with:\n          node-version: '20'\n      # Install yarn (prefered build tool)\n      - name: Install Yarn\n        run: npm install -g yarn\n      # Install project dependencies\n      - name: Install dependencies\n        run: yarn install --frozen-lockfile\n      # Make sure the application can build\n      - name: Build application\n        run: yarn run build\n      # Now we run our tests\n      - name: Run tests\n        run: yarn run test\n      # Now we run our lints\n      - name: Run lints\n        run: yarn run lint\n      # Now we run our pretty checks for code formatting\n      - name: Run pretty checks\n        run: yarn run pretty-check\n      # Finally we run svelte-check for some last minute svelte sanity\n      - name: Run svelte-check\n        run: yarn run svelte-check\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch3\u003e\n  \u003ca name=\"implementing-the-ci-pipeline\" href=\"#implementing-the-ci-pipeline\"\u003e\n  \u003c/a\u003e\n  Implementing the CI Pipeline\n\u003c/h3\u003e\n\n\u003cp\u003eTo implement this CI pipeline, create a \u003ccode\u003e.github/workflows\u003c/code\u003e directory in your project and add a file (e.g., \u003ccode\u003eci.yml\u003c/code\u003e) with the above configuration. This setup activates GitHub Actions to run your workflow based on the defined triggers.\u003c/p\u003e\n\n\u003cp\u003eYou can find the \u003ca href=\"https://github.com/Scc33/Scc33.github.io/blob/master/.github/workflows/ci.yml\"\u003ecode that drives this action in my repository\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eIntegrating CI into your development process, particularly with JavaScript frameworks, enhances code quality and streamlines development.\u003c/p\u003e\n\n\u003cp\u003eGitHub Actions offers a flexible, powerful tool for implementing CI in modern web development.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"additional-resources\" href=\"#additional-resources\"\u003e\n  \u003c/a\u003e\n  Additional Resources\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://docs.github.com/en/actions\"\u003eGitHub Actions Documentation\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://svelte.dev/docs\"\u003eSvelte Official Documentation\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://yarnpkg.com/\"\u003eYarn Package Manager\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://eslint.org\"\u003eESLint Documentation\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://dev.to/scc33/automating-npm-dependency-updates-with-github-actions-444j-temp-slug-9907063\"\u003eAutomating NPM Dependency Updates with GitHub Actions\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"streamlining-your-javascript-development-with-github-actions-for-continuous-integration-28m5-temp-slug-8785333","social_image":null,"title":"Streamlining Your JavaScript Development with GitHub Actions for Continuous Integration","video":null,"video_code":null},{"created_at":"2023-11-30T05:20:45.503Z","crossposted_at":"2023-12-08T21:03:17.374Z","edited_at":null,"last_comment_at":"2023-11-30T04:16:16.000Z","published_at":"2023-11-30T04:16:16.000Z","canonical_url":"https://blog.seancoughlin.me/jsdom-vs-happy-dom-navigating-the-nuances-of-javascript-testing","feed_source_url":"https://blog.seancoughlin.me/jsdom-vs-happy-dom-navigating-the-nuances-of-javascript-testing","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: jsdom vs happy-dom: Navigating the Nuances of JavaScript Testing\npublished: true\ndate: 2023-11-30 04:16:16 UTC\ntags: #javascript #testing #jest\ncanonical_url: https://blog.seancoughlin.me/jsdom-vs-happy-dom-navigating-the-nuances-of-javascript-testing\n---\n\n## Introduction\n\nJavaScript testing is a crucial part of ensuring that web applications work correctly across different environments. In this context, tools like [jsdom](https://github.com/jsdom/jsdom) and [happy-dom](https://github.com/capricorn86/happy-dom) are incredibly valuable. They both provide ways to simulate a browser-like environment for testing purposes. Let's dive into what each of these tools is and how they compare.\n\n## Understanding Server-Side DOM in Web Development\n\nBefore we can dive fully into these tools we need to briefly discuss the DOM.\n\nWhen we talk about the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model) or Document Object Model, the immediate association is with client-side JavaScript in a web browser. It's a critical concept for web developers, as it represents the page's structure, style, and content, and allows scripts to interact with and modify it.\n\nHowever, there's another side to this: the server-side DOM. Lets explore what this means and why it's important in modern web development.\n\n### The Idea of a DOM Outside a Client (Server-Side DOM)\n\nThe [Document Object Model (DOM)](https://en.wikipedia.org/wiki/Document_Object_Model) is typically thought of as the model that the browser uses to turn an HTML document into a visible website. However, the [DOM standard](https://dom.spec.whatwg.org) can be implemented in pure JavaScript to run outside of a browser on a server.\n\nOne of the primary uses of a server-side DOM is in the context of testing web applications. In traditional scenarios, testing a web application's functionality requires rendering pages in a browser. However, with a server-side DOM, developers can simulate a browser environment on the server.\n\nThis approach is extremely useful for automated testing, allowing scripts to interact with a simulated DOM without the overhead of a real browser. The GUI of a browser is very nice for human usability but has terrible performance. Stripping out the browser overhead enables fast JavaScript unit testing.\n\n### Tools for Server-Side DOM\n\nIn the JavaScript world, tools like jsdom and happy-dom are prime examples of server-side DOM implementations. They create a simulated browser-like DOM environment within a server context.\n\nThis means JavaScript code, which typically runs in a client-side browser, can be executed on the server. This simulation can include creating and manipulating DOM elements, handling events, and sometimes even emulating browser-specific behaviors and CSS support.\n\n## What is happy-dom?\n\nhappy-dom is a relatively new entrant in the world of JavaScript testing. It's a lightweight, high-performance server-side DOM implementation. happy-Dom is designed to emulate a web browser's environment, allowing you to run and test your JavaScript code in a simulated browser-like environment on the server.\n\nOne of the key features of happy-dom is its speed and efficiency. It's built to be fast, which makes it an excellent choice for high-speed DOM operations and tests that require quick execution. This can be particularly beneficial in a [continuous integration/continuous deployment (CI/CD)](https://blog.seancoughlin.me/series/ci-cd) pipeline where speed is crucial.\n\n## What is jsdom?\n\njsdom, on the other hand, is a more established tool in the JavaScript world. It offers a robust simulation of a web browser's environment. JSdom allows you to create a virtual DOM on the server-side, enabling the testing of JavaScript intended for client-side execution in a Node.js environment.\n\njsdom is known for its comprehensive emulation of the web browser's environment. It includes a wide range of browser features, making it a go-to choice for tests that require detailed emulation, including CSS support, layout, and more complex DOM manipulations.\n\n## When to Use jsdom or happy-dom\n\nChoosing between jsdom and happy-dom often depends on your specific testing requirements:\n\nThe rough rule of thumb is happy-dom might be faster (depending on your use case) and jsdom might be more complete (simulates more of what a browser would).\n\n### Example Use Case\n\n[Vitest](https://vitest.dev) supports the use of [different DOM rendering tools](https://vitest.dev/guide/environment#test-environment). You could choose to use either happy-dom or jsdom depending on your preference.\n\n```\nexport default defineConfig({\n    plugins: [svelte()],\n    test: {\n        environment: 'jsdom', // could pass in jsdom or happy-dom\n    },\n})\n\n```\n\nFeel free to [learn more about Vitest in one of my earlier posts](https://blog.seancoughlin.me/vitest-vs-jest-the-new-javascript-testing-framework).\n\n## Conclusion\n\nIn conclusion, both JSdom and Happy-Dom offer valuable solutions for testing JavaScript in a non-browser environment. Your choice between the two should be guided by your project's specific needs. If you require detailed browser emulation, jsdom is your go-to tool. For rapid testing, particularly focused on DOM operations, happy-dom is an excellent choice.\n\nAs JavaScript continues to evolve, tools like these play a crucial role in ensuring the reliability and performance of web applications. As a software engineer, staying informed about these tools and understanding their strengths and weaknesses can significantly enhance your testing strategy and overall development workflow.\n\n---\n\nOriginally published at https://blog.seancoughlin.me.","cached_tag_list":"javascript, testing, jest","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Introduction   JavaScript testing is a crucial part of ensuring that web applications work...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/jsdom-vs-happy-dom-navigating-the-nuances-of-javascript-testing-320i","public_reactions_count":0,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"introduction\" href=\"#introduction\"\u003e\n  \u003c/a\u003e\n  Introduction\n\u003c/h2\u003e\n\n\u003cp\u003eJavaScript testing is a crucial part of ensuring that web applications work correctly across different environments. In this context, tools like \u003ca href=\"https://github.com/jsdom/jsdom\"\u003ejsdom\u003c/a\u003e and \u003ca href=\"https://github.com/capricorn86/happy-dom\"\u003ehappy-dom\u003c/a\u003e are incredibly valuable. They both provide ways to simulate a browser-like environment for testing purposes. Let's dive into what each of these tools is and how they compare.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"understanding-serverside-dom-in-web-development\" href=\"#understanding-serverside-dom-in-web-development\"\u003e\n  \u003c/a\u003e\n  Understanding Server-Side DOM in Web Development\n\u003c/h2\u003e\n\n\u003cp\u003eBefore we can dive fully into these tools we need to briefly discuss the DOM.\u003c/p\u003e\n\n\u003cp\u003eWhen we talk about the \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model\"\u003eDOM\u003c/a\u003e or Document Object Model, the immediate association is with client-side JavaScript in a web browser. It's a critical concept for web developers, as it represents the page's structure, style, and content, and allows scripts to interact with and modify it.\u003c/p\u003e\n\n\u003cp\u003eHowever, there's another side to this: the server-side DOM. Lets explore what this means and why it's important in modern web development.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"the-idea-of-a-dom-outside-a-client-serverside-dom\" href=\"#the-idea-of-a-dom-outside-a-client-serverside-dom\"\u003e\n  \u003c/a\u003e\n  The Idea of a DOM Outside a Client (Server-Side DOM)\n\u003c/h3\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://en.wikipedia.org/wiki/Document_Object_Model\"\u003eDocument Object Model (DOM)\u003c/a\u003e is typically thought of as the model that the browser uses to turn an HTML document into a visible website. However, the \u003ca href=\"https://dom.spec.whatwg.org\"\u003eDOM standard\u003c/a\u003e can be implemented in pure JavaScript to run outside of a browser on a server.\u003c/p\u003e\n\n\u003cp\u003eOne of the primary uses of a server-side DOM is in the context of testing web applications. In traditional scenarios, testing a web application's functionality requires rendering pages in a browser. However, with a server-side DOM, developers can simulate a browser environment on the server.\u003c/p\u003e\n\n\u003cp\u003eThis approach is extremely useful for automated testing, allowing scripts to interact with a simulated DOM without the overhead of a real browser. The GUI of a browser is very nice for human usability but has terrible performance. Stripping out the browser overhead enables fast JavaScript unit testing.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"tools-for-serverside-dom\" href=\"#tools-for-serverside-dom\"\u003e\n  \u003c/a\u003e\n  Tools for Server-Side DOM\n\u003c/h3\u003e\n\n\u003cp\u003eIn the JavaScript world, tools like jsdom and happy-dom are prime examples of server-side DOM implementations. They create a simulated browser-like DOM environment within a server context.\u003c/p\u003e\n\n\u003cp\u003eThis means JavaScript code, which typically runs in a client-side browser, can be executed on the server. This simulation can include creating and manipulating DOM elements, handling events, and sometimes even emulating browser-specific behaviors and CSS support.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what-is-happydom\" href=\"#what-is-happydom\"\u003e\n  \u003c/a\u003e\n  What is happy-dom?\n\u003c/h2\u003e\n\n\u003cp\u003ehappy-dom is a relatively new entrant in the world of JavaScript testing. It's a lightweight, high-performance server-side DOM implementation. happy-Dom is designed to emulate a web browser's environment, allowing you to run and test your JavaScript code in a simulated browser-like environment on the server.\u003c/p\u003e\n\n\u003cp\u003eOne of the key features of happy-dom is its speed and efficiency. It's built to be fast, which makes it an excellent choice for high-speed DOM operations and tests that require quick execution. This can be particularly beneficial in a \u003ca href=\"https://blog.seancoughlin.me/series/ci-cd\"\u003econtinuous integration/continuous deployment (CI/CD)\u003c/a\u003e pipeline where speed is crucial.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what-is-jsdom\" href=\"#what-is-jsdom\"\u003e\n  \u003c/a\u003e\n  What is jsdom?\n\u003c/h2\u003e\n\n\u003cp\u003ejsdom, on the other hand, is a more established tool in the JavaScript world. It offers a robust simulation of a web browser's environment. JSdom allows you to create a virtual DOM on the server-side, enabling the testing of JavaScript intended for client-side execution in a Node.js environment.\u003c/p\u003e\n\n\u003cp\u003ejsdom is known for its comprehensive emulation of the web browser's environment. It includes a wide range of browser features, making it a go-to choice for tests that require detailed emulation, including CSS support, layout, and more complex DOM manipulations.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"when-to-use-jsdom-or-happydom\" href=\"#when-to-use-jsdom-or-happydom\"\u003e\n  \u003c/a\u003e\n  When to Use jsdom or happy-dom\n\u003c/h2\u003e\n\n\u003cp\u003eChoosing between jsdom and happy-dom often depends on your specific testing requirements:\u003c/p\u003e\n\n\u003cp\u003eThe rough rule of thumb is happy-dom might be faster (depending on your use case) and jsdom might be more complete (simulates more of what a browser would).\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"example-use-case\" href=\"#example-use-case\"\u003e\n  \u003c/a\u003e\n  Example Use Case\n\u003c/h3\u003e\n\n\u003cp\u003e\u003ca href=\"https://vitest.dev\"\u003eVitest\u003c/a\u003e supports the use of \u003ca href=\"https://vitest.dev/guide/environment#test-environment\"\u003edifferent DOM rendering tools\u003c/a\u003e. You could choose to use either happy-dom or jsdom depending on your preference.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eexport default defineConfig({\n    plugins: [svelte()],\n    test: {\n        environment: 'jsdom', // could pass in jsdom or happy-dom\n    },\n})\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eFeel free to \u003ca href=\"https://blog.seancoughlin.me/vitest-vs-jest-the-new-javascript-testing-framework\"\u003elearn more about Vitest in one of my earlier posts\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eIn conclusion, both JSdom and Happy-Dom offer valuable solutions for testing JavaScript in a non-browser environment. Your choice between the two should be guided by your project's specific needs. If you require detailed browser emulation, jsdom is your go-to tool. For rapid testing, particularly focused on DOM operations, happy-dom is an excellent choice.\u003c/p\u003e\n\n\u003cp\u003eAs JavaScript continues to evolve, tools like these play a crucial role in ensuring the reliability and performance of web applications. As a software engineer, staying informed about these tools and understanding their strengths and weaknesses can significantly enhance your testing strategy and overall development workflow.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"jsdom-vs-happy-dom-navigating-the-nuances-of-javascript-testing-320i","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x34gzn9ldkomz7wjfb3q.png","title":"jsdom vs happy-dom: Navigating the Nuances of JavaScript Testing","video":null,"video_code":null},{"created_at":"2023-11-30T20:20:56.944Z","crossposted_at":"2023-12-08T21:00:59.160Z","edited_at":null,"last_comment_at":"2023-11-30T16:08:56.000Z","published_at":"2023-11-30T16:08:56.000Z","canonical_url":"https://blog.seancoughlin.me/understanding-cicd-streamlining-software-deployment","feed_source_url":"https://blog.seancoughlin.me/understanding-cicd-streamlining-software-deployment","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Understanding CI/CD: Streamlining Software Deployment\npublished: true\ndate: 2023-11-30 16:08:56 UTC\ntags: #cicd\ncanonical_url: https://blog.seancoughlin.me/understanding-cicd-streamlining-software-deployment\n---\n\nIn the ever-evolving landscape of software development, [Continuous Integration and Continuous Deployment (CI/CD)](https://en.wikipedia.org/wiki/CI/CD) have emerged as key practices that enhance efficiency and reliability.\n\nLet's delve into the world of CI/CD, its importance, historical evolution, and some notable platforms that facilitate these processes.\n\n## What is CI/CD?\n\n[**Continuous Integration (CI)**](https://en.wikipedia.org/wiki/Continuous_integration) involves the practice of automating the integration of code changes from multiple contributors into a single software project. It's a crucial part of modern software development practices that helps detect and fix bugs quicker, improve software quality, and reduce the time it takes to validate and release new software updates.\n\n[**Continuous Deployment (CD)**](https://en.wikipedia.org/wiki/Continuous_delivery) extends CI by automatically deploying all code changes to a testing and/or production environment after the build stage. This practice ensures a faster and more streamlined deployment process, enabling organizations to release new features, fixes, and updates rapidly and efficiently.\n\n### The Evolution of CI/CD\n\nTraditionally, software deployment was a manual and infrequent process. Developers would write code for weeks or months and then merge their changes into the main branch. This often led to conflicts and bugs, which were time-consuming and costly to fix.\n\nThe introduction of [Agile methodologies](https://en.wikipedia.org/wiki/Agile_software_development) marked the beginning of more iterative and incremental software development. CI/CD evolved as a natural extension of Agile, focusing on frequent, small, incremental changes to code and automatic testing and deployment.\n\n### Historical Shift:\n\n- **Pre-CI/CD Era** : Manual code integration, infrequent releases, and high potential for errors.\n\n- **Post-CI/CD Adoption** : Streamlined processes with automated testing and deployment, leading to more frequent and reliable software releases.\n\n### Key Benefits of CI/CD:\n\n- **Faster Release Rate** : Automates the software release process, enabling more frequent and reliable deployments.\n\n- **Improved Code Quality** : Continuous testing identifies defects early in the development cycle.\n\n- **Increased Efficiency** : Reduces manual intervention, leading to a more efficient development process.\n\n## When is CI/CD Important?\n\n- **Rapid Development Environments** : In fast-paced sectors where software needs to be updated frequently.\n\n- **Large Teams** : Facilitates coordination and integration of changes made by different developers.\n\n- **High Availability Systems** : Ensures continuous delivery and deployment with minimal downtime.\n\n## Popular CI/CD Platforms\n\nSeveral platforms have emerged to support CI/CD practices. Some of the widely used ones include:\n\n1. **Jenkins** : An open-source automation server that provides hundreds of plugins to support building, deploying, and automating any project. [Jenkins Documentation](https://www.jenkins.io/doc/)\n\n2. **GitLab CI/CD** : Integrated into GitLab, it offers a web-based CI/CD service for software development through the GitLab repository. [GitLab CI/CD Documentation](https://docs.gitlab.com/ee/ci/)\n\n3. **CircleCI** : Known for its ease of setup and maintenance, CircleCI is a cloud-based system that supports various programming languages and integrates with GitHub and Bitbucket. [CircleCI Documentation](https://circleci.com/docs/)\n\n4. **Travis CI** : A hosted continuous integration service used to build and test software projects hosted on GitHub and Bitbucket. [Travis CI Documentation](https://docs.travis-ci.com/)\n\n5. **AWS CodePipeline** : A continuous integration and continuous delivery service for fast and reliable application and infrastructure updates. [AWS CodePipeline User Guide](https://docs.aws.amazon.com/codepipeline/latest/userguide/welcome.html)\n\n6. **GitHub Actions:** An automation suite built right into GitHub. It can be used to run many types of automation including CICd pipelines. [GitHub Actions documentation](https://docs.github.com/en/actions)\n\n## Conclusion\n\nThe adoption of CI/CD is a game-changer in the software development process. It not only speeds up the development and deployment cycles but also significantly enhances the quality of the software produced.\n\nBy automating the integration and deployment process, CI/CD allows developers to focus more on developing features and less on the process of integrating and deploying them.\n\nFor software engineers and teams looking to stay ahead in the fast-paced tech world, embracing CI/CD methodologies is not just an option, but a necessity. With the plethora of tools and platforms available, implementing CI/CD has never been more accessible.\n\n---\n\nOriginally published at https://blog.seancoughlin.me.","cached_tag_list":"cicd","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"In the ever-evolving landscape of software development, Continuous Integration and Continuous...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/understanding-cicd-streamlining-software-deployment-59d","public_reactions_count":0,"processed_html":"\u003cp\u003eIn the ever-evolving landscape of software development, \u003ca href=\"https://en.wikipedia.org/wiki/CI/CD\"\u003eContinuous Integration and Continuous Deployment (CI/CD)\u003c/a\u003e have emerged as key practices that enhance efficiency and reliability.\u003c/p\u003e\n\n\u003cp\u003eLet's delve into the world of CI/CD, its importance, historical evolution, and some notable platforms that facilitate these processes.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what-is-cicd\" href=\"#what-is-cicd\"\u003e\n  \u003c/a\u003e\n  What is CI/CD?\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Continuous_integration\"\u003e\u003cstrong\u003eContinuous Integration (CI)\u003c/strong\u003e\u003c/a\u003e involves the practice of automating the integration of code changes from multiple contributors into a single software project. It's a crucial part of modern software development practices that helps detect and fix bugs quicker, improve software quality, and reduce the time it takes to validate and release new software updates.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Continuous_delivery\"\u003e\u003cstrong\u003eContinuous Deployment (CD)\u003c/strong\u003e\u003c/a\u003e extends CI by automatically deploying all code changes to a testing and/or production environment after the build stage. This practice ensures a faster and more streamlined deployment process, enabling organizations to release new features, fixes, and updates rapidly and efficiently.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"the-evolution-of-cicd\" href=\"#the-evolution-of-cicd\"\u003e\n  \u003c/a\u003e\n  The Evolution of CI/CD\n\u003c/h3\u003e\n\n\u003cp\u003eTraditionally, software deployment was a manual and infrequent process. Developers would write code for weeks or months and then merge their changes into the main branch. This often led to conflicts and bugs, which were time-consuming and costly to fix.\u003c/p\u003e\n\n\u003cp\u003eThe introduction of \u003ca href=\"https://en.wikipedia.org/wiki/Agile_software_development\"\u003eAgile methodologies\u003c/a\u003e marked the beginning of more iterative and incremental software development. CI/CD evolved as a natural extension of Agile, focusing on frequent, small, incremental changes to code and automatic testing and deployment.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"historical-shift\" href=\"#historical-shift\"\u003e\n  \u003c/a\u003e\n  Historical Shift:\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003ePre-CI/CD Era\u003c/strong\u003e : Manual code integration, infrequent releases, and high potential for errors.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003ePost-CI/CD Adoption\u003c/strong\u003e : Streamlined processes with automated testing and deployment, leading to more frequent and reliable software releases.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"key-benefits-of-cicd\" href=\"#key-benefits-of-cicd\"\u003e\n  \u003c/a\u003e\n  Key Benefits of CI/CD:\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eFaster Release Rate\u003c/strong\u003e : Automates the software release process, enabling more frequent and reliable deployments.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eImproved Code Quality\u003c/strong\u003e : Continuous testing identifies defects early in the development cycle.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eIncreased Efficiency\u003c/strong\u003e : Reduces manual intervention, leading to a more efficient development process.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"when-is-cicd-important\" href=\"#when-is-cicd-important\"\u003e\n  \u003c/a\u003e\n  When is CI/CD Important?\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eRapid Development Environments\u003c/strong\u003e : In fast-paced sectors where software needs to be updated frequently.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eLarge Teams\u003c/strong\u003e : Facilitates coordination and integration of changes made by different developers.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eHigh Availability Systems\u003c/strong\u003e : Ensures continuous delivery and deployment with minimal downtime.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"popular-cicd-platforms\" href=\"#popular-cicd-platforms\"\u003e\n  \u003c/a\u003e\n  Popular CI/CD Platforms\n\u003c/h2\u003e\n\n\u003cp\u003eSeveral platforms have emerged to support CI/CD practices. Some of the widely used ones include:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eJenkins\u003c/strong\u003e : An open-source automation server that provides hundreds of plugins to support building, deploying, and automating any project. \u003ca href=\"https://www.jenkins.io/doc/\"\u003eJenkins Documentation\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eGitLab CI/CD\u003c/strong\u003e : Integrated into GitLab, it offers a web-based CI/CD service for software development through the GitLab repository. \u003ca href=\"https://docs.gitlab.com/ee/ci/\"\u003eGitLab CI/CD Documentation\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eCircleCI\u003c/strong\u003e : Known for its ease of setup and maintenance, CircleCI is a cloud-based system that supports various programming languages and integrates with GitHub and Bitbucket. \u003ca href=\"https://circleci.com/docs/\"\u003eCircleCI Documentation\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eTravis CI\u003c/strong\u003e : A hosted continuous integration service used to build and test software projects hosted on GitHub and Bitbucket. \u003ca href=\"https://docs.travis-ci.com/\"\u003eTravis CI Documentation\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eAWS CodePipeline\u003c/strong\u003e : A continuous integration and continuous delivery service for fast and reliable application and infrastructure updates. \u003ca href=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/welcome.html\"\u003eAWS CodePipeline User Guide\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eGitHub Actions:\u003c/strong\u003e An automation suite built right into GitHub. It can be used to run many types of automation including CICd pipelines. \u003ca href=\"https://docs.github.com/en/actions\"\u003eGitHub Actions documentation\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eThe adoption of CI/CD is a game-changer in the software development process. It not only speeds up the development and deployment cycles but also significantly enhances the quality of the software produced.\u003c/p\u003e\n\n\u003cp\u003eBy automating the integration and deployment process, CI/CD allows developers to focus more on developing features and less on the process of integrating and deploying them.\u003c/p\u003e\n\n\u003cp\u003eFor software engineers and teams looking to stay ahead in the fast-paced tech world, embracing CI/CD methodologies is not just an option, but a necessity. With the plethora of tools and platforms available, implementing CI/CD has never been more accessible.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eOriginally published at \u003ca href=\"https://blog.seancoughlin.me\"\u003ehttps://blog.seancoughlin.me\u003c/a\u003e.\u003c/p\u003e\n\n","published":true,"published_from_feed":true,"show_comments":true,"slug":"understanding-cicd-streamlining-software-deployment-59d","social_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/51u5uerdhln18v6spesr.png","title":"Understanding CI/CD: Streamlining Software Deployment","video":null,"video_code":null},{"created_at":"2024-01-13T04:21:07.444Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/keeping-your-dependencies-fresh-automate-with-github-dependabot","feed_source_url":"https://blog.seancoughlin.me/keeping-your-dependencies-fresh-automate-with-github-dependabot","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Keeping Your Dependencies Fresh: Automate with GitHub Dependabot\npublished: false\ndate: 2024-01-12 23:59:35 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/keeping-your-dependencies-fresh-automate-with-github-dependabot\n---\n\nIn the ever-evolving world of software development, staying on top of dependency updates is crucial for maintaining the security and efficiency of your projects.\n\nOne tool that stands out for this task is GitHub's Dependabot, a handy bot that automates the process of keeping your dependencies up to date. In this post, we'll guide you through setting up Dependabot for a project that uses NPM or Yarn for package management.\n\n## What is GitHub Dependabot?\n\n[Dependabot](https://github.com/dependabot) is an automated tool integrated into GitHub, designed to keep your project dependencies updated. It periodically checks for new versions of your dependencies and opens pull requests to update the version numbers in your configuration files. This is particularly useful in managing potential security vulnerabilities and ensuring compatibility.\n\n## Setting Up Dependabot for NPM/Yarn and GitHub Actions\n\nTo get started, you'll need to create a configuration file for Dependabot in your repository. This file, named `dependabot.yml`, tells Dependabot which package managers to track and how often to check for updates.\n\n### Step 1: Creating the Configuration File\n\n1. **Create a new file** in your repository at `.github/dependabot.yml`.\n\n2. **Insert the configuration details**. Heres a sample configuration:\n\n### Step 2: Committing the Configuration\n\nCommit and push the `dependabot.yml` file to your repository's main branch. Once pushed, Dependabot springs into action based on the schedule you've set.\n\n## Understanding the Configuration\n\n- **Package Ecosystem** : You can specify various ecosystems such as `npm`, `github-actions`, `docker`, etc. Each ecosystem corresponds to a set of dependencies managed by a specific package manager or platform.\n\n- **Directory Path** : Indicates the location of the configuration files (`package.json` for npm/Yarn, workflow files for GitHub Actions).\n\n- **Schedule Interval** : Defines how often Dependabot checks for updates. You can set it to `daily`, `weekly`, or `monthly`.\n\n## Why Use Dependabot?\n\n- **Security** : Regular updates mean fewer vulnerabilities in your dependencies.\n\n- **Compatibility** : Stay up-to-date with the latest features and bug fixes.\n\n- **Automation** : Reduces the manual effort of checking and updating dependencies.\n\n## Example Dependabot PR\n\nDependabot will monitor for dependency updates. When it detects a dependency update it will create a pull request updating that dependency on the main branch.\n\nI use [Dependabot for my personal site](https://github.com/Scc33/Scc33.github.io/blob/master/.github/dependabot.yml). Check out this [PR as an example](https://github.com/Scc33/Scc33.github.io/pull/149) of Dependabot in action.\n\n## Further Reading and Resources\n\nFor more in-depth details and advanced configurations, visit the official [GitHub Dependabot documentation](https://docs.github.com/en/code-security/supply-chain-security/keeping-your-dependencies-updated-automatically/configuration-options-for-dependency-updates).\n\n## Conclusion\n\nSetting up Dependabot in your GitHub repositories simplifies the maintenance of your project dependencies. With just a few steps, you can automate this critical aspect of project management, allowing you to focus on development while Dependabot keeps your project dependencies secure and up-to-date. Embrace this tool, and make dependency management a breeze!\n\n* * *\n\nThank you for reading this post. Stay tuned for more insights and guides on streamlining your software development workflows.","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"In the ever-evolving world of software development, staying on top of dependency updates is crucial...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/keeping-your-dependencies-fresh-automate-with-github-dependabot-20ef-temp-slug-290486","public_reactions_count":0,"processed_html":"\u003cp\u003eIn the ever-evolving world of software development, staying on top of dependency updates is crucial for maintaining the security and efficiency of your projects.\u003c/p\u003e\n\n\u003cp\u003eOne tool that stands out for this task is GitHub's Dependabot, a handy bot that automates the process of keeping your dependencies up to date. In this post, we'll guide you through setting up Dependabot for a project that uses NPM or Yarn for package management.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what-is-github-dependabot\" href=\"#what-is-github-dependabot\"\u003e\n  \u003c/a\u003e\n  What is GitHub Dependabot?\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/dependabot\"\u003eDependabot\u003c/a\u003e is an automated tool integrated into GitHub, designed to keep your project dependencies updated. It periodically checks for new versions of your dependencies and opens pull requests to update the version numbers in your configuration files. This is particularly useful in managing potential security vulnerabilities and ensuring compatibility.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"setting-up-dependabot-for-npmyarn-and-github-actions\" href=\"#setting-up-dependabot-for-npmyarn-and-github-actions\"\u003e\n  \u003c/a\u003e\n  Setting Up Dependabot for NPM/Yarn and GitHub Actions\n\u003c/h2\u003e\n\n\u003cp\u003eTo get started, you'll need to create a configuration file for Dependabot in your repository. This file, named \u003ccode\u003edependabot.yml\u003c/code\u003e, tells Dependabot which package managers to track and how often to check for updates.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"step-1-creating-the-configuration-file\" href=\"#step-1-creating-the-configuration-file\"\u003e\n  \u003c/a\u003e\n  Step 1: Creating the Configuration File\n\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eCreate a new file\u003c/strong\u003e in your repository at \u003ccode\u003e.github/dependabot.yml\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eInsert the configuration details\u003c/strong\u003e. Heres a sample configuration:\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"step-2-committing-the-configuration\" href=\"#step-2-committing-the-configuration\"\u003e\n  \u003c/a\u003e\n  Step 2: Committing the Configuration\n\u003c/h3\u003e\n\n\u003cp\u003eCommit and push the \u003ccode\u003edependabot.yml\u003c/code\u003e file to your repository's main branch. Once pushed, Dependabot springs into action based on the schedule you've set.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"understanding-the-configuration\" href=\"#understanding-the-configuration\"\u003e\n  \u003c/a\u003e\n  Understanding the Configuration\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003ePackage Ecosystem\u003c/strong\u003e : You can specify various ecosystems such as \u003ccode\u003enpm\u003c/code\u003e, \u003ccode\u003egithub-actions\u003c/code\u003e, \u003ccode\u003edocker\u003c/code\u003e, etc. Each ecosystem corresponds to a set of dependencies managed by a specific package manager or platform.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eDirectory Path\u003c/strong\u003e : Indicates the location of the configuration files (\u003ccode\u003epackage.json\u003c/code\u003e for npm/Yarn, workflow files for GitHub Actions).\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSchedule Interval\u003c/strong\u003e : Defines how often Dependabot checks for updates. You can set it to \u003ccode\u003edaily\u003c/code\u003e, \u003ccode\u003eweekly\u003c/code\u003e, or \u003ccode\u003emonthly\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"why-use-dependabot\" href=\"#why-use-dependabot\"\u003e\n  \u003c/a\u003e\n  Why Use Dependabot?\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSecurity\u003c/strong\u003e : Regular updates mean fewer vulnerabilities in your dependencies.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eCompatibility\u003c/strong\u003e : Stay up-to-date with the latest features and bug fixes.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eAutomation\u003c/strong\u003e : Reduces the manual effort of checking and updating dependencies.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"example-dependabot-pr\" href=\"#example-dependabot-pr\"\u003e\n  \u003c/a\u003e\n  Example Dependabot PR\n\u003c/h2\u003e\n\n\u003cp\u003eDependabot will monitor for dependency updates. When it detects a dependency update it will create a pull request updating that dependency on the main branch.\u003c/p\u003e\n\n\u003cp\u003eI use \u003ca href=\"https://github.com/Scc33/Scc33.github.io/blob/master/.github/dependabot.yml\"\u003eDependabot for my personal site\u003c/a\u003e. Check out this \u003ca href=\"https://github.com/Scc33/Scc33.github.io/pull/149\"\u003ePR as an example\u003c/a\u003e of Dependabot in action.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"further-reading-and-resources\" href=\"#further-reading-and-resources\"\u003e\n  \u003c/a\u003e\n  Further Reading and Resources\n\u003c/h2\u003e\n\n\u003cp\u003eFor more in-depth details and advanced configurations, visit the official \u003ca href=\"https://docs.github.com/en/code-security/supply-chain-security/keeping-your-dependencies-updated-automatically/configuration-options-for-dependency-updates\"\u003eGitHub Dependabot documentation\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eSetting up Dependabot in your GitHub repositories simplifies the maintenance of your project dependencies. With just a few steps, you can automate this critical aspect of project management, allowing you to focus on development while Dependabot keeps your project dependencies secure and up-to-date. Embrace this tool, and make dependency management a breeze!\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eThank you for reading this post. Stay tuned for more insights and guides on streamlining your software development workflows.\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"keeping-your-dependencies-fresh-automate-with-github-dependabot-20ef-temp-slug-290486","social_image":null,"title":"Keeping Your Dependencies Fresh: Automate with GitHub Dependabot","video":null,"video_code":null},{"created_at":"2024-01-16T02:21:11.647Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/exploring-webassembly-the-future-of-web-development","feed_source_url":"https://blog.seancoughlin.me/exploring-webassembly-the-future-of-web-development","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Exploring WebAssembly: The Future of Web Development\npublished: false\ndate: 2024-01-15 23:53:58 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/exploring-webassembly-the-future-of-web-development\n---\n\n## Introduction\n\nIn the evolving landscape of web development, a groundbreaking technology has emerged, revolutionizing how we build and deploy web applications: [WebAssembly (WASM)](https://en.wikipedia.org/wiki/WebAssembly). This game-changing standard is not just another tool in the developer's toolbox; it's a leap forward, promising near-native performance and a new level of versatility for web applications.\n\n### **What is WebAssembly?**\n\nWebAssembly is an open standard that defines a binary-code format for executable programs and a corresponding textual assembly language. It serves as a compilation target for high-level languages like C, C++, and Rust, allowing them to run on web browsers with near-native performance.\n\n## Key Features of WebAssembly\n\n1. **Near-Native Performance:** Unlike traditional JavaScript, WASM code executes at a lower level, which significantly boosts performance and efficiency.\n\n2. **Language Agnostic:** Developers are not confined to JavaScript; they can write in languages like C++ or Rust and compile it into WASM. This opens up a myriad of possibilities for utilizing existing codebases and libraries.\n\n3. **Security:** WebAssembly maintains the web's security model, executing within the same secure sandbox as JavaScript.\n\n4. **Interoperability with JavaScript:** WASM can seamlessly integrate with JavaScript, complementing rather than replacing it. This interoperability allows for incremental adoption in existing projects.\n\n5. **Broad Use Cases:** Initially aimed at web applications, WebAssembly's potential has extended to server-side applications, blockchain technology, and more.\n\n6. **Widespread Browser Support:** Major browsers like Chrome, Firefox, Safari, and Edge support WebAssembly, making it accessible for a broad audience.\n\n7. **Growing Ecosystem:** The technology is backed by major tech companies, with a burgeoning ecosystem of tools and libraries.\n\n8. **Ongoing Developments:** The future of WebAssembly includes features like multi-threading and garbage collection, promising even greater capabilities.\n\n## Impact on Web Development\n\nWebAssembly is not just another incremental improvement; it's a paradigm shift. By enabling high-performance applications in the browser, it opens up new possibilities for web-based gaming, VR/AR, and complex applications like CAD systems and video editing tools.\n\n## Conclusion\n\nWebAssembly stands at the forefront of the next generation of web technologies. As it continues to evolve, its impact on the development and performance of web applications will be substantial.\n\nFor developers and companies alike, embracing WebAssembly means staying ahead in the competitive and ever-changing landscape of web development.\n\n### References for Further Reading:\n\nTo learn more about WebAssembly, here are a couple of key resources you can explore:\n\n- **WebAssembly Official Website** : This site provides comprehensive information about WebAssembly, including its design, use cases, and developer reference documentation. It's a great starting point to understand the basics and the philosophy behind WebAssembly. [Visit the WebAssembly official website](https://webassembly.org/).\n\n- **MDN Web Docs on WebAssembly** : The Mozilla Developer Network (MDN) offers detailed documentation on WebAssembly. This resource is particularly useful for understanding how WebAssembly works in modern web browsers and its practical applications. It's also a great place to learn about the low-level assembly-like language aspects of WebAssembly and its binary format. [Explore MDN's WebAssembly pages](https://developer.mozilla.org/en-US/docs/WebAssembly).\n\n[https://youtu.be/cbB3QEwWMlA?si=rOEFG5FrljCZ9dnh](https://youtu.be/cbB3QEwWMlA?si=rOEFG5FrljCZ9dnh)","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Introduction   In the evolving landscape of web development, a groundbreaking technology has...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/exploring-webassembly-the-future-of-web-development-3lpd-temp-slug-663506","public_reactions_count":0,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"introduction\" href=\"#introduction\"\u003e\n  \u003c/a\u003e\n  Introduction\n\u003c/h2\u003e\n\n\u003cp\u003eIn the evolving landscape of web development, a groundbreaking technology has emerged, revolutionizing how we build and deploy web applications: \u003ca href=\"https://en.wikipedia.org/wiki/WebAssembly\"\u003eWebAssembly (WASM)\u003c/a\u003e. This game-changing standard is not just another tool in the developer's toolbox; it's a leap forward, promising near-native performance and a new level of versatility for web applications.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"what-is-webassembly\" href=\"#what-is-webassembly\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eWhat is WebAssembly?\u003c/strong\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eWebAssembly is an open standard that defines a binary-code format for executable programs and a corresponding textual assembly language. It serves as a compilation target for high-level languages like C, C++, and Rust, allowing them to run on web browsers with near-native performance.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"key-features-of-webassembly\" href=\"#key-features-of-webassembly\"\u003e\n  \u003c/a\u003e\n  Key Features of WebAssembly\n\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eNear-Native Performance:\u003c/strong\u003e Unlike traditional JavaScript, WASM code executes at a lower level, which significantly boosts performance and efficiency.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eLanguage Agnostic:\u003c/strong\u003e Developers are not confined to JavaScript; they can write in languages like C++ or Rust and compile it into WASM. This opens up a myriad of possibilities for utilizing existing codebases and libraries.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSecurity:\u003c/strong\u003e WebAssembly maintains the web's security model, executing within the same secure sandbox as JavaScript.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eInteroperability with JavaScript:\u003c/strong\u003e WASM can seamlessly integrate with JavaScript, complementing rather than replacing it. This interoperability allows for incremental adoption in existing projects.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eBroad Use Cases:\u003c/strong\u003e Initially aimed at web applications, WebAssembly's potential has extended to server-side applications, blockchain technology, and more.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eWidespread Browser Support:\u003c/strong\u003e Major browsers like Chrome, Firefox, Safari, and Edge support WebAssembly, making it accessible for a broad audience.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eGrowing Ecosystem:\u003c/strong\u003e The technology is backed by major tech companies, with a burgeoning ecosystem of tools and libraries.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eOngoing Developments:\u003c/strong\u003e The future of WebAssembly includes features like multi-threading and garbage collection, promising even greater capabilities.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"impact-on-web-development\" href=\"#impact-on-web-development\"\u003e\n  \u003c/a\u003e\n  Impact on Web Development\n\u003c/h2\u003e\n\n\u003cp\u003eWebAssembly is not just another incremental improvement; it's a paradigm shift. By enabling high-performance applications in the browser, it opens up new possibilities for web-based gaming, VR/AR, and complex applications like CAD systems and video editing tools.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eWebAssembly stands at the forefront of the next generation of web technologies. As it continues to evolve, its impact on the development and performance of web applications will be substantial.\u003c/p\u003e\n\n\u003cp\u003eFor developers and companies alike, embracing WebAssembly means staying ahead in the competitive and ever-changing landscape of web development.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"references-for-further-reading\" href=\"#references-for-further-reading\"\u003e\n  \u003c/a\u003e\n  References for Further Reading:\n\u003c/h3\u003e\n\n\u003cp\u003eTo learn more about WebAssembly, here are a couple of key resources you can explore:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eWebAssembly Official Website\u003c/strong\u003e : This site provides comprehensive information about WebAssembly, including its design, use cases, and developer reference documentation. It's a great starting point to understand the basics and the philosophy behind WebAssembly. \u003ca href=\"https://webassembly.org/\"\u003eVisit the WebAssembly official website\u003c/a\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eMDN Web Docs on WebAssembly\u003c/strong\u003e : The Mozilla Developer Network (MDN) offers detailed documentation on WebAssembly. This resource is particularly useful for understanding how WebAssembly works in modern web browsers and its practical applications. It's also a great place to learn about the low-level assembly-like language aspects of WebAssembly and its binary format. \u003ca href=\"https://developer.mozilla.org/en-US/docs/WebAssembly\"\u003eExplore MDN's WebAssembly pages\u003c/a\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca href=\"https://youtu.be/cbB3QEwWMlA?si=rOEFG5FrljCZ9dnh\"\u003ehttps://youtu.be/cbB3QEwWMlA?si=rOEFG5FrljCZ9dnh\u003c/a\u003e\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"exploring-webassembly-the-future-of-web-development-3lpd-temp-slug-663506","social_image":null,"title":"Exploring WebAssembly: The Future of Web Development","video":null,"video_code":null},{"created_at":"2024-01-18T19:28:22.256Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/testing-a-react-app-built-with-vite-using-jest-and-babel","feed_source_url":"https://blog.seancoughlin.me/testing-a-react-app-built-with-vite-using-jest-and-babel","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Testing a React App Built with Vite Using Jest and Babel\npublished: false\ndate: 2024-01-18 18:27:42 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/testing-a-react-app-built-with-vite-using-jest-and-babel\n---\n\nIn the world of modern web development, React has become a go-to library for building dynamic user interfaces. Vite, a build tool that significantly improves the developer experience, complements React by offering a fast and efficient development workflow.\n\nHowever, setting up testing for a React application built with Vite, especially when using Jest and Babel, requires some configuration. This blog post walks you through the process step by step.\n\n## Setting Up the Environment\n\nFirst, ensure you have a React application created with Vite. Vite offers a template for React which can be used to set up a new project:\n\n```\nnpm create vite@latest my-react-app --template reactcd my-react-appnpm install\n```\n\nThis command scaffolds a React application. Once your project is set up, you can begin configuring Jest and Babel for testing.\n\n## Installing Jest and Babel\n\nJest is a delightful JavaScript Testing Framework with a focus on simplicity, and Babel is a JavaScript compiler that lets you use next generation JavaScript, today. To get started, install Jest, Babel, and their necessary plugins:\n\n```\nnpm install --save-dev jest jest-environment-jsdom jest-transform-stub @testing-library/jest-domnpm install --save-dev babel-jest @babel/core @babel/preset-env @babel/preset-react\n```\n\n## Configuring Babel\n\nCreate a Babel configuration file at the root of your project (`babel.config.cjs`) and configure it to transpile JSX and ES6+ syntax:\n\n```\nmodule.exports = { presets: ['@babel/preset-env', [ '@babel/preset-react', { runtime: \"automatic\" }] ]};\n```\n\nThis configuration tells Babel to use the necessary presets to transform JSX and modern JavaScript into a format Jest can understand.\n\n## Configuring Jest\n\nJest requires some configuration to work seamlessly with Vite and React. Create a `jest.config.cjs` file in your project root:\n\n```\nmodule.exports = { transform: { '^.+\\\\.[t|j]sx?$': 'babel-jest', }, moduleNameMapper: { '^.+\\\\.(jpg|jpeg|png|gif|webp|svg|css)$': 'jest-transform-stub' } testEnvironment: 'jsdom', testPathIgnorePatterns: [\"\u003crootDir\u003e/node_modules/\"]};\n```\n\nThis configuration tells Jest to use `babel-jest` for transforming your test files.\n\n`jest-transform-stub` is a useful tool when dealing with non-JavaScript assets in Jest tests. It allows Jest to ignore asset imports (like CSS, images, etc.), which it cannot natively handle, by transforming them into a stub.\n\n`jsdom` is a pure-JavaScript implementation of many web standards, primarily the WHATWG DOM and HTML Standards, for use with Node.js, allowing the simulation of a browser environment for testing JavaScript code outside of a browser.\n\n## The Necessity of Babel in Jest Testing with Vite and React\n\nIncorporating Babel into our Jest setup plays a crucial role, especially in the context of a React application built with Vite. Vite, by design, leverages native [ECMAScript](https://en.wikipedia.org/wiki/ECMAScript) modules (ESM) for a faster development experience, and it inherently supports modern JavaScript features and JSX out of the box. However, Jest does not natively understand ESM or JSX syntax. This is where Babel becomes essential.\n\nBabel acts as a bridge between the modern JavaScript and JSX code that we write (and that Vite comfortably handles) and the more traditional JavaScript environment that Jest operates in. When we run our tests, Jest invokes Babel to transpile the code. This transpilation step converts JSX into regular JavaScript function calls and transforms ES6+ syntax into a format that Jest can process.\n\nUnder the hood, Babel uses the specified presets - `@babel/preset-env` and `@babel/preset-react`. The `@babel/preset-env` preset allows Babel to transpile ES6+ syntax (like arrow functions, template literals, etc.) down to ES5, ensuring compatibility with Jest's execution environment. The `@babel/preset-react`, on the other hand, specifically deals with JSX, transforming it into `React.createElement` calls, which is standard JavaScript understood by Jest.\n\nWithout Babel, Jest would encounter syntax it doesnt understand (like import statements or JSX), leading to syntax errors and failed tests. Therefore, Babel is not just a convenience; it's a necessity for bridging the gap between the modern development experience provided by Vite and the testing capabilities of Jest. By integrating Babel, we ensure that our modern, efficient React codebase remains testable and robust, adhering to best practices in software development.\n\n## Writing Your First Test\n\nCreate a new file for your tests. For example, if you're testing a component `App.jsx`, create a file `App.test.jsx`. Heres a simple test case:\n\n```\nimport { render } from '@testing-library/react';import App from './App';import '@testing-library/jest-dom';test('renders learn vite link', () =\u003e { const { getByText } = render(\u003cApp /\u003e); const linkElement = getByText(/Click/i); expect(linkElement).toBeInTheDocument();});\n```\n\nThis test uses React Testing Library to render the component and then asserts that specific text is present. It uses the `jest-dom` library for the `toBeInTheDocument` matcher.\n\n## Running Tests\n\nAdd a script in your `package.json` to run Jest:\n\n```\n\"scripts\": { \"test\": \"jest\"}\n```\n\nYou can now run your tests using:\n\n```\nnpm test\n```\n\n## Conclusion\n\nSetting up Jest with a React application created using Vite ensures that your application is not only fast and efficient but also reliable and bug-free. Remember, testing is a crucial part of the development process, helping you catch bugs early and maintain code quality.\n\nFor more information and advanced configurations, refer to the official documentation:\n\n- [Jest Documentation](https://jestjs.io/docs/getting-started)\n\n- [Babel Documentation](https://babeljs.io/docs/en/)\n\n- [React Testing Library](https://testing-library.com/docs/react-testing-library/intro/)\n\nFor an example application you can check out the repo I used for writing this post:\n\n- [**vite-jest-ex**](https://github.com/Scc33/vite-jest-ex)\n\nHappy testing!","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"In the world of modern web development, React has become a go-to library for building dynamic user...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/testing-a-react-app-built-with-vite-using-jest-and-babel-1355-temp-slug-9906836","public_reactions_count":0,"processed_html":"\u003cp\u003eIn the world of modern web development, React has become a go-to library for building dynamic user interfaces. Vite, a build tool that significantly improves the developer experience, complements React by offering a fast and efficient development workflow.\u003c/p\u003e\n\n\u003cp\u003eHowever, setting up testing for a React application built with Vite, especially when using Jest and Babel, requires some configuration. This blog post walks you through the process step by step.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"setting-up-the-environment\" href=\"#setting-up-the-environment\"\u003e\n  \u003c/a\u003e\n  Setting Up the Environment\n\u003c/h2\u003e\n\n\u003cp\u003eFirst, ensure you have a React application created with Vite. Vite offers a template for React which can be used to set up a new project:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003enpm create vite@latest my-react-app --template reactcd my-react-appnpm install\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eThis command scaffolds a React application. Once your project is set up, you can begin configuring Jest and Babel for testing.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"installing-jest-and-babel\" href=\"#installing-jest-and-babel\"\u003e\n  \u003c/a\u003e\n  Installing Jest and Babel\n\u003c/h2\u003e\n\n\u003cp\u003eJest is a delightful JavaScript Testing Framework with a focus on simplicity, and Babel is a JavaScript compiler that lets you use next generation JavaScript, today. To get started, install Jest, Babel, and their necessary plugins:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003enpm install --save-dev jest jest-environment-jsdom jest-transform-stub @testing-library/jest-domnpm install --save-dev babel-jest @babel/core @babel/preset-env @babel/preset-react\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"configuring-babel\" href=\"#configuring-babel\"\u003e\n  \u003c/a\u003e\n  Configuring Babel\n\u003c/h2\u003e\n\n\u003cp\u003eCreate a Babel configuration file at the root of your project (\u003ccode\u003ebabel.config.cjs\u003c/code\u003e) and configure it to transpile JSX and ES6+ syntax:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003emodule.exports = { presets: ['@babel/preset-env', [ '@babel/preset-react', { runtime: \"automatic\" }] ]};\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eThis configuration tells Babel to use the necessary presets to transform JSX and modern JavaScript into a format Jest can understand.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"configuring-jest\" href=\"#configuring-jest\"\u003e\n  \u003c/a\u003e\n  Configuring Jest\n\u003c/h2\u003e\n\n\u003cp\u003eJest requires some configuration to work seamlessly with Vite and React. Create a \u003ccode\u003ejest.config.cjs\u003c/code\u003e file in your project root:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003emodule.exports = { transform: { '^.+\\\\.[t|j]sx?$': 'babel-jest', }, moduleNameMapper: { '^.+\\\\.(jpg|jpeg|png|gif|webp|svg|css)$': 'jest-transform-stub' } testEnvironment: 'jsdom', testPathIgnorePatterns: [\"\u0026lt;rootDir\u0026gt;/node_modules/\"]};\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eThis configuration tells Jest to use \u003ccode\u003ebabel-jest\u003c/code\u003e for transforming your test files.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003ejest-transform-stub\u003c/code\u003e is a useful tool when dealing with non-JavaScript assets in Jest tests. It allows Jest to ignore asset imports (like CSS, images, etc.), which it cannot natively handle, by transforming them into a stub.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003ejsdom\u003c/code\u003e is a pure-JavaScript implementation of many web standards, primarily the WHATWG DOM and HTML Standards, for use with Node.js, allowing the simulation of a browser environment for testing JavaScript code outside of a browser.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"the-necessity-of-babel-in-jest-testing-with-vite-and-react\" href=\"#the-necessity-of-babel-in-jest-testing-with-vite-and-react\"\u003e\n  \u003c/a\u003e\n  The Necessity of Babel in Jest Testing with Vite and React\n\u003c/h2\u003e\n\n\u003cp\u003eIncorporating Babel into our Jest setup plays a crucial role, especially in the context of a React application built with Vite. Vite, by design, leverages native \u003ca href=\"https://en.wikipedia.org/wiki/ECMAScript\"\u003eECMAScript\u003c/a\u003e modules (ESM) for a faster development experience, and it inherently supports modern JavaScript features and JSX out of the box. However, Jest does not natively understand ESM or JSX syntax. This is where Babel becomes essential.\u003c/p\u003e\n\n\u003cp\u003eBabel acts as a bridge between the modern JavaScript and JSX code that we write (and that Vite comfortably handles) and the more traditional JavaScript environment that Jest operates in. When we run our tests, Jest invokes Babel to transpile the code. This transpilation step converts JSX into regular JavaScript function calls and transforms ES6+ syntax into a format that Jest can process.\u003c/p\u003e\n\n\u003cp\u003eUnder the hood, Babel uses the specified presets - \u003ccode\u003e@babel/preset-env\u003c/code\u003e and \u003ccode\u003e@babel/preset-react\u003c/code\u003e. The \u003ccode\u003e@babel/preset-env\u003c/code\u003e preset allows Babel to transpile ES6+ syntax (like arrow functions, template literals, etc.) down to ES5, ensuring compatibility with Jest's execution environment. The \u003ccode\u003e@babel/preset-react\u003c/code\u003e, on the other hand, specifically deals with JSX, transforming it into \u003ccode\u003eReact.createElement\u003c/code\u003e calls, which is standard JavaScript understood by Jest.\u003c/p\u003e\n\n\u003cp\u003eWithout Babel, Jest would encounter syntax it doesnt understand (like import statements or JSX), leading to syntax errors and failed tests. Therefore, Babel is not just a convenience; it's a necessity for bridging the gap between the modern development experience provided by Vite and the testing capabilities of Jest. By integrating Babel, we ensure that our modern, efficient React codebase remains testable and robust, adhering to best practices in software development.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"writing-your-first-test\" href=\"#writing-your-first-test\"\u003e\n  \u003c/a\u003e\n  Writing Your First Test\n\u003c/h2\u003e\n\n\u003cp\u003eCreate a new file for your tests. For example, if you're testing a component \u003ccode\u003eApp.jsx\u003c/code\u003e, create a file \u003ccode\u003eApp.test.jsx\u003c/code\u003e. Heres a simple test case:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eimport { render } from '@testing-library/react';import App from './App';import '@testing-library/jest-dom';test('renders learn vite link', () =\u0026gt; { const { getByText } = render(\u0026lt;App /\u0026gt;); const linkElement = getByText(/Click/i); expect(linkElement).toBeInTheDocument();});\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eThis test uses React Testing Library to render the component and then asserts that specific text is present. It uses the \u003ccode\u003ejest-dom\u003c/code\u003e library for the \u003ccode\u003etoBeInTheDocument\u003c/code\u003e matcher.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"running-tests\" href=\"#running-tests\"\u003e\n  \u003c/a\u003e\n  Running Tests\n\u003c/h2\u003e\n\n\u003cp\u003eAdd a script in your \u003ccode\u003epackage.json\u003c/code\u003e to run Jest:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\"scripts\": { \"test\": \"jest\"}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eYou can now run your tests using:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003enpm test\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eSetting up Jest with a React application created using Vite ensures that your application is not only fast and efficient but also reliable and bug-free. Remember, testing is a crucial part of the development process, helping you catch bugs early and maintain code quality.\u003c/p\u003e\n\n\u003cp\u003eFor more information and advanced configurations, refer to the official documentation:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://jestjs.io/docs/getting-started\"\u003eJest Documentation\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://babeljs.io/docs/en/\"\u003eBabel Documentation\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://testing-library.com/docs/react-testing-library/intro/\"\u003eReact Testing Library\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eFor an example application you can check out the repo I used for writing this post:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/Scc33/vite-jest-ex\"\u003e\u003cstrong\u003evite-jest-ex\u003c/strong\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eHappy testing!\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"testing-a-react-app-built-with-vite-using-jest-and-babel-1355-temp-slug-9906836","social_image":null,"title":"Testing a React App Built with Vite Using Jest and Babel","video":null,"video_code":null},{"created_at":"2024-01-18T19:28:23.080Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/testing-react-applications-built-with-vite-using-vitest","feed_source_url":"https://blog.seancoughlin.me/testing-react-applications-built-with-vite-using-vitest","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Testing React Applications Built with Vite Using Vitest\npublished: false\ndate: 2024-01-18 18:59:41 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/testing-react-applications-built-with-vite-using-vitest\n---\n\nIn the ever-evolving world of JavaScript development, React remains a popular choice for building user interfaces. When paired with Vite, a next-generation frontend tooling, it accelerates development with its out-of-the-box features like fast hot module replacement (HMR).\n\nHowever, an often overlooked aspect of this powerful duo is efficient testing. This article delves into using Vitest, a Vite-native test framework, to test React applications written in plain JavaScript.\n\n## Why Vitest?\n\nVitest stands out due to its compatibility with Vite's ecosystem, enabling features like native ES modules support, fast cold-start, and fine-grained watch mode. It's a Jest-compatible framework, meaning those familiar with Jest will find it easy to adapt.\n\n## **Setting Up the Environment**\n\nFirst, ensure you have a React application created with Vite. Vite offers a template for React which can be used to set up a new project:\n\n```\nnpm create vite@latest my-react-app --template reactcd my-react-appnpm install\n```\n\nThis command scaffolds a React application. Once your project is set up, you can begin configuring Vite for testing.\n\n## Setting Up the Testing Environment\n\n### Installing Vitest\n\nTo integrate Vitest, install it along with the necessary testing libraries:\n\n```\nnpm install vitest @testing-library/react @testing-library/jest-dom jsdom --save-dev\n```\n\n### Configuring Vite and Vitest\n\nVitest benefits from sharing Vite's configuration. Create a `vite.config.js` file at the root of your project with the following:\n\n```\n// \u003creference types=\"vite/client\" /\u003e// \u003creference types=\"vitest\" /\u003eimport { defineConfig } from 'vite';import react from '@vitejs/plugin-react';// https://vitejs.dev/config/export default defineConfig({ plugins: [react()], test: { // Vitest configurations globals: true, environment: 'jsdom', },});\n```\n\nThis configuration enables React support and sets up basic Vitest configurations.\n\n- `globals` automatically imports the [utility functions](https://vitest.dev/api/vi) to each test file\n\n- `environment` is the package used to mimic a DOM (i.e. [jsdom vs happy-dom](https://dev.to/scc33/jsdom-vs-happy-dom-navigating-the-nuances-of-javascript-testing-320i))\n\n## Writing Tests\n\nWith the environment set up, lets write a simple test. Assume you have a component `MyComponent.js`:\n\n```\nexport function MyComponent() { return \u003cdiv\u003eHello, world!\u003c/div\u003e;}\n```\n\nCreate a test file `MyComponent.test.js`:\n\n```\nimport { render, screen } from '@testing-library/react';import { MyComponent } from './MyComponent';test('displays the correct text', () =\u003e { render(\u003cMyComponent /\u003e); expect(screen.getByText('Hello, world!')).toBeInTheDocument();});\n```\n\nThis test renders `MyComponent` and asserts that the text \"Hello, world!\" is present in the document.\n\n## Running Tests\n\nTo run tests, modify your `package.json` to include a test script:\n\n```\n{ // ... \"scripts\": { \"test\": \"vitest\" } // ...}\n```\n\nRun the tests using:\n\n```\nnpm run test\n```\n\nVitest will execute the tests and provide output in the console.\n\n![Vitest console output](https://cdn.hashnode.com/res/hashnode/image/upload/v1705603947556/d076d805-2466-484a-9173-b7be6efd2d14.png)\n\n## Watching for Changes\n\nVitest can watch for file changes and re-run tests. This is particularly useful during development. Run Vitest in watch mode:\n\n```\nnpm run test watch\n```\n\n## Conclusion\n\nTesting React applications with Vitest offers a seamless experience, especially for projects using Vite. It leverages Vites configuration and provides a fast, efficient testing environment.\n\nBy following this guide, you've set up a basic testing framework for your React application, enabling you to write and run tests with ease.\n\nFor further reading and advanced configurations, refer to the following official documentation:\n\n- [Vitest documentation](https://vitest.dev/)\n\n- [Vite documentation](https://vitejs.dev/)\n\nFor an example application, you can check out the repo I used for writing this post:\n\n- [vite-vitest-ex](https://github.com/Scc33/vite-vitest-ex)\n\nRemember, testing is not just about finding bugs but ensuring your application behaves as expected, making it a crucial part of the development process.\n\nHappy testing!","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"In the ever-evolving world of JavaScript development, React remains a popular choice for building...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/testing-react-applications-built-with-vite-using-vitest-58gi-temp-slug-9291038","public_reactions_count":0,"processed_html":"\u003cp\u003eIn the ever-evolving world of JavaScript development, React remains a popular choice for building user interfaces. When paired with Vite, a next-generation frontend tooling, it accelerates development with its out-of-the-box features like fast hot module replacement (HMR).\u003c/p\u003e\n\n\u003cp\u003eHowever, an often overlooked aspect of this powerful duo is efficient testing. This article delves into using Vitest, a Vite-native test framework, to test React applications written in plain JavaScript.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"why-vitest\" href=\"#why-vitest\"\u003e\n  \u003c/a\u003e\n  Why Vitest?\n\u003c/h2\u003e\n\n\u003cp\u003eVitest stands out due to its compatibility with Vite's ecosystem, enabling features like native ES modules support, fast cold-start, and fine-grained watch mode. It's a Jest-compatible framework, meaning those familiar with Jest will find it easy to adapt.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"setting-up-the-environment\" href=\"#setting-up-the-environment\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eSetting Up the Environment\u003c/strong\u003e\n\u003c/h2\u003e\n\n\u003cp\u003eFirst, ensure you have a React application created with Vite. Vite offers a template for React which can be used to set up a new project:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003enpm create vite@latest my-react-app --template reactcd my-react-appnpm install\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eThis command scaffolds a React application. Once your project is set up, you can begin configuring Vite for testing.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"setting-up-the-testing-environment\" href=\"#setting-up-the-testing-environment\"\u003e\n  \u003c/a\u003e\n  Setting Up the Testing Environment\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"installing-vitest\" href=\"#installing-vitest\"\u003e\n  \u003c/a\u003e\n  Installing Vitest\n\u003c/h3\u003e\n\n\u003cp\u003eTo integrate Vitest, install it along with the necessary testing libraries:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003enpm install vitest @testing-library/react @testing-library/jest-dom jsdom --save-dev\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch3\u003e\n  \u003ca name=\"configuring-vite-and-vitest\" href=\"#configuring-vite-and-vitest\"\u003e\n  \u003c/a\u003e\n  Configuring Vite and Vitest\n\u003c/h3\u003e\n\n\u003cp\u003eVitest benefits from sharing Vite's configuration. Create a \u003ccode\u003evite.config.js\u003c/code\u003e file at the root of your project with the following:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e// \u0026lt;reference types=\"vite/client\" /\u0026gt;// \u0026lt;reference types=\"vitest\" /\u0026gt;import { defineConfig } from 'vite';import react from '@vitejs/plugin-react';// https://vitejs.dev/config/export default defineConfig({ plugins: [react()], test: { // Vitest configurations globals: true, environment: 'jsdom', },});\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eThis configuration enables React support and sets up basic Vitest configurations.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eglobals\u003c/code\u003e automatically imports the \u003ca href=\"https://vitest.dev/api/vi\"\u003eutility functions\u003c/a\u003e to each test file\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eenvironment\u003c/code\u003e is the package used to mimic a DOM (i.e. \u003ca href=\"https://dev.to/scc33/jsdom-vs-happy-dom-navigating-the-nuances-of-javascript-testing-320i\"\u003ejsdom vs happy-dom\u003c/a\u003e)\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"writing-tests\" href=\"#writing-tests\"\u003e\n  \u003c/a\u003e\n  Writing Tests\n\u003c/h2\u003e\n\n\u003cp\u003eWith the environment set up, lets write a simple test. Assume you have a component \u003ccode\u003eMyComponent.js\u003c/code\u003e:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eexport function MyComponent() { return \u0026lt;div\u0026gt;Hello, world!\u0026lt;/div\u0026gt;;}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eCreate a test file \u003ccode\u003eMyComponent.test.js\u003c/code\u003e:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eimport { render, screen } from '@testing-library/react';import { MyComponent } from './MyComponent';test('displays the correct text', () =\u0026gt; { render(\u0026lt;MyComponent /\u0026gt;); expect(screen.getByText('Hello, world!')).toBeInTheDocument();});\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eThis test renders \u003ccode\u003eMyComponent\u003c/code\u003e and asserts that the text \"Hello, world!\" is present in the document.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"running-tests\" href=\"#running-tests\"\u003e\n  \u003c/a\u003e\n  Running Tests\n\u003c/h2\u003e\n\n\u003cp\u003eTo run tests, modify your \u003ccode\u003epackage.json\u003c/code\u003e to include a test script:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e{ // ... \"scripts\": { \"test\": \"vitest\" } // ...}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eRun the tests using:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003enpm run test\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eVitest will execute the tests and provide output in the console.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--6EqD2cOB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1705603947556/d076d805-2466-484a-9173-b7be6efd2d14.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--6EqD2cOB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1705603947556/d076d805-2466-484a-9173-b7be6efd2d14.png\" alt=\"Vitest console output\" loading=\"lazy\" width=\"767\" height=\"198\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"watching-for-changes\" href=\"#watching-for-changes\"\u003e\n  \u003c/a\u003e\n  Watching for Changes\n\u003c/h2\u003e\n\n\u003cp\u003eVitest can watch for file changes and re-run tests. This is particularly useful during development. Run Vitest in watch mode:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003enpm run test watch\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eTesting React applications with Vitest offers a seamless experience, especially for projects using Vite. It leverages Vites configuration and provides a fast, efficient testing environment.\u003c/p\u003e\n\n\u003cp\u003eBy following this guide, you've set up a basic testing framework for your React application, enabling you to write and run tests with ease.\u003c/p\u003e\n\n\u003cp\u003eFor further reading and advanced configurations, refer to the following official documentation:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://vitest.dev/\"\u003eVitest documentation\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://vitejs.dev/\"\u003eVite documentation\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eFor an example application, you can check out the repo I used for writing this post:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/Scc33/vite-vitest-ex\"\u003evite-vitest-ex\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eRemember, testing is not just about finding bugs but ensuring your application behaves as expected, making it a crucial part of the development process.\u003c/p\u003e\n\n\u003cp\u003eHappy testing!\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"testing-react-applications-built-with-vite-using-vitest-58gi-temp-slug-9291038","social_image":null,"title":"Testing React Applications Built with Vite Using Vitest","video":null,"video_code":null},{"created_at":"2024-01-20T01:21:21.495Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/streamlining-web-deployment-with-github-actions-and-continuous-delivery","feed_source_url":"https://blog.seancoughlin.me/streamlining-web-deployment-with-github-actions-and-continuous-delivery","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Streamlining Web Deployment with GitHub Actions and Continuous Delivery\npublished: false\ndate: 2024-01-19 23:11:04 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/streamlining-web-deployment-with-github-actions-and-continuous-delivery\n---\n\n## Introduction to GitHub Actions\n\nGitHub Actions is a powerful automation platform that integrates directly with GitHub repositories, enabling developers to automate their software workflows.\n\nIt allows you to create custom software development life cycle (SDLC) workflows directly in your GitHub repository. These workflows can encompass a variety of tasks, such as testing code, building applications, and deploying projects.\n\n## Understanding a Continuous Deployment Script\n\nNow, let's break down this script, which is designed for deploying a static site using GitHub Actions.\n\n```\nname: Deployon: workflow_dispatch: workflow_call:jobs: deploy: runs-on: ubuntu-latest permissions: contents: write steps: - name: Checkout uses: actions/checkout@v4 - name: Set up Node.js uses: actions/setup-node@v4 with: node-version: \"20\" - name: Install Yarn run: npm install -g yarn - name: Install dependencies run: yarn install --frozen-lockfile - name: Predeploy run: yarn predeploy - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./build\n```\n\n1. **Trigger Points:** The workflow can be triggered manually (`workflow_dispatch`) or by other GitHub Actions workflows (`workflow_call`).\n\n2. **Deployment Job:** The job runs on the latest Ubuntu runner (`ubuntu-latest`) and has write permissions.\n\n3. **Steps:**\n\n### Building the Static Site in the Predeploy Step\n\nIn this continuous deployment workflow, the `predeploy` step plays a crucial role, particularly for applications built with Vite. [Vite is a modern frontend build tool](https://dev.to/scc33/maximizing-web-development-efficiency-a-comprehensive-guide-to-vite-2lg1-temp-slug-2923514) that significantly improves the development experience with features like fast hot module replacement (HMR).\n\nHowever, it's important to note that Vite is just one choice among many for building static sites. Developers can choose from various other tools based on their project requirements and preferences.\n\nIn the provided script, the `predeploy` command is defined as `\"predeploy\": \"vitest run --coverage \u0026\u0026 vite build\"`. This command performs two essential tasks:\n\n1. **Running Tests with Vitest:** The first part, `vitest run --coverage`, involves running the application's test suite using Vitest, a Vite-native test runner. This step ensures that all tests pass, providing a 'sanity check' to catch any bugs or issues before the deployment proceeds. The `--coverage` flag also generates a code coverage report, offering insights into the extent to which the codebase is covered by tests.\n\n2. **Building the Application with Vite:** The second part of the command, `vite build`, triggers Vite to compile and bundle the application. Vite's build process is optimized for performance, resulting in a highly efficient production build. This process generates a `build` directory containing the compiled static files ready for deployment.\n\nIncluding this `predeploy` step in the GitHub Actions workflow ensures that the deployed application is not only up-to-date but also thoroughly tested and optimized for production. This reflects best practices in modern web development, emphasizing the importance of testing and build quality in continuous deployment processes.\n\n## Workflow of Continuous Deployment\n\n1. **Develop and Commit:** Write your code and commit changes to your repository.\n\n2. **Automated Tests (CI):** Upon each commit, GitHub Actions can run tests to ensure code quality and functionality.\n\n3. **Build:** For a statically generated site, a build process compiles the source code into static files.\n\n4. **Deploy (CD):** The script automatically deploys the built site to a hosting service, in this case, GitHub Pages.\n\n5. **Monitor and Update:** Continuously monitor the deployment for any issues and make updates as necessary.\n\n## Benefits and Best Practices\n\n- **Speed and Efficiency:** Automated deployments save time and reduce manual errors.\n\n- **Reliability:** Continuous integration ensures that your code is tested, making deployments more reliable.\n\n- **Documentation:** Always document your CI/CD process for clarity and maintainability.\n\n## Examples and Further Reading\n\n- GitHub Actions Documentation: [GitHub Actions](https://docs.github.com/en/actions)\n\n- CI/CD Best Practices: [Continuous Integration and Continuous Deployment](https://www.atlassian.com/continuous-delivery/principles/continuous-integration-vs-delivery-vs-deployment)\n\n- Static Site Deployment Example: [Deploying a Static Site to GitHub Pages](https://github.com/Scc33/Scc33.github.io/blob/master/.github/workflows/deploy.yml)\n\n- An Example Companion CI Script: [GitHub Actions CI Script](https://github.com/Scc33/Scc33.github.io/blob/master/.github/workflows/ci.yml)\n\n- Continuous Integration Explanation and Examples - [Streamlining Your JavaScript Development with GitHub Actions for Continuous Integration](https://dev.to/scc33/streamlining-your-javascript-development-with-github-actions-for-continuous-integration-28m5-temp-slug-8785333)\n\nThis workflow showcases the power of GitHub Actions in automating and simplifying the deployment process, making it an essential tool for modern web development.","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Introduction to GitHub Actions   GitHub Actions is a powerful automation platform that...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/streamlining-web-deployment-with-github-actions-and-continuous-delivery-1opm-temp-slug-8864097","public_reactions_count":0,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"introduction-to-github-actions\" href=\"#introduction-to-github-actions\"\u003e\n  \u003c/a\u003e\n  Introduction to GitHub Actions\n\u003c/h2\u003e\n\n\u003cp\u003eGitHub Actions is a powerful automation platform that integrates directly with GitHub repositories, enabling developers to automate their software workflows.\u003c/p\u003e\n\n\u003cp\u003eIt allows you to create custom software development life cycle (SDLC) workflows directly in your GitHub repository. These workflows can encompass a variety of tasks, such as testing code, building applications, and deploying projects.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"understanding-a-continuous-deployment-script\" href=\"#understanding-a-continuous-deployment-script\"\u003e\n  \u003c/a\u003e\n  Understanding a Continuous Deployment Script\n\u003c/h2\u003e\n\n\u003cp\u003eNow, let's break down this script, which is designed for deploying a static site using GitHub Actions.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ename: Deployon: workflow_dispatch: workflow_call:jobs: deploy: runs-on: ubuntu-latest permissions: contents: write steps: - name: Checkout uses: actions/checkout@v4 - name: Set up Node.js uses: actions/setup-node@v4 with: node-version: \"20\" - name: Install Yarn run: npm install -g yarn - name: Install dependencies run: yarn install --frozen-lockfile - name: Predeploy run: yarn predeploy - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./build\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eTrigger Points:\u003c/strong\u003e The workflow can be triggered manually (\u003ccode\u003eworkflow_dispatch\u003c/code\u003e) or by other GitHub Actions workflows (\u003ccode\u003eworkflow_call\u003c/code\u003e).\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eDeployment Job:\u003c/strong\u003e The job runs on the latest Ubuntu runner (\u003ccode\u003eubuntu-latest\u003c/code\u003e) and has write permissions.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSteps:\u003c/strong\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"building-the-static-site-in-the-predeploy-step\" href=\"#building-the-static-site-in-the-predeploy-step\"\u003e\n  \u003c/a\u003e\n  Building the Static Site in the Predeploy Step\n\u003c/h3\u003e\n\n\u003cp\u003eIn this continuous deployment workflow, the \u003ccode\u003epredeploy\u003c/code\u003e step plays a crucial role, particularly for applications built with Vite. \u003ca href=\"https://dev.to/scc33/maximizing-web-development-efficiency-a-comprehensive-guide-to-vite-2lg1-temp-slug-2923514\"\u003eVite is a modern frontend build tool\u003c/a\u003e that significantly improves the development experience with features like fast hot module replacement (HMR).\u003c/p\u003e\n\n\u003cp\u003eHowever, it's important to note that Vite is just one choice among many for building static sites. Developers can choose from various other tools based on their project requirements and preferences.\u003c/p\u003e\n\n\u003cp\u003eIn the provided script, the \u003ccode\u003epredeploy\u003c/code\u003e command is defined as \u003ccode\u003e\"predeploy\": \"vitest run --coverage \u0026amp;\u0026amp; vite build\"\u003c/code\u003e. This command performs two essential tasks:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eRunning Tests with Vitest:\u003c/strong\u003e The first part, \u003ccode\u003evitest run --coverage\u003c/code\u003e, involves running the application's test suite using Vitest, a Vite-native test runner. This step ensures that all tests pass, providing a 'sanity check' to catch any bugs or issues before the deployment proceeds. The \u003ccode\u003e--coverage\u003c/code\u003e flag also generates a code coverage report, offering insights into the extent to which the codebase is covered by tests.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eBuilding the Application with Vite:\u003c/strong\u003e The second part of the command, \u003ccode\u003evite build\u003c/code\u003e, triggers Vite to compile and bundle the application. Vite's build process is optimized for performance, resulting in a highly efficient production build. This process generates a \u003ccode\u003ebuild\u003c/code\u003e directory containing the compiled static files ready for deployment.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eIncluding this \u003ccode\u003epredeploy\u003c/code\u003e step in the GitHub Actions workflow ensures that the deployed application is not only up-to-date but also thoroughly tested and optimized for production. This reflects best practices in modern web development, emphasizing the importance of testing and build quality in continuous deployment processes.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"workflow-of-continuous-deployment\" href=\"#workflow-of-continuous-deployment\"\u003e\n  \u003c/a\u003e\n  Workflow of Continuous Deployment\n\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eDevelop and Commit:\u003c/strong\u003e Write your code and commit changes to your repository.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eAutomated Tests (CI):\u003c/strong\u003e Upon each commit, GitHub Actions can run tests to ensure code quality and functionality.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eBuild:\u003c/strong\u003e For a statically generated site, a build process compiles the source code into static files.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eDeploy (CD):\u003c/strong\u003e The script automatically deploys the built site to a hosting service, in this case, GitHub Pages.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eMonitor and Update:\u003c/strong\u003e Continuously monitor the deployment for any issues and make updates as necessary.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"benefits-and-best-practices\" href=\"#benefits-and-best-practices\"\u003e\n  \u003c/a\u003e\n  Benefits and Best Practices\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSpeed and Efficiency:\u003c/strong\u003e Automated deployments save time and reduce manual errors.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eReliability:\u003c/strong\u003e Continuous integration ensures that your code is tested, making deployments more reliable.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eDocumentation:\u003c/strong\u003e Always document your CI/CD process for clarity and maintainability.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"examples-and-further-reading\" href=\"#examples-and-further-reading\"\u003e\n  \u003c/a\u003e\n  Examples and Further Reading\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eGitHub Actions Documentation: \u003ca href=\"https://docs.github.com/en/actions\"\u003eGitHub Actions\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eCI/CD Best Practices: \u003ca href=\"https://www.atlassian.com/continuous-delivery/principles/continuous-integration-vs-delivery-vs-deployment\"\u003eContinuous Integration and Continuous Deployment\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eStatic Site Deployment Example: \u003ca href=\"https://github.com/Scc33/Scc33.github.io/blob/master/.github/workflows/deploy.yml\"\u003eDeploying a Static Site to GitHub Pages\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eAn Example Companion CI Script: \u003ca href=\"https://github.com/Scc33/Scc33.github.io/blob/master/.github/workflows/ci.yml\"\u003eGitHub Actions CI Script\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eContinuous Integration Explanation and Examples - \u003ca href=\"https://dev.to/scc33/streamlining-your-javascript-development-with-github-actions-for-continuous-integration-28m5-temp-slug-8785333\"\u003eStreamlining Your JavaScript Development with GitHub Actions for Continuous Integration\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThis workflow showcases the power of GitHub Actions in automating and simplifying the deployment process, making it an essential tool for modern web development.\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"streamlining-web-deployment-with-github-actions-and-continuous-delivery-1opm-temp-slug-8864097","social_image":null,"title":"Streamlining Web Deployment with GitHub Actions and Continuous Delivery","video":null,"video_code":null},{"created_at":"2024-01-20T01:21:22.106Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/the-importance-of-accessibility-in-web-development-and-auto-testing-with-playwright-and-axe-playwright","feed_source_url":"https://blog.seancoughlin.me/the-importance-of-accessibility-in-web-development-and-auto-testing-with-playwright-and-axe-playwright","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: The Importance of Accessibility in Web Development and Auto-Testing with Playwright and Axe-Playwright\npublished: false\ndate: 2024-01-19 23:26:44 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/the-importance-of-accessibility-in-web-development-and-auto-testing-with-playwright-and-axe-playwright\n---\n\n## Understanding Web Accessibility Standards\n\nWeb accessibility standards are guidelines and best practices that ensure the web is usable by everyone, including people with disabilities. These standards are crucial as they break down barriers and provide equal access and opportunity.\n\nThe most widely recognized standards are the [Web Content Accessibility Guidelines (WCAG)](https://www.w3.org/WAI/standards-guidelines/wcag/), developed by the [World Wide Web Consortium (W3C)](https://www.w3.org). They focus on four main principles:\n\n1. [**Perceivable**](https://www.w3.org/TR/WCAG22/#perceivable): Information and user interface components must be presentable in ways that users can perceive.\n\n2. [**Operable**](https://www.w3.org/TR/WCAG22/#operable): User interface components and navigation must be operable.\n\n3. [**Understandable**](https://www.w3.org/TR/WCAG22/#understandable): Information and the operation of the user interface must be understandable.\n\n4. [**Robust**](https://www.w3.org/TR/WCAG22/#robust): Content must be robust enough to be interpreted reliably by a wide variety of user agents, including assistive technologies.\n\nAdhering to these standards isn't just a matter of compliance; it's about inclusivity and reaching a wider audience.\n\n### Importance of Accessibility\n\n1. **Inclusivity** : An accessible website is usable by people with a wide range of abilities and disabilities.\n\n2. **Legal Compliance** : Many countries have laws requiring web accessibility.\n\n3. **SEO Benefits** : Accessible websites tend to rank higher in search engine results.\n\n4. **Broader Reach** : You cater to a larger audience, including the elderly and people with disabilities.\n\n5. **Improved User Experience** : Accessibility improvements often enhance the overall user experience for all users.\n\n## Auto-Testing for Accessibility with Playwright and Axe-Playwright\n\nAutomated testing is a crucial component in ensuring web accessibility. It helps in identifying and fixing accessibility issues early in the development process.\n\nHere, well discuss how to use [Playwright](https://www.npmjs.com/package/playwright), a powerful browser automation tool, in conjunction with [Axe-Playwright](https://www.npmjs.com/package/axe-playwright), an accessibility testing library.\n\n### Integrating Playwright and Axe-Playwright\n\nThe code block provided demonstrates how to integrate Playwright with Axe-Playwright for automated accessibility testing:\n\n```\nimport { test, expect } from \"@playwright/test\";import { injectAxe, checkA11y, getViolations } from \"axe-playwright\";test.describe(\"Accessibility Tests\", () =\u003e { test.beforeEach(async ({ page }) =\u003e { await page.goto(\"/\"); await injectAxe(page); }); test(\"simple accessibility run\", async ({ page }) =\u003e { await checkA11y(page, null, { detailedReport: true }); const violations = await getViolations(page, null); expect(violations.length).toBe(0); });});\n```\n\nThis script includes the following steps:\n\n1. **Setup** : Import necessary modules and describe the test suite.\n\n2. **BeforeEach Hook** : Navigate to the page and inject the Axe core library for accessibility checks.\n\n3. **Accessibility Test** : Run the accessibility check (`checkA11y`) and retrieve any violations (`getViolations`).\n\n4. **Assertion** : Ensure there are no accessibility violations (`expect(violations.length).toBe(0)`).\n\nSee the [axe-playwright library](https://github.com/abhinaba-ghosh/axe-playwright) to learn more about how this package works.\n\n### Why Automated Testing Matters\n\n1. **Efficiency** : Automatically identifies accessibility issues quickly.\n\n2. **Consistency** : Ensures consistent adherence to accessibility standards.\n\n3. **Early Detection** : Detects problems early in the development cycle, reducing the cost and time to fix them.\n\n## Conclusion\n\nWeb accessibility is not just a regulatory requirement but a moral and ethical obligation to make the web more inclusive.\n\nTools like Playwright and Axe-Playwright enable developers to seamlessly integrate accessibility testing into their development workflow, ensuring that websites are accessible to all users, regardless of their abilities.\n\nEmbracing these practices not only enhances your development skills but also contributes positively to creating a more inclusive digital world.","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Understanding Web Accessibility Standards   Web accessibility standards are guidelines and...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/the-importance-of-accessibility-in-web-development-and-auto-testing-with-playwright-and-axe-playwright-359c-temp-slug-6612243","public_reactions_count":0,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"understanding-web-accessibility-standards\" href=\"#understanding-web-accessibility-standards\"\u003e\n  \u003c/a\u003e\n  Understanding Web Accessibility Standards\n\u003c/h2\u003e\n\n\u003cp\u003eWeb accessibility standards are guidelines and best practices that ensure the web is usable by everyone, including people with disabilities. These standards are crucial as they break down barriers and provide equal access and opportunity.\u003c/p\u003e\n\n\u003cp\u003eThe most widely recognized standards are the \u003ca href=\"https://www.w3.org/WAI/standards-guidelines/wcag/\"\u003eWeb Content Accessibility Guidelines (WCAG)\u003c/a\u003e, developed by the \u003ca href=\"https://www.w3.org\"\u003eWorld Wide Web Consortium (W3C)\u003c/a\u003e. They focus on four main principles:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.w3.org/TR/WCAG22/#perceivable\"\u003e\u003cstrong\u003ePerceivable\u003c/strong\u003e\u003c/a\u003e: Information and user interface components must be presentable in ways that users can perceive.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.w3.org/TR/WCAG22/#operable\"\u003e\u003cstrong\u003eOperable\u003c/strong\u003e\u003c/a\u003e: User interface components and navigation must be operable.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.w3.org/TR/WCAG22/#understandable\"\u003e\u003cstrong\u003eUnderstandable\u003c/strong\u003e\u003c/a\u003e: Information and the operation of the user interface must be understandable.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://www.w3.org/TR/WCAG22/#robust\"\u003e\u003cstrong\u003eRobust\u003c/strong\u003e\u003c/a\u003e: Content must be robust enough to be interpreted reliably by a wide variety of user agents, including assistive technologies.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eAdhering to these standards isn't just a matter of compliance; it's about inclusivity and reaching a wider audience.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"importance-of-accessibility\" href=\"#importance-of-accessibility\"\u003e\n  \u003c/a\u003e\n  Importance of Accessibility\n\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eInclusivity\u003c/strong\u003e : An accessible website is usable by people with a wide range of abilities and disabilities.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eLegal Compliance\u003c/strong\u003e : Many countries have laws requiring web accessibility.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSEO Benefits\u003c/strong\u003e : Accessible websites tend to rank higher in search engine results.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eBroader Reach\u003c/strong\u003e : You cater to a larger audience, including the elderly and people with disabilities.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eImproved User Experience\u003c/strong\u003e : Accessibility improvements often enhance the overall user experience for all users.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"autotesting-for-accessibility-with-playwright-and-axeplaywright\" href=\"#autotesting-for-accessibility-with-playwright-and-axeplaywright\"\u003e\n  \u003c/a\u003e\n  Auto-Testing for Accessibility with Playwright and Axe-Playwright\n\u003c/h2\u003e\n\n\u003cp\u003eAutomated testing is a crucial component in ensuring web accessibility. It helps in identifying and fixing accessibility issues early in the development process.\u003c/p\u003e\n\n\u003cp\u003eHere, well discuss how to use \u003ca href=\"https://www.npmjs.com/package/playwright\"\u003ePlaywright\u003c/a\u003e, a powerful browser automation tool, in conjunction with \u003ca href=\"https://www.npmjs.com/package/axe-playwright\"\u003eAxe-Playwright\u003c/a\u003e, an accessibility testing library.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"integrating-playwright-and-axeplaywright\" href=\"#integrating-playwright-and-axeplaywright\"\u003e\n  \u003c/a\u003e\n  Integrating Playwright and Axe-Playwright\n\u003c/h3\u003e\n\n\u003cp\u003eThe code block provided demonstrates how to integrate Playwright with Axe-Playwright for automated accessibility testing:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eimport { test, expect } from \"@playwright/test\";import { injectAxe, checkA11y, getViolations } from \"axe-playwright\";test.describe(\"Accessibility Tests\", () =\u0026gt; { test.beforeEach(async ({ page }) =\u0026gt; { await page.goto(\"/\"); await injectAxe(page); }); test(\"simple accessibility run\", async ({ page }) =\u0026gt; { await checkA11y(page, null, { detailedReport: true }); const violations = await getViolations(page, null); expect(violations.length).toBe(0); });});\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eThis script includes the following steps:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSetup\u003c/strong\u003e : Import necessary modules and describe the test suite.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eBeforeEach Hook\u003c/strong\u003e : Navigate to the page and inject the Axe core library for accessibility checks.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eAccessibility Test\u003c/strong\u003e : Run the accessibility check (\u003ccode\u003echeckA11y\u003c/code\u003e) and retrieve any violations (\u003ccode\u003egetViolations\u003c/code\u003e).\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eAssertion\u003c/strong\u003e : Ensure there are no accessibility violations (\u003ccode\u003eexpect(violations.length).toBe(0)\u003c/code\u003e).\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eSee the \u003ca href=\"https://github.com/abhinaba-ghosh/axe-playwright\"\u003eaxe-playwright library\u003c/a\u003e to learn more about how this package works.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"why-automated-testing-matters\" href=\"#why-automated-testing-matters\"\u003e\n  \u003c/a\u003e\n  Why Automated Testing Matters\n\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eEfficiency\u003c/strong\u003e : Automatically identifies accessibility issues quickly.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eConsistency\u003c/strong\u003e : Ensures consistent adherence to accessibility standards.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eEarly Detection\u003c/strong\u003e : Detects problems early in the development cycle, reducing the cost and time to fix them.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eWeb accessibility is not just a regulatory requirement but a moral and ethical obligation to make the web more inclusive.\u003c/p\u003e\n\n\u003cp\u003eTools like Playwright and Axe-Playwright enable developers to seamlessly integrate accessibility testing into their development workflow, ensuring that websites are accessible to all users, regardless of their abilities.\u003c/p\u003e\n\n\u003cp\u003eEmbracing these practices not only enhances your development skills but also contributes positively to creating a more inclusive digital world.\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"the-importance-of-accessibility-in-web-development-and-auto-testing-with-playwright-and-axe-playwright-359c-temp-slug-6612243","social_image":null,"title":"The Importance of Accessibility in Web Development and Auto-Testing with Playwright and Axe-Playwright","video":null,"video_code":null},{"created_at":"2024-01-20T16:21:33.275Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/enhancing-web-performance-and-quality-integrating-playwright-and-lighthouse","feed_source_url":"https://blog.seancoughlin.me/enhancing-web-performance-and-quality-integrating-playwright-and-lighthouse","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Enhancing Web Performance and Quality: Integrating Playwright and Lighthouse\npublished: false\ndate: 2024-01-20 14:57:30 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/enhancing-web-performance-and-quality-integrating-playwright-and-lighthouse\n---\n\n## Introduction\n\nEnsuring optimal performance and quality is paramount for web development. This is where automated testing tools like Playwright and Google's Lighthouse come into play.\n\nFor software engineers, integrating these tools can assist the testing process, paving the way for more robust, user-friendly web applications.\n\n### Understanding Playwright\n\nPlaywright is a cutting-edge, open-source framework developed by Microsoft. It's designed to enable end-to-end testing for web applications across all major browsers including Chromium, Firefox, and WebKit.\n\nIts standout features include cross-browser support, native mobile emulation, and the ability to simulate various network conditions. This makes Playwright an invaluable tool for developers aiming to create versatile, cross-platform web applications.\n\nFor more information, visit [Playwright Documentation](https://playwright.dev/docs/intro).\n\n### Exploring Lighthouse\n\nGoogle's Lighthouse is an automated tool designed for web page quality assessments. It provides audits for performance, accessibility, progressive web applications, and more, offering scores across these domains along with actionable recommendations for improvement.\n\nLighthouse is instrumental in identifying areas for enhancement in web applications, ensuring they meet the highest standards of quality.\n\nLearn more at [Lighthouse Documentation](https://developers.google.com/web/tools/lighthouse).\n\n![Lighthouse execution](https://cdn.hashnode.com/res/hashnode/image/upload/v1705761657966/bcc23051-78a4-4eba-80e1-e177c90921ee.png)\n\n### The Importance of Combined Testing\n\nIntegrating Playwright with Lighthouse brings a holistic approach to testing. While Playwright ensures functional correctness, Lighthouse assesses quality metrics. This combination is crucial for early bug detection, maintaining high performance standards, and ensuring an optimal user experience.\n\n[Playwright-lighthouse](https://www.npmjs.com/package/playwright-lighthouse) is a great package for combing these two types of testing and let's dive into using it with a hands on tutorial.\n\n## Hands On with Playwright and Playwright-lighthouse\n\n### Setting Up Your Environment\n\nTo begin, you'll need to set up both `playwright` and `playwright-lighthouse` in your project. First, install Playwright using npm:\n\n```\nnpm install --save-dev playwright\n```\n\nThen, add `playwright-lighthouse`:\n\n```\nnpm install --save-dev playwright-lighthouse\n```\n\nThese installations equip your project with the necessary tools to conduct both Playwright and Lighthouse audits.\n\n### Implementing Playwright-Lighthouse Tests\n\nLets dive into how you can use these tools together. Consider the following code example:\n\n```\nimport { playAudit } from \"playwright-lighthouse\";import { test, chromium } from \"@playwright/test\";test.describe(\"audit\", () =\u003e { test(\"run lighthouse\", async () =\u003e { const browser = await chromium.launch({ args: [\"--remote-debugging-port=9222\"], headless: true }); const page = await browser.newPage(); await page.goto(\"http://localhost:4173/\"); await playAudit({ page: page, thresholds: { performance: 50, accessibility: 100, \"best-practices\": 100, seo: 100 }, port: 9222 }); await browser.close(); });});\n```\n\nIn this script:\n\n1. **Browser Initialization** : We launch Chromium using Playwright, specifying remote debugging and headless mode.\n\n2. **Page Navigation** : The script navigates to the specified URL.\n\n3. **Lighthouse Audit** : The `playAudit` function runs the Lighthouse audit against the page, with specified performance, accessibility, best practices, and SEO thresholds.\n\nIn addition to the test code, you can add an execution script to your package.json and configure Playwright with a [config](https://playwright.dev/docs/test-configuration) (`playwright.config.js`).\n\n```\n{ \"test:lighthouse\": \"npx playwright test --project lighthouse\"}\n```\n\n### CI/CD Integration\n\nIntegrating this setup into a Continuous Integration/Continuous Deployment (CI/CD) pipeline automates the testing process. Each deployment undergoes rigorous quality checks, ensuring consistent performance and adherence to web standards.\n\nFor example, I have incorporated lighthouse testing into the [CI pipeline for my personal site](https://github.com/Scc33/Scc33.github.io/blob/3e0e1745c1b618819c856df4f7ab5943c3d7421b/.github/workflows/ci.yml#L79). A lighthouse test execution will occur on every PR and merge to master. This provides immediate feedback on performance and accessibility that a user will experience.\n\n```\n  analyze: # Runs on successful playwright needs: [build, test] name: lighthouse-test # Running on ubuntu-latest, nothing special runs-on: ubuntu-latest steps: # As usual, we simply checkout the project - name: Checkout uses: actions/checkout@v4 # Install the latest version of node - name: Set up Node.js uses: actions/setup-node@v4 with: node-version: \"20\" # Install Yarn (prefered build tool) - name: Install Yarn run: npm install -g yarn # Install project dependencies - name: Install dependencies run: yarn install --frozen-lockfile # Install Playwright browsers - name: Install Playwright Browsers run: npx playwright install --with-deps # Run Lighthouse Playwright tests - name: Run Playwright tests run: yarn run test:lighthouse\n```\n\n## Conclusion\n\nIntegrating Playwright with Lighthouse offers a comprehensive approach to web application testing. This powerful combination can significantly enhance the quality and performance of your projects, streamline your workflow, and ensure a superior user experience.\n\n### Advantages\n\n- **Comprehensive Testing** : Offers a complete testing solution combining functional correctness and quality metrics.\n\n- **Developer-Friendly** : Easy to integrate into existing development workflows.\n\n- **Scalable Solution** : Equally effective for small and large-scale projects.\n\nIntegrating these tools into your software development process marks a step towards more reliable, high-quality web applications. I encourage you to explore these tools and leverage their capabilities in your next project.\n\nCheck out the [Lighthouse GitHub documentation](https://github.com/GoogleChrome/lighthouse/tree/main/docs) to learn more. They maintain a cool set of articles on implementation and how to use Lighthouse.","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Introduction   Ensuring optimal performance and quality is paramount for web development....","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/enhancing-web-performance-and-quality-integrating-playwright-and-lighthouse-7d6-temp-slug-3257281","public_reactions_count":0,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"introduction\" href=\"#introduction\"\u003e\n  \u003c/a\u003e\n  Introduction\n\u003c/h2\u003e\n\n\u003cp\u003eEnsuring optimal performance and quality is paramount for web development. This is where automated testing tools like Playwright and Google's Lighthouse come into play.\u003c/p\u003e\n\n\u003cp\u003eFor software engineers, integrating these tools can assist the testing process, paving the way for more robust, user-friendly web applications.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"understanding-playwright\" href=\"#understanding-playwright\"\u003e\n  \u003c/a\u003e\n  Understanding Playwright\n\u003c/h3\u003e\n\n\u003cp\u003ePlaywright is a cutting-edge, open-source framework developed by Microsoft. It's designed to enable end-to-end testing for web applications across all major browsers including Chromium, Firefox, and WebKit.\u003c/p\u003e\n\n\u003cp\u003eIts standout features include cross-browser support, native mobile emulation, and the ability to simulate various network conditions. This makes Playwright an invaluable tool for developers aiming to create versatile, cross-platform web applications.\u003c/p\u003e\n\n\u003cp\u003eFor more information, visit \u003ca href=\"https://playwright.dev/docs/intro\"\u003ePlaywright Documentation\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"exploring-lighthouse\" href=\"#exploring-lighthouse\"\u003e\n  \u003c/a\u003e\n  Exploring Lighthouse\n\u003c/h3\u003e\n\n\u003cp\u003eGoogle's Lighthouse is an automated tool designed for web page quality assessments. It provides audits for performance, accessibility, progressive web applications, and more, offering scores across these domains along with actionable recommendations for improvement.\u003c/p\u003e\n\n\u003cp\u003eLighthouse is instrumental in identifying areas for enhancement in web applications, ensuring they meet the highest standards of quality.\u003c/p\u003e\n\n\u003cp\u003eLearn more at \u003ca href=\"https://developers.google.com/web/tools/lighthouse\"\u003eLighthouse Documentation\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--F4EpcSsW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1705761657966/bcc23051-78a4-4eba-80e1-e177c90921ee.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--F4EpcSsW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1705761657966/bcc23051-78a4-4eba-80e1-e177c90921ee.png\" alt=\"Lighthouse execution\" loading=\"lazy\" width=\"800\" height=\"350\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"the-importance-of-combined-testing\" href=\"#the-importance-of-combined-testing\"\u003e\n  \u003c/a\u003e\n  The Importance of Combined Testing\n\u003c/h3\u003e\n\n\u003cp\u003eIntegrating Playwright with Lighthouse brings a holistic approach to testing. While Playwright ensures functional correctness, Lighthouse assesses quality metrics. This combination is crucial for early bug detection, maintaining high performance standards, and ensuring an optimal user experience.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.npmjs.com/package/playwright-lighthouse\"\u003ePlaywright-lighthouse\u003c/a\u003e is a great package for combing these two types of testing and let's dive into using it with a hands on tutorial.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"hands-on-with-playwright-and-playwrightlighthouse\" href=\"#hands-on-with-playwright-and-playwrightlighthouse\"\u003e\n  \u003c/a\u003e\n  Hands On with Playwright and Playwright-lighthouse\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"setting-up-your-environment\" href=\"#setting-up-your-environment\"\u003e\n  \u003c/a\u003e\n  Setting Up Your Environment\n\u003c/h3\u003e\n\n\u003cp\u003eTo begin, you'll need to set up both \u003ccode\u003eplaywright\u003c/code\u003e and \u003ccode\u003eplaywright-lighthouse\u003c/code\u003e in your project. First, install Playwright using npm:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003enpm install --save-dev playwright\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eThen, add \u003ccode\u003eplaywright-lighthouse\u003c/code\u003e:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003enpm install --save-dev playwright-lighthouse\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eThese installations equip your project with the necessary tools to conduct both Playwright and Lighthouse audits.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"implementing-playwrightlighthouse-tests\" href=\"#implementing-playwrightlighthouse-tests\"\u003e\n  \u003c/a\u003e\n  Implementing Playwright-Lighthouse Tests\n\u003c/h3\u003e\n\n\u003cp\u003eLets dive into how you can use these tools together. Consider the following code example:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eimport { playAudit } from \"playwright-lighthouse\";import { test, chromium } from \"@playwright/test\";test.describe(\"audit\", () =\u0026gt; { test(\"run lighthouse\", async () =\u0026gt; { const browser = await chromium.launch({ args: [\"--remote-debugging-port=9222\"], headless: true }); const page = await browser.newPage(); await page.goto(\"http://localhost:4173/\"); await playAudit({ page: page, thresholds: { performance: 50, accessibility: 100, \"best-practices\": 100, seo: 100 }, port: 9222 }); await browser.close(); });});\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eIn this script:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eBrowser Initialization\u003c/strong\u003e : We launch Chromium using Playwright, specifying remote debugging and headless mode.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003ePage Navigation\u003c/strong\u003e : The script navigates to the specified URL.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eLighthouse Audit\u003c/strong\u003e : The \u003ccode\u003eplayAudit\u003c/code\u003e function runs the Lighthouse audit against the page, with specified performance, accessibility, best practices, and SEO thresholds.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eIn addition to the test code, you can add an execution script to your package.json and configure Playwright with a \u003ca href=\"https://playwright.dev/docs/test-configuration\"\u003econfig\u003c/a\u003e (\u003ccode\u003eplaywright.config.js\u003c/code\u003e).\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e{ \"test:lighthouse\": \"npx playwright test --project lighthouse\"}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch3\u003e\n  \u003ca name=\"cicd-integration\" href=\"#cicd-integration\"\u003e\n  \u003c/a\u003e\n  CI/CD Integration\n\u003c/h3\u003e\n\n\u003cp\u003eIntegrating this setup into a Continuous Integration/Continuous Deployment (CI/CD) pipeline automates the testing process. Each deployment undergoes rigorous quality checks, ensuring consistent performance and adherence to web standards.\u003c/p\u003e\n\n\u003cp\u003eFor example, I have incorporated lighthouse testing into the \u003ca href=\"https://github.com/Scc33/Scc33.github.io/blob/3e0e1745c1b618819c856df4f7ab5943c3d7421b/.github/workflows/ci.yml#L79\"\u003eCI pipeline for my personal site\u003c/a\u003e. A lighthouse test execution will occur on every PR and merge to master. This provides immediate feedback on performance and accessibility that a user will experience.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e  analyze: # Runs on successful playwright needs: [build, test] name: lighthouse-test # Running on ubuntu-latest, nothing special runs-on: ubuntu-latest steps: # As usual, we simply checkout the project - name: Checkout uses: actions/checkout@v4 # Install the latest version of node - name: Set up Node.js uses: actions/setup-node@v4 with: node-version: \"20\" # Install Yarn (prefered build tool) - name: Install Yarn run: npm install -g yarn # Install project dependencies - name: Install dependencies run: yarn install --frozen-lockfile # Install Playwright browsers - name: Install Playwright Browsers run: npx playwright install --with-deps # Run Lighthouse Playwright tests - name: Run Playwright tests run: yarn run test:lighthouse\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eIntegrating Playwright with Lighthouse offers a comprehensive approach to web application testing. This powerful combination can significantly enhance the quality and performance of your projects, streamline your workflow, and ensure a superior user experience.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"advantages\" href=\"#advantages\"\u003e\n  \u003c/a\u003e\n  Advantages\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eComprehensive Testing\u003c/strong\u003e : Offers a complete testing solution combining functional correctness and quality metrics.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eDeveloper-Friendly\u003c/strong\u003e : Easy to integrate into existing development workflows.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eScalable Solution\u003c/strong\u003e : Equally effective for small and large-scale projects.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIntegrating these tools into your software development process marks a step towards more reliable, high-quality web applications. I encourage you to explore these tools and leverage their capabilities in your next project.\u003c/p\u003e\n\n\u003cp\u003eCheck out the \u003ca href=\"https://github.com/GoogleChrome/lighthouse/tree/main/docs\"\u003eLighthouse GitHub documentation\u003c/a\u003e to learn more. They maintain a cool set of articles on implementation and how to use Lighthouse.\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"enhancing-web-performance-and-quality-integrating-playwright-and-lighthouse-7d6-temp-slug-3257281","social_image":null,"title":"Enhancing Web Performance and Quality: Integrating Playwright and Lighthouse","video":null,"video_code":null},{"created_at":"2024-02-17T22:22:27.087Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/crafting-a-health-check-for-your-website-with-github-actions","feed_source_url":"https://blog.seancoughlin.me/crafting-a-health-check-for-your-website-with-github-actions","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Crafting a Health Check for Your Website with GitHub Actions\npublished: false\ndate: 2024-02-17 21:17:07 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/crafting-a-health-check-for-your-website-with-github-actions\n---\n\nIn the digital age, ensuring your website's reliability and performance is paramount. A health check serves as the heartbeat for your online presence, ensuring everything is running smoothly and efficiently.\n\nThis article delves into the essence of health checks and demonstrates how you can implement an automated health check for your website using GitHub Actions and Playwright.\n\n## Understanding Health Checks\n\nA [health check](https://microservices.io/patterns/observability/health-check-api.html) is a procedure that evaluates various aspects of a website or service to ensure it is functioning correctly. It's akin to a routine checkup for your website, identifying potential issues before they escalate into significant problems. The goal is to minimize downtime, enhance user experience, and maintain operational efficiency.\n\nHealth checks can cover a range of tests, from simple endpoint pings to verify server response, to more complex transactions that simulate user interactions. The core objectives are to verify availability, responsiveness, and the correct operation of your website or service.\n\n### Aside: Health Checks and Microservices\n\nHealth checks are a fundamental component of [microservice architectures](https://en.wikipedia.org/wiki/Microservices), playing a crucial role in ensuring the seamless operation and reliability of distributed systems.\n\nIn environments where applications are decomposed into smaller, independently deployable services, health checks provide the necessary mechanism to monitor the status and functionality of each microservice.\n\nThey enable automated systems to detect when a service is unhealthy, facilitating quick recovery actions such as restarting the service or rerouting traffic to healthy instances. This not only enhances the overall resilience and fault tolerance of the system but also supports dynamic scaling and load balancing by ensuring that only healthy instances are utilized.\n\nBy integrating health checks into microservice architectures, organizations can achieve higher uptime and more robust performance, crucial for maintaining user satisfaction and operational efficiency in complex, distributed environments.\n\n## Why Automate Health Checks with GitHub Actions?\n\nAutomating health checks with GitHub Actions brings several advantages. GitHub Actions is a CI/CD platform that allows you to automate your software workflows directly within GitHub. By leveraging GitHub Actions for health checks, you can:\n\n- **Automate Routine Checks** : Schedule health checks to run automatically at predetermined intervals.\n\n- **Integrate with Your Development Workflow** : Easily integrate health checks into your existing development and deployment pipelines.\n\n- **Respond Quickly to Issues** : Automate notifications and actions based on the outcomes of your health checks.\n\n## **Implementing a Health Check with GitHub Actions**\n\nLet's dive into setting up a health check workflow using GitHub Actions.\n\nThe provided script exemplifies how to set up an automated health check using GitHub Actions. This will be an example script for testing that a website is up and running. For this tutorial, we will use [Playwright](https://playwright.dev).\n\nThe script below outlines the GitHub Action workflow designed to perform health checks on your website:\n\n```\nname: healthcheckon: workflow_dispatch: workflow_call: schedule: - cron: \"0 0 * * *\"jobs: test: name: healthcheck runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v4 with: ref: screenshots - name: Set up Node.js uses: actions/setup-node@v4 with: node-version: \"20\" - name: Install Yarn run: npm install -g yarn - name: Install dependencies run: yarn install --frozen-lockfile - name: Install Playwright Browsers run: npx playwright install --with-deps - name: Run tests run: yarn run test:healthcheck - name: Commit screenshots run: | git config --global user.email \"youremail@example.com\" git config --global user.name \"Your Name\" git add -f screenshots git commit -m \"Add test screenshots\" git push\n```\n\n## The Health Check Script Explained\n\nLet's break down its components and understand how each part contributes to the health check process.\n\n### Workflow Triggers\n\n```\non: workflow_dispatch: workflow_call: schedule: - cron: \"0 0 * * *\"\n```\n\nThis section defines when the health check workflow is triggered. It's set to run under three conditions:\n\n- `workflow_dispatch`: Allows the workflow to be manually triggered from the GitHub Actions interface.\n\n- `workflow_call`: Enables this workflow to be called by other workflows within your GitHub repository.\n\n- `schedule`: Automates the workflow to run at a scheduled time, in this case, daily at midnight.\n\n### The Health Check Job\n\n```\njobs: test: name: healthcheck runs-on: ubuntu-latest\n```\n\nThis segment initializes the job, naming it `healthcheck` and specifying it to run on the latest Ubuntu runner provided by GitHub Actions.\n\n### Steps for Setup and Testing\n\nThe steps within the job handle the setup and execution of the health check:\n\n1. **Checkout the Project** : Uses `actions/checkout@v4` to checkout the repository, allowing the workflow to access its contents.\n\n2. **Set up Node.js** : Utilizes `actions/setup-node@v4` to install Node.js, specifying version 20.\n\n3. **Install Yarn** : Installs Yarn using `npm install -g yarn`, as Yarn is the preferred build tool for this project.\n\n4. **Install Dependencies** : Runs `yarn install --frozen-lockfile` to install the project dependencies without updating the lock file.\n\n5. **Install Playwright Browsers** : Executes `npx playwright install --with-deps` to install browsers needed for Playwright tests.\n\n6. **Run Playwright Tests** : Runs `yarn run test:healthcheck` to execute the Playwright tests, which simulate user interactions and check the health of the website.\n\n### The Playwright Script\n\nGitHub Actions calls the `test:healthcheck` script which can be pointed to some basic Playwright that verifies a site is up and inter-actable.\n\n```\nimport { test, expect } from \"@playwright/test\";test.describe(\"Health Check\", () =\u003e { test(\"should ensure the website is alive\", async ({ page }) =\u003e { await page.goto(\"/\"); const title = await page.title(); expect(title).toBe(\"Sean Coughlin | Software Engineer\"); }); test(\"should ensure the website has a header\", async ({ page }) =\u003e { await page.goto(\"/\"); await expect( page.getByRole(\"heading\", { name: \"Sean Coughlin\", exact: true }) ).toBeVisible(); }); // eslint-disable-next-line playwright/expect-expect test(\"should take a screenshot\", async ({ page }) =\u003e { const date = new Date(); const photoPath = `./screenshots/healthcheck-${date.toISOString()}.png`; await page.goto(\"/\"); await page.screenshot({ path: photoPath }); });});\n```\n\n1. **Website Availability Test** : The first test navigates to the homepage and checks if the website's title matches the expected value. This test ensures that the website is up and running, and the main page is accessible.\n\n2. **Header Visibility Test** : The second test again navigates to the homepage and verifies the presence of a specific header on the page, ensuring that essential elements of the UI are visible and correctly rendered.\n\n3. **Screenshot Capture** : The final test navigates to the homepage and takes a screenshot, saving it with a filename that includes the current date and time. This step is useful for visual verification of the website's state at the time of the test, aiding in debugging and record-keeping.\n\n### Committing Test Artifacts\n\n```\n- name: Commit screenshots run: | git config --global user.email \"you@example.com\" git config --global user.name \"Your Name\" git add -f screenshots git commit -m \"Add test screenshots\" git push\n```\n\nAfter running the tests, this step commits any screenshots taken during the tests to the repository. This is useful for visual verification and debugging.\n\nArtifacts from automated processes, such as health checks, can also be stored in dedicated artifact repositories like [JFrog Artifactory](https://jfrog.com/artifactory/), cloud storage services like [AWS S3](https://aws.amazon.com/s3/), or continuous integration tools like [Jenkins](https://www.jenkins.io/doc/), instead of being committed to version control.\n\n## Conclusion\n\nAutomating health checks using GitHub Actions is a robust method to ensure the continuous health of your website. It allows for scheduled checks, integrates seamlessly with your development process, and enables quick responses to identified issues.\n\nBy following the outlined script and understanding each component's role, you can implement an effective health check workflow tailored to your website's needs, ensuring reliability and performance for your users.\n\n### Where to Learn More\n\nFor more in-depth knowledge and resources on leveraging GitHub Actions, consider exploring the following sections:\n\n1. [**GitHub Actions Documentation**](https://docs.github.com/en/actions): This comprehensive guide covers everything from automating workflows to CI/CD, helping you to customize and execute software development workflows within your repository. It's a great starting point to understand the full capabilities of GitHub Actions.\n\n2. [**Learn GitHub Actions**](https://docs.github.com/en/actions/learn-github-actions): This section is ideal for both beginners and those looking to deepen their understanding of GitHub Actions. It provides insights into core features, expressions, workflow syntax, and much more, making it a valuable resource for accelerating your application development workflows.\n\n3. [**Understanding GitHub Actions**](https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions): For a foundational understanding, this article breaks down the basics, including core concepts, essential terminology, and how to create an example workflow. It's perfect for getting acquainted with the components and functionalities of GitHub Actions.\n\nThese resources offer a wealth of information to get started with GitHub Actions or to expand your existing knowledge, enabling you to automate and optimize your development workflows effectively.\n\n* * *\n\nI wrote this article based on the health check script I use for my personal website. You can find the source code for that site below:\n\n1. [Package.json](https://github.com/Scc33/Scc33.github.io/blob/master/package.json)\n\n2. [Playwright script](https://github.com/Scc33/Scc33.github.io/blob/master/tests/healthcheck.test.js)\n\n3. [GitHub Action workflow](https://github.com/Scc33/Scc33.github.io/blob/master/.github/workflows/healthcheck.yml)","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"In the digital age, ensuring your website's reliability and performance is paramount. A health check...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/crafting-a-health-check-for-your-website-with-github-actions-2oj2-temp-slug-6987823","public_reactions_count":0,"processed_html":"\u003cp\u003eIn the digital age, ensuring your website's reliability and performance is paramount. A health check serves as the heartbeat for your online presence, ensuring everything is running smoothly and efficiently.\u003c/p\u003e\n\n\u003cp\u003eThis article delves into the essence of health checks and demonstrates how you can implement an automated health check for your website using GitHub Actions and Playwright.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"understanding-health-checks\" href=\"#understanding-health-checks\"\u003e\n  \u003c/a\u003e\n  Understanding Health Checks\n\u003c/h2\u003e\n\n\u003cp\u003eA \u003ca href=\"https://microservices.io/patterns/observability/health-check-api.html\"\u003ehealth check\u003c/a\u003e is a procedure that evaluates various aspects of a website or service to ensure it is functioning correctly. It's akin to a routine checkup for your website, identifying potential issues before they escalate into significant problems. The goal is to minimize downtime, enhance user experience, and maintain operational efficiency.\u003c/p\u003e\n\n\u003cp\u003eHealth checks can cover a range of tests, from simple endpoint pings to verify server response, to more complex transactions that simulate user interactions. The core objectives are to verify availability, responsiveness, and the correct operation of your website or service.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"aside-health-checks-and-microservices\" href=\"#aside-health-checks-and-microservices\"\u003e\n  \u003c/a\u003e\n  Aside: Health Checks and Microservices\n\u003c/h3\u003e\n\n\u003cp\u003eHealth checks are a fundamental component of \u003ca href=\"https://en.wikipedia.org/wiki/Microservices\"\u003emicroservice architectures\u003c/a\u003e, playing a crucial role in ensuring the seamless operation and reliability of distributed systems.\u003c/p\u003e\n\n\u003cp\u003eIn environments where applications are decomposed into smaller, independently deployable services, health checks provide the necessary mechanism to monitor the status and functionality of each microservice.\u003c/p\u003e\n\n\u003cp\u003eThey enable automated systems to detect when a service is unhealthy, facilitating quick recovery actions such as restarting the service or rerouting traffic to healthy instances. This not only enhances the overall resilience and fault tolerance of the system but also supports dynamic scaling and load balancing by ensuring that only healthy instances are utilized.\u003c/p\u003e\n\n\u003cp\u003eBy integrating health checks into microservice architectures, organizations can achieve higher uptime and more robust performance, crucial for maintaining user satisfaction and operational efficiency in complex, distributed environments.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"why-automate-health-checks-with-github-actions\" href=\"#why-automate-health-checks-with-github-actions\"\u003e\n  \u003c/a\u003e\n  Why Automate Health Checks with GitHub Actions?\n\u003c/h2\u003e\n\n\u003cp\u003eAutomating health checks with GitHub Actions brings several advantages. GitHub Actions is a CI/CD platform that allows you to automate your software workflows directly within GitHub. By leveraging GitHub Actions for health checks, you can:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eAutomate Routine Checks\u003c/strong\u003e : Schedule health checks to run automatically at predetermined intervals.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eIntegrate with Your Development Workflow\u003c/strong\u003e : Easily integrate health checks into your existing development and deployment pipelines.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eRespond Quickly to Issues\u003c/strong\u003e : Automate notifications and actions based on the outcomes of your health checks.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"implementing-a-health-check-with-github-actions\" href=\"#implementing-a-health-check-with-github-actions\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eImplementing a Health Check with GitHub Actions\u003c/strong\u003e\n\u003c/h2\u003e\n\n\u003cp\u003eLet's dive into setting up a health check workflow using GitHub Actions.\u003c/p\u003e\n\n\u003cp\u003eThe provided script exemplifies how to set up an automated health check using GitHub Actions. This will be an example script for testing that a website is up and running. For this tutorial, we will use \u003ca href=\"https://playwright.dev\"\u003ePlaywright\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe script below outlines the GitHub Action workflow designed to perform health checks on your website:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ename: healthcheckon: workflow_dispatch: workflow_call: schedule: - cron: \"0 0 * * *\"jobs: test: name: healthcheck runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v4 with: ref: screenshots - name: Set up Node.js uses: actions/setup-node@v4 with: node-version: \"20\" - name: Install Yarn run: npm install -g yarn - name: Install dependencies run: yarn install --frozen-lockfile - name: Install Playwright Browsers run: npx playwright install --with-deps - name: Run tests run: yarn run test:healthcheck - name: Commit screenshots run: | git config --global user.email \"youremail@example.com\" git config --global user.name \"Your Name\" git add -f screenshots git commit -m \"Add test screenshots\" git push\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"the-health-check-script-explained\" href=\"#the-health-check-script-explained\"\u003e\n  \u003c/a\u003e\n  The Health Check Script Explained\n\u003c/h2\u003e\n\n\u003cp\u003eLet's break down its components and understand how each part contributes to the health check process.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"workflow-triggers\" href=\"#workflow-triggers\"\u003e\n  \u003c/a\u003e\n  Workflow Triggers\n\u003c/h3\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eon: workflow_dispatch: workflow_call: schedule: - cron: \"0 0 * * *\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eThis section defines when the health check workflow is triggered. It's set to run under three conditions:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eworkflow_dispatch\u003c/code\u003e: Allows the workflow to be manually triggered from the GitHub Actions interface.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eworkflow_call\u003c/code\u003e: Enables this workflow to be called by other workflows within your GitHub repository.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eschedule\u003c/code\u003e: Automates the workflow to run at a scheduled time, in this case, daily at midnight.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"the-health-check-job\" href=\"#the-health-check-job\"\u003e\n  \u003c/a\u003e\n  The Health Check Job\n\u003c/h3\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ejobs: test: name: healthcheck runs-on: ubuntu-latest\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eThis segment initializes the job, naming it \u003ccode\u003ehealthcheck\u003c/code\u003e and specifying it to run on the latest Ubuntu runner provided by GitHub Actions.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"steps-for-setup-and-testing\" href=\"#steps-for-setup-and-testing\"\u003e\n  \u003c/a\u003e\n  Steps for Setup and Testing\n\u003c/h3\u003e\n\n\u003cp\u003eThe steps within the job handle the setup and execution of the health check:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eCheckout the Project\u003c/strong\u003e : Uses \u003ccode\u003eactions/checkout@v4\u003c/code\u003e to checkout the repository, allowing the workflow to access its contents.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSet up Node.js\u003c/strong\u003e : Utilizes \u003ccode\u003eactions/setup-node@v4\u003c/code\u003e to install Node.js, specifying version 20.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eInstall Yarn\u003c/strong\u003e : Installs Yarn using \u003ccode\u003enpm install -g yarn\u003c/code\u003e, as Yarn is the preferred build tool for this project.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eInstall Dependencies\u003c/strong\u003e : Runs \u003ccode\u003eyarn install --frozen-lockfile\u003c/code\u003e to install the project dependencies without updating the lock file.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eInstall Playwright Browsers\u003c/strong\u003e : Executes \u003ccode\u003enpx playwright install --with-deps\u003c/code\u003e to install browsers needed for Playwright tests.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eRun Playwright Tests\u003c/strong\u003e : Runs \u003ccode\u003eyarn run test:healthcheck\u003c/code\u003e to execute the Playwright tests, which simulate user interactions and check the health of the website.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"the-playwright-script\" href=\"#the-playwright-script\"\u003e\n  \u003c/a\u003e\n  The Playwright Script\n\u003c/h3\u003e\n\n\u003cp\u003eGitHub Actions calls the \u003ccode\u003etest:healthcheck\u003c/code\u003e script which can be pointed to some basic Playwright that verifies a site is up and inter-actable.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eimport { test, expect } from \"@playwright/test\";test.describe(\"Health Check\", () =\u0026gt; { test(\"should ensure the website is alive\", async ({ page }) =\u0026gt; { await page.goto(\"/\"); const title = await page.title(); expect(title).toBe(\"Sean Coughlin | Software Engineer\"); }); test(\"should ensure the website has a header\", async ({ page }) =\u0026gt; { await page.goto(\"/\"); await expect( page.getByRole(\"heading\", { name: \"Sean Coughlin\", exact: true }) ).toBeVisible(); }); // eslint-disable-next-line playwright/expect-expect test(\"should take a screenshot\", async ({ page }) =\u0026gt; { const date = new Date(); const photoPath = `./screenshots/healthcheck-${date.toISOString()}.png`; await page.goto(\"/\"); await page.screenshot({ path: photoPath }); });});\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eWebsite Availability Test\u003c/strong\u003e : The first test navigates to the homepage and checks if the website's title matches the expected value. This test ensures that the website is up and running, and the main page is accessible.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eHeader Visibility Test\u003c/strong\u003e : The second test again navigates to the homepage and verifies the presence of a specific header on the page, ensuring that essential elements of the UI are visible and correctly rendered.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eScreenshot Capture\u003c/strong\u003e : The final test navigates to the homepage and takes a screenshot, saving it with a filename that includes the current date and time. This step is useful for visual verification of the website's state at the time of the test, aiding in debugging and record-keeping.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"committing-test-artifacts\" href=\"#committing-test-artifacts\"\u003e\n  \u003c/a\u003e\n  Committing Test Artifacts\n\u003c/h3\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e- name: Commit screenshots run: | git config --global user.email \"you@example.com\" git config --global user.name \"Your Name\" git add -f screenshots git commit -m \"Add test screenshots\" git push\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eAfter running the tests, this step commits any screenshots taken during the tests to the repository. This is useful for visual verification and debugging.\u003c/p\u003e\n\n\u003cp\u003eArtifacts from automated processes, such as health checks, can also be stored in dedicated artifact repositories like \u003ca href=\"https://jfrog.com/artifactory/\"\u003eJFrog Artifactory\u003c/a\u003e, cloud storage services like \u003ca href=\"https://aws.amazon.com/s3/\"\u003eAWS S3\u003c/a\u003e, or continuous integration tools like \u003ca href=\"https://www.jenkins.io/doc/\"\u003eJenkins\u003c/a\u003e, instead of being committed to version control.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eAutomating health checks using GitHub Actions is a robust method to ensure the continuous health of your website. It allows for scheduled checks, integrates seamlessly with your development process, and enables quick responses to identified issues.\u003c/p\u003e\n\n\u003cp\u003eBy following the outlined script and understanding each component's role, you can implement an effective health check workflow tailored to your website's needs, ensuring reliability and performance for your users.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"where-to-learn-more\" href=\"#where-to-learn-more\"\u003e\n  \u003c/a\u003e\n  Where to Learn More\n\u003c/h3\u003e\n\n\u003cp\u003eFor more in-depth knowledge and resources on leveraging GitHub Actions, consider exploring the following sections:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://docs.github.com/en/actions\"\u003e\u003cstrong\u003eGitHub Actions Documentation\u003c/strong\u003e\u003c/a\u003e: This comprehensive guide covers everything from automating workflows to CI/CD, helping you to customize and execute software development workflows within your repository. It's a great starting point to understand the full capabilities of GitHub Actions.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://docs.github.com/en/actions/learn-github-actions\"\u003e\u003cstrong\u003eLearn GitHub Actions\u003c/strong\u003e\u003c/a\u003e: This section is ideal for both beginners and those looking to deepen their understanding of GitHub Actions. It provides insights into core features, expressions, workflow syntax, and much more, making it a valuable resource for accelerating your application development workflows.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions\"\u003e\u003cstrong\u003eUnderstanding GitHub Actions\u003c/strong\u003e\u003c/a\u003e: For a foundational understanding, this article breaks down the basics, including core concepts, essential terminology, and how to create an example workflow. It's perfect for getting acquainted with the components and functionalities of GitHub Actions.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThese resources offer a wealth of information to get started with GitHub Actions or to expand your existing knowledge, enabling you to automate and optimize your development workflows effectively.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eI wrote this article based on the health check script I use for my personal website. You can find the source code for that site below:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://github.com/Scc33/Scc33.github.io/blob/master/package.json\"\u003ePackage.json\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://github.com/Scc33/Scc33.github.io/blob/master/tests/healthcheck.test.js\"\u003ePlaywright script\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://github.com/Scc33/Scc33.github.io/blob/master/.github/workflows/healthcheck.yml\"\u003eGitHub Action workflow\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"crafting-a-health-check-for-your-website-with-github-actions-2oj2-temp-slug-6987823","social_image":null,"title":"Crafting a Health Check for Your Website with GitHub Actions","video":null,"video_code":null},{"created_at":"2024-02-17T22:22:27.692Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/understanding-web-cookies-navigating-the-shift-from-third-party-tracking-to-enhanced-privacy","feed_source_url":"https://blog.seancoughlin.me/understanding-web-cookies-navigating-the-shift-from-third-party-tracking-to-enhanced-privacy","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Understanding Web Cookies: Navigating the Shift from Third-Party Tracking to Enhanced Privacy\npublished: false\ndate: 2024-02-17 21:42:52 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/understanding-web-cookies-navigating-the-shift-from-third-party-tracking-to-enhanced-privacy\n---\n\nCookies play a pivotal role in shaping our online experiences. From keeping us logged into our favorite websites to tracking our browsing habits for tailored advertisements, cookies are integral to how we interact with the digital world.\n\nHowever, as concerns over privacy and data protection grow, the use of cookies, particularly third-party cookies, has come under scrutiny.\n\nThis blog post delves into the essence of web cookies, the distinction between first and third-party cookies, and Google's initiative to phase out third-party cookies in Chrome, aiming to strike a balance between personalized web experiences and user privacy.\n\n## What is a Cookie?\n\nA [cookie](https://en.wikipedia.org/wiki/HTTP_cookie) (besides being a delicious treat) is a small piece of data sent from a website and stored on the user's computer by the user's web browser while the user is browsing.\n\nCookies were designed to be a reliable mechanism for websites to remember stateful information (such as items added in the shopping cart) or to record the user's browsing activity (including clicking particular buttons, logging in, or recording which pages were visited in the past).\n\nThey can also be used to remember arbitrary pieces of information that the user previously entered into form fields, such as names, addresses, passwords, and credit card numbers.\n\n## First-Party vs. Third-Party Cookies: A Distinction\n\nThe differentiation between first-party and third-party cookies is crucial for understanding their roles and implications:\n\n- **First-Party Cookies** are created by the domain the user is visiting directly and aid in enhancing user experience by remembering login details, preferences, and other functionalities that facilitate seamless navigation.\n\n- [**Third-Party Cookies**](https://en.wikipedia.org/wiki/Third-party_cookies), on the other hand, are set by a domain other than the one the user is currently on. They are primarily used for tracking and online-advertising purposes, enabling advertisers to deliver personalized advertising by tracking users across different sites.\n\n| Feature | First-Party Cookies | Third-Party Cookies |\n| **Origin** | Set by the visited website (same domain) | Set by a different domain (through embedded ads or trackers) |\n| **Purpose** | Enhance user experience (e.g., preferences, session management) | Track user behavior across different sites for advertising |\n| **Privacy Concern** | Generally considered safe | Raised privacy concerns due to cross-site tracking |\n| **Control** | Managed by the visited website | Managed by external entities (advertisers, analytics) |\n| **Impact of Blocking** | Could impact user experience | Reduces personalized advertising but enhances privacy |\n\n## The Role of Cookies in the Digital Experience\n\n### First-Party Cookies\n\n- **Session Management** : Keeping users logged into websites.\n\n- **Preferences** : Storing language settings, theme choices, and other customizations.\n\n- **E-commerce** : Maintaining items in shopping carts.\n\n### Third-Party Cookies\n\n- **Ad Targeting** : Delivering personalized ads based on browsing history.\n\n- **Cross-Site Tracking** : Analyzing user behavior across different sites for market research.\n\n## Google's Move Against Third-Party Cookies\n\nGoogle [announced](https://blog.google/products/chrome/privacy-sandbox-tracking-protection/) its intention to phase out third-party cookies in Chrome as part of its [Privacy Sandbox initiative](https://privacysandbox.com). This decision stems from increasing privacy concerns and the demand for more secure and private browsing experiences.\n\nThe aim is to limit cross-site tracking while still allowing for personalized content and ads, albeit through more privacy-preserving mechanisms. This move signals a significant shift in how personalization and advertising will operate on the web, pushing for a future where user privacy is given precedence.\n\n## **Analyzing Google's Approach: Balancing Privacy with Power**\n\n### Pros of Google's Approach\n\n1. **Enhanced Privacy** : By eliminating third-party cookies, Google is addressing widespread concerns about online privacy. Users would no longer be as transparently tracked across websites, reducing unwanted surveillance and potentially intrusive advertising practices.\n\n2. **Innovative Alternatives** : Google proposes replacing third-party cookies with technologies from its [Privacy Sandbox initiative](https://en.wikipedia.org/wiki/Privacy_Sandbox), promising a more privacy-preserving web. These technologies aim to provide personalized advertising without the need for invasive tracking, using methods like cohort analysis to group users with similar interests anonymously.\n\n3. **Increased Security** : The move can also enhance online security by limiting the potential for third-party cookies to be used in tracking and data breaches, offering a safer browsing experience.\n\n### Cons of Google's Approach\n\n1. **Data Consolidation** : While phasing out third-party cookies may improve privacy from third parties, it could also consolidate more user data within the hands of a few dominant companies, like Google itself. With its vast ecosystem of services, Google has alternative means of collecting user data, potentially increasing its market power and control over online advertising.\n\n2. **Impact on Small Businesses and Advertisers** : Smaller publishers and advertisers that rely on third-party cookies for targeted advertising may find it challenging to adapt. They risk losing out to larger platforms with more resources to invest in alternative tracking technologies, potentially leading to less competition and innovation.\n\n3. **Effectiveness of Alternatives** : The effectiveness and privacy implications of proposed alternatives remain subjects of debate. Critics argue that solutions like [Federated Learning of Cohorts (FLoC)](https://en.wikipedia.org/wiki/Federated_Learning_of_Cohorts) could still enable profiling and discrimination, albeit in less direct ways. Ensuring these alternatives truly respect user privacy while providing value to advertisers is a complex challenge.\n\n## Navigating the Future: The Path Ahead\n\nAs the digital world grapples with the dual demands of personalization and privacy, the phasing out of third-party cookies by Google and other industry players marks a pivotal moment. The shift towards privacy-focused alternatives necessitates innovation in how online experiences are curated and monetized.\n\nFor businesses and advertisers, adapting to these changes will mean exploring new strategies for engaging users, leveraging first-party data, and employing privacy-preserving technologies to deliver relevant content and advertisements.\n\nIn conclusion, while cookies, both first and third-party, have been fundamental in shaping the online experience, the move towards a more private web reflects changing user expectations and regulatory landscapes.\n\nBy understanding the nuances of how cookies function and the implications of Google's decision, businesses, advertisers, and users alike can navigate this transition towards a future where privacy and personalization coexist harmoniously.","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Cookies play a pivotal role in shaping our online experiences. From keeping us logged into our...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/understanding-web-cookies-navigating-the-shift-from-third-party-tracking-to-enhanced-privacy-5ff0-temp-slug-5774891","public_reactions_count":0,"processed_html":"\u003cp\u003eCookies play a pivotal role in shaping our online experiences. From keeping us logged into our favorite websites to tracking our browsing habits for tailored advertisements, cookies are integral to how we interact with the digital world.\u003c/p\u003e\n\n\u003cp\u003eHowever, as concerns over privacy and data protection grow, the use of cookies, particularly third-party cookies, has come under scrutiny.\u003c/p\u003e\n\n\u003cp\u003eThis blog post delves into the essence of web cookies, the distinction between first and third-party cookies, and Google's initiative to phase out third-party cookies in Chrome, aiming to strike a balance between personalized web experiences and user privacy.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what-is-a-cookie\" href=\"#what-is-a-cookie\"\u003e\n  \u003c/a\u003e\n  What is a Cookie?\n\u003c/h2\u003e\n\n\u003cp\u003eA \u003ca href=\"https://en.wikipedia.org/wiki/HTTP_cookie\"\u003ecookie\u003c/a\u003e (besides being a delicious treat) is a small piece of data sent from a website and stored on the user's computer by the user's web browser while the user is browsing.\u003c/p\u003e\n\n\u003cp\u003eCookies were designed to be a reliable mechanism for websites to remember stateful information (such as items added in the shopping cart) or to record the user's browsing activity (including clicking particular buttons, logging in, or recording which pages were visited in the past).\u003c/p\u003e\n\n\u003cp\u003eThey can also be used to remember arbitrary pieces of information that the user previously entered into form fields, such as names, addresses, passwords, and credit card numbers.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"firstparty-vs-thirdparty-cookies-a-distinction\" href=\"#firstparty-vs-thirdparty-cookies-a-distinction\"\u003e\n  \u003c/a\u003e\n  First-Party vs. Third-Party Cookies: A Distinction\n\u003c/h2\u003e\n\n\u003cp\u003eThe differentiation between first-party and third-party cookies is crucial for understanding their roles and implications:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eFirst-Party Cookies\u003c/strong\u003e are created by the domain the user is visiting directly and aid in enhancing user experience by remembering login details, preferences, and other functionalities that facilitate seamless navigation.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Third-party_cookies\"\u003e\u003cstrong\u003eThird-Party Cookies\u003c/strong\u003e\u003c/a\u003e, on the other hand, are set by a domain other than the one the user is currently on. They are primarily used for tracking and online-advertising purposes, enabling advertisers to deliver personalized advertising by tracking users across different sites.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e| Feature | First-Party Cookies | Third-Party Cookies |\u003cbr\u003e\n| \u003cstrong\u003eOrigin\u003c/strong\u003e | Set by the visited website (same domain) | Set by a different domain (through embedded ads or trackers) |\u003cbr\u003e\n| \u003cstrong\u003ePurpose\u003c/strong\u003e | Enhance user experience (e.g., preferences, session management) | Track user behavior across different sites for advertising |\u003cbr\u003e\n| \u003cstrong\u003ePrivacy Concern\u003c/strong\u003e | Generally considered safe | Raised privacy concerns due to cross-site tracking |\u003cbr\u003e\n| \u003cstrong\u003eControl\u003c/strong\u003e | Managed by the visited website | Managed by external entities (advertisers, analytics) |\u003cbr\u003e\n| \u003cstrong\u003eImpact of Blocking\u003c/strong\u003e | Could impact user experience | Reduces personalized advertising but enhances privacy |\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"the-role-of-cookies-in-the-digital-experience\" href=\"#the-role-of-cookies-in-the-digital-experience\"\u003e\n  \u003c/a\u003e\n  The Role of Cookies in the Digital Experience\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"firstparty-cookies\" href=\"#firstparty-cookies\"\u003e\n  \u003c/a\u003e\n  First-Party Cookies\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSession Management\u003c/strong\u003e : Keeping users logged into websites.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003ePreferences\u003c/strong\u003e : Storing language settings, theme choices, and other customizations.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eE-commerce\u003c/strong\u003e : Maintaining items in shopping carts.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"thirdparty-cookies\" href=\"#thirdparty-cookies\"\u003e\n  \u003c/a\u003e\n  Third-Party Cookies\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eAd Targeting\u003c/strong\u003e : Delivering personalized ads based on browsing history.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eCross-Site Tracking\u003c/strong\u003e : Analyzing user behavior across different sites for market research.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"googles-move-against-thirdparty-cookies\" href=\"#googles-move-against-thirdparty-cookies\"\u003e\n  \u003c/a\u003e\n  Google's Move Against Third-Party Cookies\n\u003c/h2\u003e\n\n\u003cp\u003eGoogle \u003ca href=\"https://blog.google/products/chrome/privacy-sandbox-tracking-protection/\"\u003eannounced\u003c/a\u003e its intention to phase out third-party cookies in Chrome as part of its \u003ca href=\"https://privacysandbox.com\"\u003ePrivacy Sandbox initiative\u003c/a\u003e. This decision stems from increasing privacy concerns and the demand for more secure and private browsing experiences.\u003c/p\u003e\n\n\u003cp\u003eThe aim is to limit cross-site tracking while still allowing for personalized content and ads, albeit through more privacy-preserving mechanisms. This move signals a significant shift in how personalization and advertising will operate on the web, pushing for a future where user privacy is given precedence.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"analyzing-googles-approach-balancing-privacy-with-power\" href=\"#analyzing-googles-approach-balancing-privacy-with-power\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eAnalyzing Google's Approach: Balancing Privacy with Power\u003c/strong\u003e\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"pros-of-googles-approach\" href=\"#pros-of-googles-approach\"\u003e\n  \u003c/a\u003e\n  Pros of Google's Approach\n\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eEnhanced Privacy\u003c/strong\u003e : By eliminating third-party cookies, Google is addressing widespread concerns about online privacy. Users would no longer be as transparently tracked across websites, reducing unwanted surveillance and potentially intrusive advertising practices.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eInnovative Alternatives\u003c/strong\u003e : Google proposes replacing third-party cookies with technologies from its \u003ca href=\"https://en.wikipedia.org/wiki/Privacy_Sandbox\"\u003ePrivacy Sandbox initiative\u003c/a\u003e, promising a more privacy-preserving web. These technologies aim to provide personalized advertising without the need for invasive tracking, using methods like cohort analysis to group users with similar interests anonymously.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eIncreased Security\u003c/strong\u003e : The move can also enhance online security by limiting the potential for third-party cookies to be used in tracking and data breaches, offering a safer browsing experience.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"cons-of-googles-approach\" href=\"#cons-of-googles-approach\"\u003e\n  \u003c/a\u003e\n  Cons of Google's Approach\n\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eData Consolidation\u003c/strong\u003e : While phasing out third-party cookies may improve privacy from third parties, it could also consolidate more user data within the hands of a few dominant companies, like Google itself. With its vast ecosystem of services, Google has alternative means of collecting user data, potentially increasing its market power and control over online advertising.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eImpact on Small Businesses and Advertisers\u003c/strong\u003e : Smaller publishers and advertisers that rely on third-party cookies for targeted advertising may find it challenging to adapt. They risk losing out to larger platforms with more resources to invest in alternative tracking technologies, potentially leading to less competition and innovation.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eEffectiveness of Alternatives\u003c/strong\u003e : The effectiveness and privacy implications of proposed alternatives remain subjects of debate. Critics argue that solutions like \u003ca href=\"https://en.wikipedia.org/wiki/Federated_Learning_of_Cohorts\"\u003eFederated Learning of Cohorts (FLoC)\u003c/a\u003e could still enable profiling and discrimination, albeit in less direct ways. Ensuring these alternatives truly respect user privacy while providing value to advertisers is a complex challenge.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"navigating-the-future-the-path-ahead\" href=\"#navigating-the-future-the-path-ahead\"\u003e\n  \u003c/a\u003e\n  Navigating the Future: The Path Ahead\n\u003c/h2\u003e\n\n\u003cp\u003eAs the digital world grapples with the dual demands of personalization and privacy, the phasing out of third-party cookies by Google and other industry players marks a pivotal moment. The shift towards privacy-focused alternatives necessitates innovation in how online experiences are curated and monetized.\u003c/p\u003e\n\n\u003cp\u003eFor businesses and advertisers, adapting to these changes will mean exploring new strategies for engaging users, leveraging first-party data, and employing privacy-preserving technologies to deliver relevant content and advertisements.\u003c/p\u003e\n\n\u003cp\u003eIn conclusion, while cookies, both first and third-party, have been fundamental in shaping the online experience, the move towards a more private web reflects changing user expectations and regulatory landscapes.\u003c/p\u003e\n\n\u003cp\u003eBy understanding the nuances of how cookies function and the implications of Google's decision, businesses, advertisers, and users alike can navigate this transition towards a future where privacy and personalization coexist harmoniously.\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"understanding-web-cookies-navigating-the-shift-from-third-party-tracking-to-enhanced-privacy-5ff0-temp-slug-5774891","social_image":null,"title":"Understanding Web Cookies: Navigating the Shift from Third-Party Tracking to Enhanced Privacy","video":null,"video_code":null},{"created_at":"2024-02-25T19:22:48.016Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/navigating-the-it-maze-a-laymans-journey-through-the-phoenix-project","feed_source_url":"https://blog.seancoughlin.me/navigating-the-it-maze-a-laymans-journey-through-the-phoenix-project","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Navigating the IT Maze: A Layman's Journey Through \"The Phoenix Project\"\npublished: false\ndate: 2024-02-25 17:07:35 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/navigating-the-it-maze-a-laymans-journey-through-the-phoenix-project\n---\n\nIn this book review, we delve into \"The Phoenix Project: A Novel about IT, DevOps, and Helping Your Business Win\" by Gene Kim. Through the fictional yet relatable journey of an IT manager thrust into the chaos of a failing department, this novel explores the transformative power of [DevOps](https://en.wikipedia.org/wiki/DevOps) principles in addressing common yet complex business and technical challenges.\n\nSet against the backdrop of Parts Unlimited, an organization on the brink of collapse, the story unfolds to reveal how agility, teamwork, and innovative practices can steer a company away from the edge of disaster. This review aims to provide a high-level overview of the book's key themes and the potential impact of its lessons on various readers, from IT professionals to business leaders and beyond.\n\n## The Story Begins in Chaos\n\nImagine stepping into a world where every technological system you rely on is hanging by a thread, where the thin line between success and disaster is a daily battle. This is the reality for Bill, our protagonist, who's thrust into the role of VP of IT Operations at Parts Unlimited, a company on the brink of collapse.\n\nThrough Bill's eyes, we're introduced to a landscape littered with the all-too-familiar challenges of IT: from dealing with auditors and advisory boards to navigating the labyrinth of servers, applications, and the dreaded \"unplanned work\" that throws a wrench in the most meticulously laid plans.\n\n## Unpacking DevOps: The Heartbeat of Modern IT\n\nAt its core, \"The Phoenix Project\" is a manifesto for the DevOps movement, a philosophy that merges development and operations to streamline and enhance IT processes. But what does that mean for the uninitiated? Simply put, it's about breaking down the walls that traditionally separate teams and creating a more collaborative, efficient, and responsive IT environment. The book cleverly demystifies complex IT concepts, using the unfolding drama at Parts Unlimited to showcase the transformative potential of DevOps principles.\n\n## Who Stands to Gain from Reading This Book?\n\n- **Tech Enthusiasts and Software Engineers:** While the narrative might seem like familiar territory, it offers a fresh perspective on the impact of DevOps beyond the technical realm, emphasizing its strategic importance.\n\n- **Business Leaders and Managers:** For those steering the ship, this book is a wake-up call to the critical role IT plays in business success and how adopting a DevOps culture can be a game-changer.\n\n- **The Curious Outsiders:** Ever wondered how software gets made or what IT departments actually do? Here's your chance to peek behind the curtain and see how technology powers businesses, told through a story that's as engaging as it is enlightening.\n\n- **Families of IT Professionals:** If you've ever been baffled by what your loved one does all day in their IT job, \"The Phoenix Project\" offers a relatable and understandable window into their world.\n\n## Key Takeaways Without the Jargon\n\nThe journey through Parts Unlimited's turnaround is more than a story; it's a lesson in how focusing on bottlenecks, fostering collaboration, and embracing continuous improvement can lead to remarkable business outcomes.\n\nThe book introduces the idea that improvements should focus on the most critical issues first, that feedback loops are essential for quality and efficiency, and that a culture of experimentation and learning from failure is vital for growth.\n\n## Transforming IT from a Cost Center to a Value Creator\n\nOne of the most powerful messages of \"The Phoenix Project\" is the shift in perception of IT from a mere support function to a central driver of business value. It's a clarion call for businesses to invest in their IT capabilities not just to prevent disasters but to drive innovation and competitive advantage.\n\n## Is \"The Phoenix Project\" for You?\n\nWhether you're knee-deep in code daily, managing a team, or just curious about the buzzwords \"DevOps\" and \"agile,\" this book has something to offer. It's a narrative that bridges the gap between the technical and the accessible, making it a perfect primer for anyone looking to understand the pivotal role of IT in today's business landscape.\n\n## Final Thoughts\n\nConcluding, \"The Phoenix Project\" serves as a narrative bridge between the technical intricacies of IT operations and the broader business goals it supports.\n\nWhether you're looking to better understand the principles of DevOps or seeking insights into effective team management and organizational change, \"The Phoenix Project\" provides a compelling starting point.\n\n* * *\n\n## Quotes\n\nHere are some of my favorite quotes from the book:\n\n- you need to create what Humble and Farley called a deployment pipeline. Thats your entire value stream from code check-in to production. Thats not an art. Thats production. You need to get everything in version control. Everything. Not just the code, but everything required to build the environment. Then you need to automate the entire environment creation process. You need a deployment pipeline where you can create test and production environments, and then deploy code into them, entirely on-demand. Thats how you reduce your setup times and eliminate errors, so you can finally match whatever rate of change Development sets the tempo at. (Page 347)\n\n- In these competitive times, the name of the game is quick time to market and to fail fast.\" (Page 307)\n\n- Every work center is made up of four things: the machine, the man, the method, and the measures.\" (Page 243)\n\n- \"Four types of it Operations work: business projects, it Operations projects, changes, and unplanned work.\" (Page 222)\n\n- The First Way helps us understand how to create fast flow of work as it moves from Development into it Operations, because thats whats between the business and the customer. The Second Way shows us how to shorten and amplify feedback loops, so we can fix quality at the source and avoid rework. And the Third Way shows us how to create a culture that simultaneously fosters experimentation, learning from failure, and understanding that repetition and practice are the prerequisites to mastery. (Page 103)\n\n- Dr. Eliyahu M. Goldratt, who created the Theory of Constraints, showed us how any improvements made anywhere besides the bottleneck are an illusion. Astonishing, but true! Any improvement made after the bottleneck is useless, because it will always remain starved, waiting for work from the bottleneck. And any improvements made before the bottleneck merely results in more inventory piling up at the bottleneck. (Page 102)","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"In this book review, we delve into \"The Phoenix Project: A Novel about IT, DevOps, and Helping Your...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/navigating-the-it-maze-a-laymans-journey-through-the-phoenix-project-b44-temp-slug-4111131","public_reactions_count":0,"processed_html":"\u003cp\u003eIn this book review, we delve into \"The Phoenix Project: A Novel about IT, DevOps, and Helping Your Business Win\" by Gene Kim. Through the fictional yet relatable journey of an IT manager thrust into the chaos of a failing department, this novel explores the transformative power of \u003ca href=\"https://en.wikipedia.org/wiki/DevOps\"\u003eDevOps\u003c/a\u003e principles in addressing common yet complex business and technical challenges.\u003c/p\u003e\n\n\u003cp\u003eSet against the backdrop of Parts Unlimited, an organization on the brink of collapse, the story unfolds to reveal how agility, teamwork, and innovative practices can steer a company away from the edge of disaster. This review aims to provide a high-level overview of the book's key themes and the potential impact of its lessons on various readers, from IT professionals to business leaders and beyond.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"the-story-begins-in-chaos\" href=\"#the-story-begins-in-chaos\"\u003e\n  \u003c/a\u003e\n  The Story Begins in Chaos\n\u003c/h2\u003e\n\n\u003cp\u003eImagine stepping into a world where every technological system you rely on is hanging by a thread, where the thin line between success and disaster is a daily battle. This is the reality for Bill, our protagonist, who's thrust into the role of VP of IT Operations at Parts Unlimited, a company on the brink of collapse.\u003c/p\u003e\n\n\u003cp\u003eThrough Bill's eyes, we're introduced to a landscape littered with the all-too-familiar challenges of IT: from dealing with auditors and advisory boards to navigating the labyrinth of servers, applications, and the dreaded \"unplanned work\" that throws a wrench in the most meticulously laid plans.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"unpacking-devops-the-heartbeat-of-modern-it\" href=\"#unpacking-devops-the-heartbeat-of-modern-it\"\u003e\n  \u003c/a\u003e\n  Unpacking DevOps: The Heartbeat of Modern IT\n\u003c/h2\u003e\n\n\u003cp\u003eAt its core, \"The Phoenix Project\" is a manifesto for the DevOps movement, a philosophy that merges development and operations to streamline and enhance IT processes. But what does that mean for the uninitiated? Simply put, it's about breaking down the walls that traditionally separate teams and creating a more collaborative, efficient, and responsive IT environment. The book cleverly demystifies complex IT concepts, using the unfolding drama at Parts Unlimited to showcase the transformative potential of DevOps principles.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"who-stands-to-gain-from-reading-this-book\" href=\"#who-stands-to-gain-from-reading-this-book\"\u003e\n  \u003c/a\u003e\n  Who Stands to Gain from Reading This Book?\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eTech Enthusiasts and Software Engineers:\u003c/strong\u003e While the narrative might seem like familiar territory, it offers a fresh perspective on the impact of DevOps beyond the technical realm, emphasizing its strategic importance.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eBusiness Leaders and Managers:\u003c/strong\u003e For those steering the ship, this book is a wake-up call to the critical role IT plays in business success and how adopting a DevOps culture can be a game-changer.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eThe Curious Outsiders:\u003c/strong\u003e Ever wondered how software gets made or what IT departments actually do? Here's your chance to peek behind the curtain and see how technology powers businesses, told through a story that's as engaging as it is enlightening.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eFamilies of IT Professionals:\u003c/strong\u003e If you've ever been baffled by what your loved one does all day in their IT job, \"The Phoenix Project\" offers a relatable and understandable window into their world.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"key-takeaways-without-the-jargon\" href=\"#key-takeaways-without-the-jargon\"\u003e\n  \u003c/a\u003e\n  Key Takeaways Without the Jargon\n\u003c/h2\u003e\n\n\u003cp\u003eThe journey through Parts Unlimited's turnaround is more than a story; it's a lesson in how focusing on bottlenecks, fostering collaboration, and embracing continuous improvement can lead to remarkable business outcomes.\u003c/p\u003e\n\n\u003cp\u003eThe book introduces the idea that improvements should focus on the most critical issues first, that feedback loops are essential for quality and efficiency, and that a culture of experimentation and learning from failure is vital for growth.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"transforming-it-from-a-cost-center-to-a-value-creator\" href=\"#transforming-it-from-a-cost-center-to-a-value-creator\"\u003e\n  \u003c/a\u003e\n  Transforming IT from a Cost Center to a Value Creator\n\u003c/h2\u003e\n\n\u003cp\u003eOne of the most powerful messages of \"The Phoenix Project\" is the shift in perception of IT from a mere support function to a central driver of business value. It's a clarion call for businesses to invest in their IT capabilities not just to prevent disasters but to drive innovation and competitive advantage.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"is-the-phoenix-project-for-you\" href=\"#is-the-phoenix-project-for-you\"\u003e\n  \u003c/a\u003e\n  Is \"The Phoenix Project\" for You?\n\u003c/h2\u003e\n\n\u003cp\u003eWhether you're knee-deep in code daily, managing a team, or just curious about the buzzwords \"DevOps\" and \"agile,\" this book has something to offer. It's a narrative that bridges the gap between the technical and the accessible, making it a perfect primer for anyone looking to understand the pivotal role of IT in today's business landscape.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"final-thoughts\" href=\"#final-thoughts\"\u003e\n  \u003c/a\u003e\n  Final Thoughts\n\u003c/h2\u003e\n\n\u003cp\u003eConcluding, \"The Phoenix Project\" serves as a narrative bridge between the technical intricacies of IT operations and the broader business goals it supports.\u003c/p\u003e\n\n\u003cp\u003eWhether you're looking to better understand the principles of DevOps or seeking insights into effective team management and organizational change, \"The Phoenix Project\" provides a compelling starting point.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"quotes\" href=\"#quotes\"\u003e\n  \u003c/a\u003e\n  Quotes\n\u003c/h2\u003e\n\n\u003cp\u003eHere are some of my favorite quotes from the book:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eyou need to create what Humble and Farley called a deployment pipeline. Thats your entire value stream from code check-in to production. Thats not an art. Thats production. You need to get everything in version control. Everything. Not just the code, but everything required to build the environment. Then you need to automate the entire environment creation process. You need a deployment pipeline where you can create test and production environments, and then deploy code into them, entirely on-demand. Thats how you reduce your setup times and eliminate errors, so you can finally match whatever rate of change Development sets the tempo at. (Page 347)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eIn these competitive times, the name of the game is quick time to market and to fail fast.\" (Page 307)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eEvery work center is made up of four things: the machine, the man, the method, and the measures.\" (Page 243)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\"Four types of it Operations work: business projects, it Operations projects, changes, and unplanned work.\" (Page 222)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe First Way helps us understand how to create fast flow of work as it moves from Development into it Operations, because thats whats between the business and the customer. The Second Way shows us how to shorten and amplify feedback loops, so we can fix quality at the source and avoid rework. And the Third Way shows us how to create a culture that simultaneously fosters experimentation, learning from failure, and understanding that repetition and practice are the prerequisites to mastery. (Page 103)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eDr. Eliyahu M. Goldratt, who created the Theory of Constraints, showed us how any improvements made anywhere besides the bottleneck are an illusion. Astonishing, but true! Any improvement made after the bottleneck is useless, because it will always remain starved, waiting for work from the bottleneck. And any improvements made before the bottleneck merely results in more inventory piling up at the bottleneck. (Page 102)\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"navigating-the-it-maze-a-laymans-journey-through-the-phoenix-project-b44-temp-slug-4111131","social_image":null,"title":"Navigating the IT Maze: A Layman's Journey Through \"The Phoenix Project\"","video":null,"video_code":null},{"created_at":"2024-02-25T19:22:48.571Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/uiuc-mcs-cs-598-review-foundations-of-data-curation","feed_source_url":"https://blog.seancoughlin.me/uiuc-mcs-cs-598-review-foundations-of-data-curation","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: UIUC MCS - CS 598 Review - Foundations of Data Curation\npublished: false\ndate: 2024-02-25 17:35:19 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/uiuc-mcs-cs-598-review-foundations-of-data-curation\n---\n\n## Summary\n\n- **TLDR:** CS 598 Foundations of Data Curation at UIUC was surprisingly easy and overly theoretical, making it a good elective for those seeking to complete their master's degree requirements, despite its limited practical utility.\n\n- **Difficulty:** Very easy\n\n- **Opinion:** Disliked\n\n- **Weekly workload:** 5 hours\n\n- **Semester:** Fall 2023\n\n## Introduction\n\nIn the Fall of 2023, I enrolled in CS 598 Foundations of Data Curation at the University of Illinois at Urbana-Champaign (UIUC), driven by a curiosity to deepen my understanding of data management and its pivotal role in data science.\n\nThis course promised a comprehensive exploration of data curation, a field that ensures the usability, reliability, and efficacy of data across various scientific domains. Here, I share an honest reflection of my journey through this course, contrasting the syllabus's ambitious promises with the reality of my experience.\n\n![CS 598 banner](https://cdn.hashnode.com/res/hashnode/image/upload/v1708881919984/fd0abc9c-5838-48dd-9a9f-f8ec028adb29.png)\n\n## Course Overview\n\nCS 598 aimed to arm its students with a thorough grasp of both the theoretical and practical aspects of data curation. The syllabus painted a picture of a rigorous academic adventure, covering a wide array of topics from data modeling and integration to governance and security.\n\nNotably, the course diverged from traditional textbook-based learning, opting instead for a rich selection of weekly readings to complement its lecture videos. This structure, we were told, would require a commitment of 10-12 hours each week, a testament to the course's supposed depth and intensity.\n\n## Expectations vs. Reality\n\nThe expectations set by the syllabus were, to put it mildly, not quite met. Far from the demanding academic endeavor I had braced for, I found the course surprisingly easy.\n\nThe anticipated weekly workload seldom exceeded five hours, even when accounting for the occasional spikes associated with project deadlines. This discrepancy between expectation and reality was the first of many surprises.\n\n## Course Structure and Content\n\nThe course unfolded through weekly lecture videos, quizzes, and four major assignments, culminating in a final exam. Each element was designed to reinforce the theoretical foundations of data curation, with a significant emphasis on written explanations over technical problem-solving.\n\nThe open-book nature of the course materials, including lectures, quizzes, and notes, was a welcome policy, albeit one that perhaps contributed to the course's overall lack of challenge.\n\n## Personal Takeaways and Challenges\n\nDespite the ease with which I navigated the course, I emerged from the experience with mixed feelings. The class was undeniably easy, yet it was precisely this lack of difficulty that underscored its limited utility.\n\nThe heavily theoretical focus left me questioning the practical applications of what I had learned; the connection between the course content and real-world data curation challenges often felt tenuous at best.\n\nThe projects, while not difficult, were mired in nitpicky requirements that seemed more pedantic than educational. This dissonance between the course's theoretical ambitions and its practical value was, for me, its most glaring shortfall.\n\n## Conclusion\n\nReflecting on my semester with CS 598 Foundations of Data Curation, I find myself in a peculiar position. On one hand, the course fell short of my expectations, offering a theoretical exploration that rarely touched down into the realm of practical application. On the other, its ease makes it an appealing option for those seeking an additional 500-level course to round out their master's degree requirements.\n\nWhile I wouldn't recommend the course to someone looking for a rigorous or directly applicable skill set in data curation, for those in need of a manageable elective to complete their graduate studies, CS 598 might still hold value.\n\n* * *\n\n### More Reviews\n\nCheck out [uiucmcs.org](http://uiucmcs.org/) for more reviews of MCS courses. I don't know who maintains this site, but it's a good review collection from many semesters.\n\nI have also written up a [CS 427 review](https://dev.to/scc33/uiuc-mcs-cs-427-review-software-engineering-3cbo), a [CS 435 review](https://dev.to/scc33/uiuc-mcs-cs-435-review-cloud-computer-networking-58c5), a [CS 498 Cloud Computing review](https://dev.to/scc33/uiuc-mcs-cs-498-review-cloud-computing-applications-b6i), a [CS 416 Data Visualization review](https://dev.to/scc33/uiuc-mcs-cs-416-review-data-visualization-1897), and [a CS 513 Data Cleaning review](https://dev.to/scc33/uiuc-mcs-cs-513-review-theory-and-practice-of-data-cleaning-f0n).\n\n* * *\n\n### **Banner Credit**\n\nThe banner was generated using the [**UIUC LinkedIn Banner Generator**](https://d7.cs.illinois.edu/projects/linkedin-banner-image/). It is an awesome tool if you need an Illinois-themed banner for anything.","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Summary    TLDR: CS 598 Foundations of Data Curation at UIUC was surprisingly easy and...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/uiuc-mcs-cs-598-review-foundations-of-data-curation-47g1-temp-slug-9284897","public_reactions_count":0,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"summary\" href=\"#summary\"\u003e\n  \u003c/a\u003e\n  Summary\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eTLDR:\u003c/strong\u003e CS 598 Foundations of Data Curation at UIUC was surprisingly easy and overly theoretical, making it a good elective for those seeking to complete their master's degree requirements, despite its limited practical utility.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eDifficulty:\u003c/strong\u003e Very easy\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eOpinion:\u003c/strong\u003e Disliked\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eWeekly workload:\u003c/strong\u003e 5 hours\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSemester:\u003c/strong\u003e Fall 2023\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"introduction\" href=\"#introduction\"\u003e\n  \u003c/a\u003e\n  Introduction\n\u003c/h2\u003e\n\n\u003cp\u003eIn the Fall of 2023, I enrolled in CS 598 Foundations of Data Curation at the University of Illinois at Urbana-Champaign (UIUC), driven by a curiosity to deepen my understanding of data management and its pivotal role in data science.\u003c/p\u003e\n\n\u003cp\u003eThis course promised a comprehensive exploration of data curation, a field that ensures the usability, reliability, and efficacy of data across various scientific domains. Here, I share an honest reflection of my journey through this course, contrasting the syllabus's ambitious promises with the reality of my experience.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--6DR6jjEp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1708881919984/fd0abc9c-5838-48dd-9a9f-f8ec028adb29.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--6DR6jjEp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1708881919984/fd0abc9c-5838-48dd-9a9f-f8ec028adb29.png\" alt=\"CS 598 banner\" loading=\"lazy\" width=\"800\" height=\"200\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"course-overview\" href=\"#course-overview\"\u003e\n  \u003c/a\u003e\n  Course Overview\n\u003c/h2\u003e\n\n\u003cp\u003eCS 598 aimed to arm its students with a thorough grasp of both the theoretical and practical aspects of data curation. The syllabus painted a picture of a rigorous academic adventure, covering a wide array of topics from data modeling and integration to governance and security.\u003c/p\u003e\n\n\u003cp\u003eNotably, the course diverged from traditional textbook-based learning, opting instead for a rich selection of weekly readings to complement its lecture videos. This structure, we were told, would require a commitment of 10-12 hours each week, a testament to the course's supposed depth and intensity.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"expectations-vs-reality\" href=\"#expectations-vs-reality\"\u003e\n  \u003c/a\u003e\n  Expectations vs. Reality\n\u003c/h2\u003e\n\n\u003cp\u003eThe expectations set by the syllabus were, to put it mildly, not quite met. Far from the demanding academic endeavor I had braced for, I found the course surprisingly easy.\u003c/p\u003e\n\n\u003cp\u003eThe anticipated weekly workload seldom exceeded five hours, even when accounting for the occasional spikes associated with project deadlines. This discrepancy between expectation and reality was the first of many surprises.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"course-structure-and-content\" href=\"#course-structure-and-content\"\u003e\n  \u003c/a\u003e\n  Course Structure and Content\n\u003c/h2\u003e\n\n\u003cp\u003eThe course unfolded through weekly lecture videos, quizzes, and four major assignments, culminating in a final exam. Each element was designed to reinforce the theoretical foundations of data curation, with a significant emphasis on written explanations over technical problem-solving.\u003c/p\u003e\n\n\u003cp\u003eThe open-book nature of the course materials, including lectures, quizzes, and notes, was a welcome policy, albeit one that perhaps contributed to the course's overall lack of challenge.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"personal-takeaways-and-challenges\" href=\"#personal-takeaways-and-challenges\"\u003e\n  \u003c/a\u003e\n  Personal Takeaways and Challenges\n\u003c/h2\u003e\n\n\u003cp\u003eDespite the ease with which I navigated the course, I emerged from the experience with mixed feelings. The class was undeniably easy, yet it was precisely this lack of difficulty that underscored its limited utility.\u003c/p\u003e\n\n\u003cp\u003eThe heavily theoretical focus left me questioning the practical applications of what I had learned; the connection between the course content and real-world data curation challenges often felt tenuous at best.\u003c/p\u003e\n\n\u003cp\u003eThe projects, while not difficult, were mired in nitpicky requirements that seemed more pedantic than educational. This dissonance between the course's theoretical ambitions and its practical value was, for me, its most glaring shortfall.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eReflecting on my semester with CS 598 Foundations of Data Curation, I find myself in a peculiar position. On one hand, the course fell short of my expectations, offering a theoretical exploration that rarely touched down into the realm of practical application. On the other, its ease makes it an appealing option for those seeking an additional 500-level course to round out their master's degree requirements.\u003c/p\u003e\n\n\u003cp\u003eWhile I wouldn't recommend the course to someone looking for a rigorous or directly applicable skill set in data curation, for those in need of a manageable elective to complete their graduate studies, CS 598 might still hold value.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"more-reviews\" href=\"#more-reviews\"\u003e\n  \u003c/a\u003e\n  More Reviews\n\u003c/h3\u003e\n\n\u003cp\u003eCheck out \u003ca href=\"http://uiucmcs.org/\"\u003euiucmcs.org\u003c/a\u003e for more reviews of MCS courses. I don't know who maintains this site, but it's a good review collection from many semesters.\u003c/p\u003e\n\n\u003cp\u003eI have also written up a \u003ca href=\"https://dev.to/scc33/uiuc-mcs-cs-427-review-software-engineering-3cbo\"\u003eCS 427 review\u003c/a\u003e, a \u003ca href=\"https://dev.to/scc33/uiuc-mcs-cs-435-review-cloud-computer-networking-58c5\"\u003eCS 435 review\u003c/a\u003e, a \u003ca href=\"https://dev.to/scc33/uiuc-mcs-cs-498-review-cloud-computing-applications-b6i\"\u003eCS 498 Cloud Computing review\u003c/a\u003e, a \u003ca href=\"https://dev.to/scc33/uiuc-mcs-cs-416-review-data-visualization-1897\"\u003eCS 416 Data Visualization review\u003c/a\u003e, and \u003ca href=\"https://dev.to/scc33/uiuc-mcs-cs-513-review-theory-and-practice-of-data-cleaning-f0n\"\u003ea CS 513 Data Cleaning review\u003c/a\u003e.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"banner-credit\" href=\"#banner-credit\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eBanner Credit\u003c/strong\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eThe banner was generated using the \u003ca href=\"https://d7.cs.illinois.edu/projects/linkedin-banner-image/\"\u003e\u003cstrong\u003eUIUC LinkedIn Banner Generator\u003c/strong\u003e\u003c/a\u003e. It is an awesome tool if you need an Illinois-themed banner for anything.\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"uiuc-mcs-cs-598-review-foundations-of-data-curation-47g1-temp-slug-9284897","social_image":null,"title":"UIUC MCS - CS 598 Review - Foundations of Data Curation","video":null,"video_code":null},{"created_at":"2024-02-26T00:22:31.997Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/comparing-react-angular-vue-and-svelte-a-guide-for-developers","feed_source_url":"https://blog.seancoughlin.me/comparing-react-angular-vue-and-svelte-a-guide-for-developers","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Comparing React, Angular, Vue, and Svelte: A Guide for Developers\npublished: false\ndate: 2024-02-25 20:48:27 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/comparing-react-angular-vue-and-svelte-a-guide-for-developers\n---\n\nIn the world of front-end development, four giants stand tall: React, Angular, Vue, and Svelte. Each of these frameworks has carved out its niche, with a dedicated following and unique strengths.\n\nAs a software engineer, choosing the right tool for your project can be a critical decision. Let's dive into the features, strengths, and use cases of each to help you make an informed choice.\n\n## React: The Flexible UI Library\n\nDeveloped by Facebook, React isn't just a framework; [it's a JavaScript library](https://www.freecodecamp.org/news/is-react-a-library-or-a-framework/) for building user interfaces.\n\n**Key Features:**\n\n- **JSX** : React uses [JSX](https://legacy.reactjs.org/docs/introducing-jsx.html), a syntax extension that allows HTML and JavaScript to coexist harmoniously.\n\n- **Components** : Everything in React is a [component](https://legacy.reactjs.org/docs/components-and-props.html), promoting reusability and modularity.\n\n- **Virtual DOM** : React's [virtual DOM](https://legacy.reactjs.org/docs/faq-internals.html) optimizes rendering, making it fast and efficient.\n\n**Strengths:**\n\n- **Flexibility** : Unlike full-fledged frameworks, React focuses on UI, giving developers the freedom to choose other libraries for different aspects of their project.\n\n- **Strong Community and Ecosystem** : With a vast number of libraries and tools, React offers a rich ecosystem.\n\n- **Backed by Facebook** : Strong corporate support ensures continuous development and a long-term future.\n\n**Best Use Cases:**\n\n- Single Page Applications (SPAs) requiring dynamic content updates.\n\n- Projects where you want flexibility in choosing additional libraries.\n\n## Angular: The Full-Fledged Framework\n\nDeveloped by Google, Angular is a comprehensive framework for building dynamic web applications.\n\n**Key Features:**\n\n- **TypeScript** : [Angular is built with TypeScript](https://angular.io/guide/typescript-configuration), offering a more structured and scalable codebase.\n\n- [**Two-Way Data Binding**](https://angular.io/guide/two-way-binding): Simplifies the synchronization between the model and the view.\n\n**Strengths:**\n\n- **Complete Package** : Angular provides a robust set of features out of the box, including routing, form validation, and HTTP client.\n\n- **Enterprise-Level Applications** : Its structured nature makes it ideal for large-scale projects.\n\n- **Strong Typing with TypeScript** : Enhances code quality and maintainability.\n\n**Best Use Cases:**\n\n- Large-scale enterprise applications with complex requirements.\n\n- Projects where an out-of-the-box solution is preferred.\n\n## Vue: The Progressive Framework\n\n[Developed by Evan You](https://en.wikipedia.org/wiki/Vue.js), Vue.js is known for its simplicity and progressive nature.\n\n**Key Features:**\n\n- **Easy to Learn** : Vue's learning curve is gentle, making it accessible to beginners.\n\n- [**Reactive Data Binding**](https://v1.vuejs.org/guide/syntax.html): Offers a simple and effective way to track and react to data changes.\n\n- [**Single-File Components**](https://vuejs.org/guide/scaling-up/sfc.html): Combines HTML, CSS, and JavaScript in a single file, promoting clarity.\n\n**Strengths:**\n\n- **Flexibility and Simplicity** : Vue is easy to integrate into projects, and its simplicity doesn't sacrifice power.\n\n- **Detailed Documentation** : Vue's documentation is comprehensive and user-friendly.\n\n- **Lightweight** : Vue is smaller in size compared to Angular, making it fast and efficient.\n\n**Best Use Cases:**\n\n- Small to medium-scale projects looking for a balance between functionality and simplicity.\n\n- Projects that require a gentle learning curve for newer developers.\n\n## Svelte: The Rising Star for Simplified Development\n\nSvelte, a relatively new player in the front-end framework arena, is gaining traction for its unique approach to building user interfaces.\n\n**Key Features:**\n\n- **Compile-time Framework** : Unlike others that rely on virtual DOM, Svelte shifts much of the work to compile time, resulting in faster runtime performance.\n\n- **Less Code** : Svelte's design allows developers to achieve more with fewer lines of code.\n\n- **Reactive by Design** : Updates to the state of the application are automatically reflected in the UI without the need for additional libraries or frameworks.\n\n**Strengths:**\n\n- **Enhanced Performance** : By eliminating the virtual DOM and reducing the client-side runtime, Svelte applications are typically faster and more efficient.\n\n- **Simplicity and Developer Experience** : Svelte's straightforward syntax and minimalistic approach make it easy to learn and enjoyable to use.\n\n- **No Virtual DOM Overhead** : Direct manipulation of the DOM leads to more predictable and optimized performance.\n\n**Best Use Cases:**\n\n- Projects that prioritize performance and faster loading times.\n\n- Applications where minimizing the amount of code and complexity is a key concern.\n\n## Comparing the Frameworks\n\nHere's a comparative table for React, Angular, Vue, and Svelte, highlighting their key features, strengths, learning curve, and best use cases:\n\n| Feature | React | Angular | Vue | Svelte |\n| **Developed by** | Facebook | Google | Evan You | Rich Harris |\n| **Type** | JavaScript Library | Full-Fledged Framework | Progressive Framework | Compile-time Framework |\n| **Key Strengths** | Flexibility, Strong Community, Virtual DOM | Comprehensive features, TypeScript, Enterprise-Level Apps | Simplicity, Detailed Documentation, Lightweight | Enhanced Performance, Less Code, No Virtual DOM Overhead |\n| **Learning Curve** | Moderate | Steep | Easy | Easy to Moderate |\n| **Best Use Cases** | Single Page Applications, Projects requiring a mix of libraries | Large-scale enterprise applications, Complex web apps | Small to medium-scale projects, Projects with simplicity in mind | Performance-focused projects, Applications needing minimal code |\n\n## Conclusion\n\nIn summary, React provides flexibility and a vast ecosystem, Angular offers a comprehensive all-in-one solution for enterprise projects, Vue balances simplicity with power, and Svelte emerges as a game-changer in terms of performance and ease of use.\n\nThe choice among React, Angular, Vue, and Svelte will largely depend on the specific needs of your project, your team's familiarity with the technologies, and the long-term maintainability of the codebase.\n\nAs the landscape of web development continues to evolve, staying informed and adaptable is key to choosing the right tool for your next project.","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"In the world of front-end development, four giants stand tall: React, Angular, Vue, and Svelte. Each...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/comparing-react-angular-vue-and-svelte-a-guide-for-developers-1h8i-temp-slug-81735","public_reactions_count":0,"processed_html":"\u003cp\u003eIn the world of front-end development, four giants stand tall: React, Angular, Vue, and Svelte. Each of these frameworks has carved out its niche, with a dedicated following and unique strengths.\u003c/p\u003e\n\n\u003cp\u003eAs a software engineer, choosing the right tool for your project can be a critical decision. Let's dive into the features, strengths, and use cases of each to help you make an informed choice.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"react-the-flexible-ui-library\" href=\"#react-the-flexible-ui-library\"\u003e\n  \u003c/a\u003e\n  React: The Flexible UI Library\n\u003c/h2\u003e\n\n\u003cp\u003eDeveloped by Facebook, React isn't just a framework; \u003ca href=\"https://www.freecodecamp.org/news/is-react-a-library-or-a-framework/\"\u003eit's a JavaScript library\u003c/a\u003e for building user interfaces.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eKey Features:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eJSX\u003c/strong\u003e : React uses \u003ca href=\"https://legacy.reactjs.org/docs/introducing-jsx.html\"\u003eJSX\u003c/a\u003e, a syntax extension that allows HTML and JavaScript to coexist harmoniously.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eComponents\u003c/strong\u003e : Everything in React is a \u003ca href=\"https://legacy.reactjs.org/docs/components-and-props.html\"\u003ecomponent\u003c/a\u003e, promoting reusability and modularity.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eVirtual DOM\u003c/strong\u003e : React's \u003ca href=\"https://legacy.reactjs.org/docs/faq-internals.html\"\u003evirtual DOM\u003c/a\u003e optimizes rendering, making it fast and efficient.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003eStrengths:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eFlexibility\u003c/strong\u003e : Unlike full-fledged frameworks, React focuses on UI, giving developers the freedom to choose other libraries for different aspects of their project.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eStrong Community and Ecosystem\u003c/strong\u003e : With a vast number of libraries and tools, React offers a rich ecosystem.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eBacked by Facebook\u003c/strong\u003e : Strong corporate support ensures continuous development and a long-term future.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003eBest Use Cases:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eSingle Page Applications (SPAs) requiring dynamic content updates.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eProjects where you want flexibility in choosing additional libraries.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"angular-the-fullfledged-framework\" href=\"#angular-the-fullfledged-framework\"\u003e\n  \u003c/a\u003e\n  Angular: The Full-Fledged Framework\n\u003c/h2\u003e\n\n\u003cp\u003eDeveloped by Google, Angular is a comprehensive framework for building dynamic web applications.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eKey Features:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eTypeScript\u003c/strong\u003e : \u003ca href=\"https://angular.io/guide/typescript-configuration\"\u003eAngular is built with TypeScript\u003c/a\u003e, offering a more structured and scalable codebase.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://angular.io/guide/two-way-binding\"\u003e\u003cstrong\u003eTwo-Way Data Binding\u003c/strong\u003e\u003c/a\u003e: Simplifies the synchronization between the model and the view.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003eStrengths:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eComplete Package\u003c/strong\u003e : Angular provides a robust set of features out of the box, including routing, form validation, and HTTP client.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eEnterprise-Level Applications\u003c/strong\u003e : Its structured nature makes it ideal for large-scale projects.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eStrong Typing with TypeScript\u003c/strong\u003e : Enhances code quality and maintainability.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003eBest Use Cases:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eLarge-scale enterprise applications with complex requirements.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eProjects where an out-of-the-box solution is preferred.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"vue-the-progressive-framework\" href=\"#vue-the-progressive-framework\"\u003e\n  \u003c/a\u003e\n  Vue: The Progressive Framework\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Vue.js\"\u003eDeveloped by Evan You\u003c/a\u003e, Vue.js is known for its simplicity and progressive nature.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eKey Features:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eEasy to Learn\u003c/strong\u003e : Vue's learning curve is gentle, making it accessible to beginners.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://v1.vuejs.org/guide/syntax.html\"\u003e\u003cstrong\u003eReactive Data Binding\u003c/strong\u003e\u003c/a\u003e: Offers a simple and effective way to track and react to data changes.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://vuejs.org/guide/scaling-up/sfc.html\"\u003e\u003cstrong\u003eSingle-File Components\u003c/strong\u003e\u003c/a\u003e: Combines HTML, CSS, and JavaScript in a single file, promoting clarity.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003eStrengths:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eFlexibility and Simplicity\u003c/strong\u003e : Vue is easy to integrate into projects, and its simplicity doesn't sacrifice power.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eDetailed Documentation\u003c/strong\u003e : Vue's documentation is comprehensive and user-friendly.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eLightweight\u003c/strong\u003e : Vue is smaller in size compared to Angular, making it fast and efficient.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003eBest Use Cases:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eSmall to medium-scale projects looking for a balance between functionality and simplicity.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eProjects that require a gentle learning curve for newer developers.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"svelte-the-rising-star-for-simplified-development\" href=\"#svelte-the-rising-star-for-simplified-development\"\u003e\n  \u003c/a\u003e\n  Svelte: The Rising Star for Simplified Development\n\u003c/h2\u003e\n\n\u003cp\u003eSvelte, a relatively new player in the front-end framework arena, is gaining traction for its unique approach to building user interfaces.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eKey Features:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eCompile-time Framework\u003c/strong\u003e : Unlike others that rely on virtual DOM, Svelte shifts much of the work to compile time, resulting in faster runtime performance.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eLess Code\u003c/strong\u003e : Svelte's design allows developers to achieve more with fewer lines of code.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eReactive by Design\u003c/strong\u003e : Updates to the state of the application are automatically reflected in the UI without the need for additional libraries or frameworks.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003eStrengths:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eEnhanced Performance\u003c/strong\u003e : By eliminating the virtual DOM and reducing the client-side runtime, Svelte applications are typically faster and more efficient.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eSimplicity and Developer Experience\u003c/strong\u003e : Svelte's straightforward syntax and minimalistic approach make it easy to learn and enjoyable to use.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eNo Virtual DOM Overhead\u003c/strong\u003e : Direct manipulation of the DOM leads to more predictable and optimized performance.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003eBest Use Cases:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eProjects that prioritize performance and faster loading times.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eApplications where minimizing the amount of code and complexity is a key concern.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"comparing-the-frameworks\" href=\"#comparing-the-frameworks\"\u003e\n  \u003c/a\u003e\n  Comparing the Frameworks\n\u003c/h2\u003e\n\n\u003cp\u003eHere's a comparative table for React, Angular, Vue, and Svelte, highlighting their key features, strengths, learning curve, and best use cases:\u003c/p\u003e\n\n\u003cp\u003e| Feature | React | Angular | Vue | Svelte |\u003cbr\u003e\n| \u003cstrong\u003eDeveloped by\u003c/strong\u003e | Facebook | Google | Evan You | Rich Harris |\u003cbr\u003e\n| \u003cstrong\u003eType\u003c/strong\u003e | JavaScript Library | Full-Fledged Framework | Progressive Framework | Compile-time Framework |\u003cbr\u003e\n| \u003cstrong\u003eKey Strengths\u003c/strong\u003e | Flexibility, Strong Community, Virtual DOM | Comprehensive features, TypeScript, Enterprise-Level Apps | Simplicity, Detailed Documentation, Lightweight | Enhanced Performance, Less Code, No Virtual DOM Overhead |\u003cbr\u003e\n| \u003cstrong\u003eLearning Curve\u003c/strong\u003e | Moderate | Steep | Easy | Easy to Moderate |\u003cbr\u003e\n| \u003cstrong\u003eBest Use Cases\u003c/strong\u003e | Single Page Applications, Projects requiring a mix of libraries | Large-scale enterprise applications, Complex web apps | Small to medium-scale projects, Projects with simplicity in mind | Performance-focused projects, Applications needing minimal code |\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eIn summary, React provides flexibility and a vast ecosystem, Angular offers a comprehensive all-in-one solution for enterprise projects, Vue balances simplicity with power, and Svelte emerges as a game-changer in terms of performance and ease of use.\u003c/p\u003e\n\n\u003cp\u003eThe choice among React, Angular, Vue, and Svelte will largely depend on the specific needs of your project, your team's familiarity with the technologies, and the long-term maintainability of the codebase.\u003c/p\u003e\n\n\u003cp\u003eAs the landscape of web development continues to evolve, staying informed and adaptable is key to choosing the right tool for your next project.\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"comparing-react-angular-vue-and-svelte-a-guide-for-developers-1h8i-temp-slug-81735","social_image":null,"title":"Comparing React, Angular, Vue, and Svelte: A Guide for Developers","video":null,"video_code":null},{"created_at":"2024-02-27T21:22:44.274Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/two-sum-problem-solution-a-guide-for-software-engineers","feed_source_url":"https://blog.seancoughlin.me/two-sum-problem-solution-a-guide-for-software-engineers","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Two Sum Problem Solution: A Guide for Software Engineers\npublished: false\ndate: 2024-02-27 17:30:25 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/two-sum-problem-solution-a-guide-for-software-engineers\n---\n\n## Problem Introduction\n\nIn many software engineering interviews, candidates are often asked to solve algorithmic problems that test their analytical and coding skills. One such problem is the \"[Two Sum](https://leetcode.com/problems/two-sum/description/)\" problem. It's a classic algorithmic challenge that is popular among interviewers for its simplicity yet ability to test basic coding and problem-solving skills.\n\n**Problem Statement:** Given an array of integers `nums` and an integer `target`, return the indices of the two numbers such that they add up to `target`.\n\n**Constraints:**\n\n- Each input would have exactly one solution.\n\n- You may not use the same element twice.\n\n- The solution can be returned in any order.\n\n**Examples:**\n\n- **Example 1:**\n\n- **Example 2:**\n\n- **Example 3:**\n\n## High-Level Solution\n\nThe essence of solving the \"Two Sum\" problem efficiently lies in reducing the need to compare each number with every other number. This is achieved by utilizing a hash table (or map) to store each number's value as we iterate through the array. Here's a step-by-step approach:\n\n1. Iterate through each element in the array.\n\n2. For each element, calculate the complement by subtracting the current element's value from the target.\n\n3. Check if this complement exists in the hash table.\n\n4. Continue this process until a solution is found.\n\nThis method allows for a time-efficient solution with a linear complexity of O(n), where n is the number of elements in the input array.\n\n## Solution in Python\n\n```\nclass Solution: def twoSum(self, nums: List[int], target: int) -\u003e List[int]: seen = dict() for index, value in enumerate(nums): pairValue = target - value if pairValue in seen: return [seen[pairValue], index] seen[value] = index\n```\n\n## Solution in TypeScript\n\n```\nfunction twoSum(nums: number[], target: number): number[] { const map = new Map\u003cnumber, number\u003e(); for (let i = 0; i \u003c nums.length; i++) { const complement = target - nums[i]; if (map.has(complement)) { return [map.get(complement)!, i]; } map.set(nums[i], i); } return [];};\n```\n\n## Solution in Java\n\n```\nclass Solution { public int[] twoSum(int[] nums, int target) { HashMap\u003cInteger, Integer\u003e map = new HashMap\u003c\u003e(); for (int i = 0; i \u003c nums.length; i++) { int complement = target - nums[i]; if (map.containsKey(complement)) { return new int[] { map.get(complement), i }; } map.put(nums[i], i); } return new int[0]; }}\n```\n\n## Conclusion\n\nThe \"Two Sum\" problem is a fundamental challenge that tests a candidate's grasp of data structures and algorithmic thinking. By understanding and practicing such problems, aspiring software engineers can sharpen their problem-solving skills and prepare themselves for technical interviews.","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Problem Introduction   In many software engineering interviews, candidates are often asked...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/two-sum-problem-solution-a-guide-for-software-engineers-1258-temp-slug-2288160","public_reactions_count":0,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"problem-introduction\" href=\"#problem-introduction\"\u003e\n  \u003c/a\u003e\n  Problem Introduction\n\u003c/h2\u003e\n\n\u003cp\u003eIn many software engineering interviews, candidates are often asked to solve algorithmic problems that test their analytical and coding skills. One such problem is the \"\u003ca href=\"https://leetcode.com/problems/two-sum/description/\"\u003eTwo Sum\u003c/a\u003e\" problem. It's a classic algorithmic challenge that is popular among interviewers for its simplicity yet ability to test basic coding and problem-solving skills.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eProblem Statement:\u003c/strong\u003e Given an array of integers \u003ccode\u003enums\u003c/code\u003e and an integer \u003ccode\u003etarget\u003c/code\u003e, return the indices of the two numbers such that they add up to \u003ccode\u003etarget\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eConstraints:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eEach input would have exactly one solution.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eYou may not use the same element twice.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eThe solution can be returned in any order.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003eExamples:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eExample 1:\u003c/strong\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eExample 2:\u003c/strong\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eExample 3:\u003c/strong\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"highlevel-solution\" href=\"#highlevel-solution\"\u003e\n  \u003c/a\u003e\n  High-Level Solution\n\u003c/h2\u003e\n\n\u003cp\u003eThe essence of solving the \"Two Sum\" problem efficiently lies in reducing the need to compare each number with every other number. This is achieved by utilizing a hash table (or map) to store each number's value as we iterate through the array. Here's a step-by-step approach:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eIterate through each element in the array.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eFor each element, calculate the complement by subtracting the current element's value from the target.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eCheck if this complement exists in the hash table.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eContinue this process until a solution is found.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThis method allows for a time-efficient solution with a linear complexity of O(n), where n is the number of elements in the input array.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"solution-in-python\" href=\"#solution-in-python\"\u003e\n  \u003c/a\u003e\n  Solution in Python\n\u003c/h2\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eclass Solution: def twoSum(self, nums: List[int], target: int) -\u0026gt; List[int]: seen = dict() for index, value in enumerate(nums): pairValue = target - value if pairValue in seen: return [seen[pairValue], index] seen[value] = index\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"solution-in-typescript\" href=\"#solution-in-typescript\"\u003e\n  \u003c/a\u003e\n  Solution in TypeScript\n\u003c/h2\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003efunction twoSum(nums: number[], target: number): number[] { const map = new Map\u0026lt;number, number\u0026gt;(); for (let i = 0; i \u0026lt; nums.length; i++) { const complement = target - nums[i]; if (map.has(complement)) { return [map.get(complement)!, i]; } map.set(nums[i], i); } return [];};\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"solution-in-java\" href=\"#solution-in-java\"\u003e\n  \u003c/a\u003e\n  Solution in Java\n\u003c/h2\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eclass Solution { public int[] twoSum(int[] nums, int target) { HashMap\u0026lt;Integer, Integer\u0026gt; map = new HashMap\u0026lt;\u0026gt;(); for (int i = 0; i \u0026lt; nums.length; i++) { int complement = target - nums[i]; if (map.containsKey(complement)) { return new int[] { map.get(complement), i }; } map.put(nums[i], i); } return new int[0]; }}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eThe \"Two Sum\" problem is a fundamental challenge that tests a candidate's grasp of data structures and algorithmic thinking. By understanding and practicing such problems, aspiring software engineers can sharpen their problem-solving skills and prepare themselves for technical interviews.\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"two-sum-problem-solution-a-guide-for-software-engineers-1258-temp-slug-2288160","social_image":null,"title":"Two Sum Problem Solution: A Guide for Software Engineers","video":null,"video_code":null},{"created_at":"2024-02-28T17:22:37.517Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/valid-parentheses-a-leetcode-solution-guide","feed_source_url":"https://blog.seancoughlin.me/valid-parentheses-a-leetcode-solution-guide","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Valid Parentheses: A Leetcode Solution Guide\npublished: false\ndate: 2024-02-28 14:52:52 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/valid-parentheses-a-leetcode-solution-guide\n---\n\nToday, we're tackling a classic yet crucial problem that surfaces in many software engineering interviews: validating a string of brackets ([Valid Parentheses](https://leetcode.com/problems/valid-parentheses/description/)). Let's dive in, ensuring we cover all necessary details and analyses.\n\n## Introduction to the Problem\n\nThe problem at hand involves checking if a string containing only the characters '(', ')', '{', '}', '[' and ']' is valid based on three rules:\n\n1. Open brackets must be closed by the same type of brackets.\n\n2. Open brackets must be closed in the correct order.\n\n3. Every close bracket has a corresponding open bracket of the same type.\n\nThis challenge is a litmus test for your understanding of basic data structures and algorithmic logic.\n\n\u003e **Example 1:**\n\u003e \n\u003e ```\n\u003e Input: s = \"()\"Output: true\n\u003e ```\n\u003e \n\u003e **Example 2:**\n\u003e \n\u003e ```\n\u003e Input: s = \"()[]{}\"Output: true\n\u003e ```\n\u003e \n\u003e **Example 3:**\n\u003e \n\u003e ```\n\u003e Input: s = \"(]\"Output: false\n\u003e ```\n\n## How to Solve the Problem\n\nThe essence of solving this problem lies in using a stack, a data structure that operates on a [Last In, First Out (LIFO)](https://www.geeksforgeeks.org/lifo-last-in-first-out-approach-in-programming/) principle. Here's the approach:\n\n1. Iterate through each character in the string.\n\n2. If it's an opening bracket, push it onto the stack.\n\n3. If it's a closing bracket, check if it matches the top item of the stack. If it does, pop the top item off the stack; otherwise, the string is invalid.\n\n4. After processing all characters, if the stack is empty, the string is valid; if not, it's invalid.\n\n### Big O Notation Analysis\n\nThe time complexity of this algorithm is O(n), where n is the length of the string. This is because we iterate through each character exactly once.\n\nThe space complexity is also O(n), in the worst-case scenario where all characters are opening brackets and get pushed onto the stack.\n\n## Solution in Python\n\n```\nclass Solution: def isValid(self, s: str) -\u003e bool: stack = [] # Initialize an empty stack d = {'(':')', '{': '}', '[':']'} # Mapping of brackets for easy lookup for c in s: if c in d: # If it's an opening bracket, push to stack stack.append(c) elif len(stack) == 0 or d[stack.pop()] != c: # If stack is empty or brackets don't match, return False return False return len(stack) == 0 # If stack is empty, all brackets were properly closed\n```\n\n## Solution in TypeScript\n\n```\nfunction isValid(s: string): boolean { const stack: string[] = []; // Initialize an empty stack let dict: { [key: string]: string } = {'{': '}', '[': ']', '(': ')'}; // Mapping of brackets for (let c of s) { if (dict.hasOwnProperty(c)) { // If opening bracket, push to stack stack.push(c); } else if (stack.length === 0 || dict[stack.pop()] != c) { // If stack is empty or brackets don't match, return False return false; } } return stack.length === 0; // If stack is empty, all brackets were properly closed}\n```\n\n## Solution in Java\n\nHere's how you can tackle the problem in Java, adhering to the same logic:\n\n```\nimport java.util.Stack;public class Solution { public boolean isValid(String s) { Stack\u003cCharacter\u003e stack = new Stack\u003c\u003e(); // Create a new stack for (char c : s.toCharArray()) { switch (c) { case '(': case '{': case '[': stack.push(c); break; // Push opening brackets onto the stack case ')': if (stack.isEmpty() || stack.pop() != '(') return false; break; // Check for matching brackets case '}': if (stack.isEmpty() || stack.pop() != '{') return false; break; case ']': if (stack.isEmpty() || stack.pop() != '[') return false; break; } } return stack.isEmpty(); // Check if the stack is empty }}\n```\n\n## Conclusion\n\nValidating bracket sequences is a fundamental problem that beautifully illustrates the utility of the stack data structure in managing nested or sequential data in a LIFO manner.\n\nBy walking through the solutions in Python, TypeScript, and Java, we've not only explored how to approach and solve the problem but also how to analyze and understand its computational complexity.\n\nRemember, mastering these concepts is key to excelling in software engineering interviews.","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Today, we're tackling a classic yet crucial problem that surfaces in many software engineering...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/valid-parentheses-a-leetcode-solution-guide-29gd-temp-slug-5685314","public_reactions_count":0,"processed_html":"\u003cp\u003eToday, we're tackling a classic yet crucial problem that surfaces in many software engineering interviews: validating a string of brackets (\u003ca href=\"https://leetcode.com/problems/valid-parentheses/description/\"\u003eValid Parentheses\u003c/a\u003e). Let's dive in, ensuring we cover all necessary details and analyses.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"introduction-to-the-problem\" href=\"#introduction-to-the-problem\"\u003e\n  \u003c/a\u003e\n  Introduction to the Problem\n\u003c/h2\u003e\n\n\u003cp\u003eThe problem at hand involves checking if a string containing only the characters '(', ')', '{', '}', '[' and ']' is valid based on three rules:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eOpen brackets must be closed by the same type of brackets.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eOpen brackets must be closed in the correct order.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eEvery close bracket has a corresponding open bracket of the same type.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThis challenge is a litmus test for your understanding of basic data structures and algorithmic logic.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eExample 1:\u003c/strong\u003e\u003c/p\u003e\n\n\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eInput: s = \"()\"Output: true\n\u003c/code\u003e\u003c/pre\u003e\n\n\n\u003cp\u003e\u003cstrong\u003eExample 2:\u003c/strong\u003e\u003c/p\u003e\n\n\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eInput: s = \"()[]{}\"Output: true\n\u003c/code\u003e\u003c/pre\u003e\n\n\n\u003cp\u003e\u003cstrong\u003eExample 3:\u003c/strong\u003e\u003c/p\u003e\n\n\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eInput: s = \"(]\"Output: false\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003c/blockquote\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"how-to-solve-the-problem\" href=\"#how-to-solve-the-problem\"\u003e\n  \u003c/a\u003e\n  How to Solve the Problem\n\u003c/h2\u003e\n\n\u003cp\u003eThe essence of solving this problem lies in using a stack, a data structure that operates on a \u003ca href=\"https://www.geeksforgeeks.org/lifo-last-in-first-out-approach-in-programming/\"\u003eLast In, First Out (LIFO)\u003c/a\u003e principle. Here's the approach:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eIterate through each character in the string.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eIf it's an opening bracket, push it onto the stack.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eIf it's a closing bracket, check if it matches the top item of the stack. If it does, pop the top item off the stack; otherwise, the string is invalid.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eAfter processing all characters, if the stack is empty, the string is valid; if not, it's invalid.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"big-o-notation-analysis\" href=\"#big-o-notation-analysis\"\u003e\n  \u003c/a\u003e\n  Big O Notation Analysis\n\u003c/h3\u003e\n\n\u003cp\u003eThe time complexity of this algorithm is O(n), where n is the length of the string. This is because we iterate through each character exactly once.\u003c/p\u003e\n\n\u003cp\u003eThe space complexity is also O(n), in the worst-case scenario where all characters are opening brackets and get pushed onto the stack.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"solution-in-python\" href=\"#solution-in-python\"\u003e\n  \u003c/a\u003e\n  Solution in Python\n\u003c/h2\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eclass Solution: def isValid(self, s: str) -\u0026gt; bool: stack = [] # Initialize an empty stack d = {'(':')', '{': '}', '[':']'} # Mapping of brackets for easy lookup for c in s: if c in d: # If it's an opening bracket, push to stack stack.append(c) elif len(stack) == 0 or d[stack.pop()] != c: # If stack is empty or brackets don't match, return False return False return len(stack) == 0 # If stack is empty, all brackets were properly closed\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"solution-in-typescript\" href=\"#solution-in-typescript\"\u003e\n  \u003c/a\u003e\n  Solution in TypeScript\n\u003c/h2\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003efunction isValid(s: string): boolean { const stack: string[] = []; // Initialize an empty stack let dict: { [key: string]: string } = {'{': '}', '[': ']', '(': ')'}; // Mapping of brackets for (let c of s) { if (dict.hasOwnProperty(c)) { // If opening bracket, push to stack stack.push(c); } else if (stack.length === 0 || dict[stack.pop()] != c) { // If stack is empty or brackets don't match, return False return false; } } return stack.length === 0; // If stack is empty, all brackets were properly closed}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"solution-in-java\" href=\"#solution-in-java\"\u003e\n  \u003c/a\u003e\n  Solution in Java\n\u003c/h2\u003e\n\n\u003cp\u003eHere's how you can tackle the problem in Java, adhering to the same logic:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eimport java.util.Stack;public class Solution { public boolean isValid(String s) { Stack\u0026lt;Character\u0026gt; stack = new Stack\u0026lt;\u0026gt;(); // Create a new stack for (char c : s.toCharArray()) { switch (c) { case '(': case '{': case '[': stack.push(c); break; // Push opening brackets onto the stack case ')': if (stack.isEmpty() || stack.pop() != '(') return false; break; // Check for matching brackets case '}': if (stack.isEmpty() || stack.pop() != '{') return false; break; case ']': if (stack.isEmpty() || stack.pop() != '[') return false; break; } } return stack.isEmpty(); // Check if the stack is empty }}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eValidating bracket sequences is a fundamental problem that beautifully illustrates the utility of the stack data structure in managing nested or sequential data in a LIFO manner.\u003c/p\u003e\n\n\u003cp\u003eBy walking through the solutions in Python, TypeScript, and Java, we've not only explored how to approach and solve the problem but also how to analyze and understand its computational complexity.\u003c/p\u003e\n\n\u003cp\u003eRemember, mastering these concepts is key to excelling in software engineering interviews.\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"valid-parentheses-a-leetcode-solution-guide-29gd-temp-slug-5685314","social_image":null,"title":"Valid Parentheses: A Leetcode Solution Guide","video":null,"video_code":null},{"created_at":"2024-02-28T22:22:42.996Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/mastering-leetcode-merge-two-sorted-lists","feed_source_url":"https://blog.seancoughlin.me/mastering-leetcode-merge-two-sorted-lists","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Mastering LeetCode: Merge Two Sorted Lists\npublished: false\ndate: 2024-02-28 21:19:55 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/mastering-leetcode-merge-two-sorted-lists\n---\n\n## Introduction\n\nThe problem of [merging two sorted linked (LeetCode 21)](https://leetcode.com/problems/merge-two-sorted-lists/description/) lists into a single sorted list is a classic algorithmic challenge often encountered in software engineering interviews. This task tests one's understanding of linked list data structures, pointer manipulation, and algorithm efficiency.\n\nImagine you're given two lists: `list1 = [1,2,4]` and `list2 = [1,3,4]`. Your goal is to merge these lists into one sorted list, resulting in `[1,1,2,3,4,4]`. This seemingly straightforward task can reveal deep insights into an engineer's problem-solving skills.\n\n## Problem Solving Strategy\n\nTo tackle this problem:\n\n1. We start with a dummy node to simplify edge cases and maintain a current pointer to build the new list.\n\n2. We compare the values of nodes from both lists, appending the smaller one to the current node, and moving the pointer of the appended list forward. This process continues until we reach the end of one or both lists.\n\n3. If one list is exhausted before the other, we link the remainder of the non-exhausted list to the end of the merged list. This ensures that all elements are included.\n\nThe time complexity of this algorithm is O(n + m), where n and m are the lengths of the two lists, as each element is visited exactly once.\n\nThe space complexity is O(1), as we only allocate a few pointers regardless of the input size.\n\n## Python Solution\n\n```\nclass ListNode: def __init__ (self, val=0, next=None): self.val = val self.next = nextclass Solution: def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -\u003e Optional[ListNode]: # Create a dummy node to act as the starting point head = cur = ListNode(0) # Traverse both lists while list1 and list2: # Link the smaller value to 'cur' and advance if list1.val \u003c list2.val: cur.next = list1 list1 = list1.next else: cur.next = list2 list2 = list2.next cur = cur.next # Attach any remaining elements cur.next = list1 or list2 # Return the merged list, skipping the dummy node return head.next\n```\n\n## TypeScript Solution\n\n```\nclass ListNode { val: number; next: ListNode | null; constructor(val?: number, next?: ListNode | null) { this.val = (val===undefined ? 0 : val); this.next = (next===undefined ? null : next); }}function mergeTwoLists(list1: ListNode | null, list2: ListNode | null): ListNode | null { let cur = new ListNode(0); const head = cur; while (list1 \u0026\u0026 list2) { if (list1.val \u003c list2.val) { cur.next = list1; list1 = list1.next; } else { cur.next = list2; list2 = list2.next; } cur = cur.next; } cur.next = list1 || list2; return head.next;}\n```\n\n## Java Solution\n\n```\npublic class ListNode { int val; ListNode next; ListNode() {} ListNode(int val) { this.val = val; } ListNode(int val, ListNode next) { this.val = val; this.next = next; }}public class Solution { public ListNode mergeTwoLists(ListNode list1, ListNode list2) { ListNode head = new ListNode(0); ListNode cur = head; while (list1 != null \u0026\u0026 list2 != null) { if (list1.val \u003c list2.val) { cur.next = list1; list1 = list1.next; } else { cur.next = list2; list2 = list2.next; } cur = cur.next; } cur.next = (list1 != null) ? list1 : list2; return head.next; }}\n```\n\n### Conclusion\n\nMerging two sorted lists is an essential problem that showcases the importance of understanding data structures and algorithmic strategies.\n\nRemember, the key to excelling in coding interviews is practice, understanding the underlying principles, and adapting to various problem-solving scenarios.","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Introduction   The problem of merging two sorted linked (LeetCode 21) lists into a single...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/mastering-leetcode-merge-two-sorted-lists-5c3k-temp-slug-3381132","public_reactions_count":0,"processed_html":"\u003ch2\u003e\n  \u003ca name=\"introduction\" href=\"#introduction\"\u003e\n  \u003c/a\u003e\n  Introduction\n\u003c/h2\u003e\n\n\u003cp\u003eThe problem of \u003ca href=\"https://leetcode.com/problems/merge-two-sorted-lists/description/\"\u003emerging two sorted linked (LeetCode 21)\u003c/a\u003e lists into a single sorted list is a classic algorithmic challenge often encountered in software engineering interviews. This task tests one's understanding of linked list data structures, pointer manipulation, and algorithm efficiency.\u003c/p\u003e\n\n\u003cp\u003eImagine you're given two lists: \u003ccode\u003elist1 = [1,2,4]\u003c/code\u003e and \u003ccode\u003elist2 = [1,3,4]\u003c/code\u003e. Your goal is to merge these lists into one sorted list, resulting in \u003ccode\u003e[1,1,2,3,4,4]\u003c/code\u003e. This seemingly straightforward task can reveal deep insights into an engineer's problem-solving skills.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"problem-solving-strategy\" href=\"#problem-solving-strategy\"\u003e\n  \u003c/a\u003e\n  Problem Solving Strategy\n\u003c/h2\u003e\n\n\u003cp\u003eTo tackle this problem:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003eWe start with a dummy node to simplify edge cases and maintain a current pointer to build the new list.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eWe compare the values of nodes from both lists, appending the smaller one to the current node, and moving the pointer of the appended list forward. This process continues until we reach the end of one or both lists.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eIf one list is exhausted before the other, we link the remainder of the non-exhausted list to the end of the merged list. This ensures that all elements are included.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThe time complexity of this algorithm is O(n + m), where n and m are the lengths of the two lists, as each element is visited exactly once.\u003c/p\u003e\n\n\u003cp\u003eThe space complexity is O(1), as we only allocate a few pointers regardless of the input size.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"python-solution\" href=\"#python-solution\"\u003e\n  \u003c/a\u003e\n  Python Solution\n\u003c/h2\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eclass ListNode: def __init__ (self, val=0, next=None): self.val = val self.next = nextclass Solution: def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -\u0026gt; Optional[ListNode]: # Create a dummy node to act as the starting point head = cur = ListNode(0) # Traverse both lists while list1 and list2: # Link the smaller value to 'cur' and advance if list1.val \u0026lt; list2.val: cur.next = list1 list1 = list1.next else: cur.next = list2 list2 = list2.next cur = cur.next # Attach any remaining elements cur.next = list1 or list2 # Return the merged list, skipping the dummy node return head.next\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"typescript-solution\" href=\"#typescript-solution\"\u003e\n  \u003c/a\u003e\n  TypeScript Solution\n\u003c/h2\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eclass ListNode { val: number; next: ListNode | null; constructor(val?: number, next?: ListNode | null) { this.val = (val===undefined ? 0 : val); this.next = (next===undefined ? null : next); }}function mergeTwoLists(list1: ListNode | null, list2: ListNode | null): ListNode | null { let cur = new ListNode(0); const head = cur; while (list1 \u0026amp;\u0026amp; list2) { if (list1.val \u0026lt; list2.val) { cur.next = list1; list1 = list1.next; } else { cur.next = list2; list2 = list2.next; } cur = cur.next; } cur.next = list1 || list2; return head.next;}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"java-solution\" href=\"#java-solution\"\u003e\n  \u003c/a\u003e\n  Java Solution\n\u003c/h2\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003epublic class ListNode { int val; ListNode next; ListNode() {} ListNode(int val) { this.val = val; } ListNode(int val, ListNode next) { this.val = val; this.next = next; }}public class Solution { public ListNode mergeTwoLists(ListNode list1, ListNode list2) { ListNode head = new ListNode(0); ListNode cur = head; while (list1 != null \u0026amp;\u0026amp; list2 != null) { if (list1.val \u0026lt; list2.val) { cur.next = list1; list1 = list1.next; } else { cur.next = list2; list2 = list2.next; } cur = cur.next; } cur.next = (list1 != null) ? list1 : list2; return head.next; }}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eMerging two sorted lists is an essential problem that showcases the importance of understanding data structures and algorithmic strategies.\u003c/p\u003e\n\n\u003cp\u003eRemember, the key to excelling in coding interviews is practice, understanding the underlying principles, and adapting to various problem-solving scenarios.\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"mastering-leetcode-merge-two-sorted-lists-5c3k-temp-slug-3381132","social_image":null,"title":"Mastering LeetCode: Merge Two Sorted Lists","video":null,"video_code":null},{"created_at":"2024-02-29T23:27:33.925Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/cracking-the-code-mastering-anagram-detection-in-technical-interviews","feed_source_url":"https://blog.seancoughlin.me/cracking-the-code-mastering-anagram-detection-in-technical-interviews","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Cracking the Code: Mastering Anagram Detection in Technical Interviews\npublished: false\ndate: 2024-02-29 19:31:24 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/cracking-the-code-mastering-anagram-detection-in-technical-interviews\n---\n\nHello there! Today, I'm excited to guide you through a popular problem that many encounter on LeetCode: determining if one string is an anagram of another. This challenge, known as the [Valid Anagram (LeetCode 242) problem](https://leetcode.com/problems/valid-anagram/description/), is a fantastic test of your understanding of strings and hash tables.\n\nAnagrams are words or phrases formed by rearranging the letters of a different word or phrase, using all the original letters exactly once. For instance, \"listen\" and \"silent\" are anagrams of each other.\n\nThis task might seem straightforward at first glance, but it offers a great opportunity to explore efficient algorithms and coding techniques across different programming languages. Whether you're preparing for software engineering interviews or just looking to sharpen your coding skills, mastering this problem will boost your confidence and competency.\n\nSo, let's dive into how we can solve this intriguing problem, analyze its complexity, and then implement solutions in Python, TypeScript, and Java. Stick with me, and by the end of this post, you'll be well-equipped to tackle anagram detection and similar challenges on LeetCode and beyond!\n\n## Introduction to the Problem\n\nConsider the scenario where you're given two strings, `s` and `t`, and your goal is to discern whether `t` is an anagram of `s`.\n\nAn anagram, as defined, is a word or phrase that's formed by rearranging the letters of another, using all the original letters exactly once.\n\nFor instance, \"anagram\" and \"nagaram\" are anagrams, presenting a scenario where our function would return `true`.\n\nConversely, \"rat\" and \"car\" are not, leading to a `false` outcome.\n\n## Solving the Problem: A Conceptual Overview\n\nAt the heart of solving this problem is understanding how to efficiently compare the two strings to ensure they contain the same characters in any order.\n\nThe simplest approach is to sort both strings and compare them for equality. If they match, one string is indeed an anagram of the other. This method, while straightforward, carries a time complexity of `O(n log n)` due to the sorting operation, where `n` is the length of the string.\n\nHowever, a more optimized solution involves using a fixed-size character count array to track the frequency of each character in both strings. By incrementing the count for each character in `s` and decrementing for each character in `t`, we ensure that if all counts return to zero, the strings are anagrams. This approach boasts a time complexity of `O(n)`, with n being the length of the strings, significantly reducing the computational cost for larger strings.\n\n## The Solution in Python\n\nSince this approach uses sorting it would be runtime `O(n log n)` where `n` is the length of the longer string.\n\n```\nclass Solution: def isAnagram(self, s: str, t: str) -\u003e bool: # Sort both strings and compare s_sorted = sorted(s) t_sorted = sorted(t) # If sorted strings are equal, they are anagrams return s_sorted == t_sorted\n```\n\n## The Solution in TypeScript\n\nSince this approach uses sorting it would be runtime `O(n log n)` where `n` is the length of the longer string.\n\n```\nfunction isAnagram(s: string, t: string): boolean { // Convert strings to sorted arrays and then back to strings to compare return s.split(\"\").sort().join(\"\") === t.split(\"\").sort().join(\"\");};\n```\n\n## The Solution in Java\n\nThis solution does not use sorting therefore it has a runtime of `O( n )`. It allocates an array but the array is fixed to the length of the alphabet so the space complexity is `O(1)`.\n\n```\npublic class Solution { public boolean isAnagram(String s, String t) { // Create an array to count character occurrences int[] alphabet = new int[26]; // Increment count for each char in s for (int i = 0; i \u003c s.length(); i++) alphabet[s.charAt(i) - 'a']++; // Decrement count for each char in t for (int i = 0; i \u003c t.length(); i++) alphabet[t.charAt(i) - 'a']--; // If any count is not zero, strings are not anagrams for (int i : alphabet) if (i != 0) return false; return true; }}\n```\n\n## Conclusion\n\nTackling the anagram challenge not only hones your ability to manipulate strings and understand sorting algorithms but also improves your proficiency in applying efficient data structures.\n\nAs you prepare for your next technical interview, consider this problem as a stepping stone towards mastering the intricacies of algorithmic challenges. Remember, the key to excelling in software engineering interviews lies not just in solving problems but in solving them efficiently.","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Hello there! Today, I'm excited to guide you through a popular problem that many encounter on...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/cracking-the-code-mastering-anagram-detection-in-technical-interviews-4o16-temp-slug-5112784","public_reactions_count":0,"processed_html":"\u003cp\u003eHello there! Today, I'm excited to guide you through a popular problem that many encounter on LeetCode: determining if one string is an anagram of another. This challenge, known as the \u003ca href=\"https://leetcode.com/problems/valid-anagram/description/\"\u003eValid Anagram (LeetCode 242) problem\u003c/a\u003e, is a fantastic test of your understanding of strings and hash tables.\u003c/p\u003e\n\n\u003cp\u003eAnagrams are words or phrases formed by rearranging the letters of a different word or phrase, using all the original letters exactly once. For instance, \"listen\" and \"silent\" are anagrams of each other.\u003c/p\u003e\n\n\u003cp\u003eThis task might seem straightforward at first glance, but it offers a great opportunity to explore efficient algorithms and coding techniques across different programming languages. Whether you're preparing for software engineering interviews or just looking to sharpen your coding skills, mastering this problem will boost your confidence and competency.\u003c/p\u003e\n\n\u003cp\u003eSo, let's dive into how we can solve this intriguing problem, analyze its complexity, and then implement solutions in Python, TypeScript, and Java. Stick with me, and by the end of this post, you'll be well-equipped to tackle anagram detection and similar challenges on LeetCode and beyond!\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"introduction-to-the-problem\" href=\"#introduction-to-the-problem\"\u003e\n  \u003c/a\u003e\n  Introduction to the Problem\n\u003c/h2\u003e\n\n\u003cp\u003eConsider the scenario where you're given two strings, \u003ccode\u003es\u003c/code\u003e and \u003ccode\u003et\u003c/code\u003e, and your goal is to discern whether \u003ccode\u003et\u003c/code\u003e is an anagram of \u003ccode\u003es\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eAn anagram, as defined, is a word or phrase that's formed by rearranging the letters of another, using all the original letters exactly once.\u003c/p\u003e\n\n\u003cp\u003eFor instance, \"anagram\" and \"nagaram\" are anagrams, presenting a scenario where our function would return \u003ccode\u003etrue\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eConversely, \"rat\" and \"car\" are not, leading to a \u003ccode\u003efalse\u003c/code\u003e outcome.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"solving-the-problem-a-conceptual-overview\" href=\"#solving-the-problem-a-conceptual-overview\"\u003e\n  \u003c/a\u003e\n  Solving the Problem: A Conceptual Overview\n\u003c/h2\u003e\n\n\u003cp\u003eAt the heart of solving this problem is understanding how to efficiently compare the two strings to ensure they contain the same characters in any order.\u003c/p\u003e\n\n\u003cp\u003eThe simplest approach is to sort both strings and compare them for equality. If they match, one string is indeed an anagram of the other. This method, while straightforward, carries a time complexity of \u003ccode\u003eO(n log n)\u003c/code\u003e due to the sorting operation, where \u003ccode\u003en\u003c/code\u003e is the length of the string.\u003c/p\u003e\n\n\u003cp\u003eHowever, a more optimized solution involves using a fixed-size character count array to track the frequency of each character in both strings. By incrementing the count for each character in \u003ccode\u003es\u003c/code\u003e and decrementing for each character in \u003ccode\u003et\u003c/code\u003e, we ensure that if all counts return to zero, the strings are anagrams. This approach boasts a time complexity of \u003ccode\u003eO(n)\u003c/code\u003e, with n being the length of the strings, significantly reducing the computational cost for larger strings.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"the-solution-in-python\" href=\"#the-solution-in-python\"\u003e\n  \u003c/a\u003e\n  The Solution in Python\n\u003c/h2\u003e\n\n\u003cp\u003eSince this approach uses sorting it would be runtime \u003ccode\u003eO(n log n)\u003c/code\u003e where \u003ccode\u003en\u003c/code\u003e is the length of the longer string.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eclass Solution: def isAnagram(self, s: str, t: str) -\u0026gt; bool: # Sort both strings and compare s_sorted = sorted(s) t_sorted = sorted(t) # If sorted strings are equal, they are anagrams return s_sorted == t_sorted\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"the-solution-in-typescript\" href=\"#the-solution-in-typescript\"\u003e\n  \u003c/a\u003e\n  The Solution in TypeScript\n\u003c/h2\u003e\n\n\u003cp\u003eSince this approach uses sorting it would be runtime \u003ccode\u003eO(n log n)\u003c/code\u003e where \u003ccode\u003en\u003c/code\u003e is the length of the longer string.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003efunction isAnagram(s: string, t: string): boolean { // Convert strings to sorted arrays and then back to strings to compare return s.split(\"\").sort().join(\"\") === t.split(\"\").sort().join(\"\");};\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"the-solution-in-java\" href=\"#the-solution-in-java\"\u003e\n  \u003c/a\u003e\n  The Solution in Java\n\u003c/h2\u003e\n\n\u003cp\u003eThis solution does not use sorting therefore it has a runtime of \u003ccode\u003eO( n )\u003c/code\u003e. It allocates an array but the array is fixed to the length of the alphabet so the space complexity is \u003ccode\u003eO(1)\u003c/code\u003e.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003epublic class Solution { public boolean isAnagram(String s, String t) { // Create an array to count character occurrences int[] alphabet = new int[26]; // Increment count for each char in s for (int i = 0; i \u0026lt; s.length(); i++) alphabet[s.charAt(i) - 'a']++; // Decrement count for each char in t for (int i = 0; i \u0026lt; t.length(); i++) alphabet[t.charAt(i) - 'a']--; // If any count is not zero, strings are not anagrams for (int i : alphabet) if (i != 0) return false; return true; }}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eTackling the anagram challenge not only hones your ability to manipulate strings and understand sorting algorithms but also improves your proficiency in applying efficient data structures.\u003c/p\u003e\n\n\u003cp\u003eAs you prepare for your next technical interview, consider this problem as a stepping stone towards mastering the intricacies of algorithmic challenges. Remember, the key to excelling in software engineering interviews lies not just in solving problems but in solving them efficiently.\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"cracking-the-code-mastering-anagram-detection-in-technical-interviews-4o16-temp-slug-5112784","social_image":null,"title":"Cracking the Code: Mastering Anagram Detection in Technical Interviews","video":null,"video_code":null},{"created_at":"2024-02-29T23:27:34.368Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/mastering-the-mirror-a-deep-dive-into-inverting-binary-trees-for-leetcode-success","feed_source_url":"https://blog.seancoughlin.me/mastering-the-mirror-a-deep-dive-into-inverting-binary-trees-for-leetcode-success","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Mastering the Mirror: A Deep Dive into Inverting Binary Trees for LeetCode Success\npublished: false\ndate: 2024-02-29 20:25:52 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/mastering-the-mirror-a-deep-dive-into-inverting-binary-trees-for-leetcode-success\n---\n\nToday, I dive into a common yet intriguing problem often encountered on platforms like LeetCode: [inverting a binary tree (LeetCode 226)](https://leetcode.com/problems/invert-binary-tree/description/). This challenge not only tests your grasp of binary trees but also your ability to think recursively and iteratively.\n\nLet's embark on this journey together, exploring the depths of the problem and unveiling solutions across three major programming languages.\n\n* * *\n\n## Introduction to the Problem\n\nImagine a binary tree where each node has up to two children. Inverting this tree means swapping every left child with its right child, all the way down the tree. It's akin to creating a mirror image of the tree across its central axis. For instance, if our original tree is visually represented as:\n\n```\n     10 / \\ 2 7 / \\ / \\1 3 6 9\n```\n\nAfter inversion, it would transform into:\n\n```\n     10 / \\ 7 2 / \\ / \\9 6 3 1\n```\n\nSuch a transformation requires a systematic approach to traverse and swap the children of each node.\n\n* * *\n\n## Solving the Problem\n\nTo invert a binary tree, we can employ either recursion or iteration. The recursive approach involves a simple but elegant strategy: for each node, we swap its left and right children, then proceed to recursively invert the left and right subtrees. The base case for our recursion is when we encounter a null node, at which point we simply return without performing any inversion.\n\nIn terms of **Big O notation** , the time complexity of this algorithm is O(n), where n is the number of nodes in the tree. This is because we must visit each node exactly once to swap its children. The space complexity is O(h), where h is the height of the tree, accounting for the stack space used by recursion. In the worst case (a completely unbalanced tree), this could be O(n), but it's generally much less.\n\nThe iteration approach uses a queue data structure and is also O(n) runtime.\n\n* * *\n\n## Solution in Python\n\n```\nclass Solution: def invertTree(self, root: Optional[TreeNode]) -\u003e Optional[TreeNode]: # Base case: if the tree is empty, return immediately if root is None: return None # Swap the left and right children temp = root.left root.left = root.right root.right = temp # Recursively invert the left and right subtrees self.invertTree(root.left) self.invertTree(root.right) return root\n```\n\n* * *\n\n## Solution in TypeScript\n\n```\nfunction invertTree(root: TreeNode | null): TreeNode | null { // Base case: if the tree is empty, do nothing if (root === null) { return null; } // Swap the left and right children const temp = root.left; root.left = root.right; root.right = temp; // Recursively invert the left and right subtrees invertTree(root.left); invertTree(root.right); return root;};\n```\n\n* * *\n\n## Solution in Java\n\n_With Recursion:_\n\n```\nclass Solution { public TreeNode invertTree(TreeNode root) { if (root == null) { return root; } // Recursively invert the subtrees invertTree(root.left); invertTree(root.right); // Swap the left and right children TreeNode temp = root.left; root.left = root.right; root.right = temp; return root; }}\n```\n\n_Without Recursion (Iterative):_\n\n```\nclass Solution { public TreeNode invertTree(TreeNode root) { Queue\u003cTreeNode\u003e queue = new LinkedList\u003c\u003e(); if (root != null) { queue.add(root); } while (!queue.isEmpty()) { TreeNode current = queue.poll(); // Swap the children TreeNode temp = current.left; current.left = current.right; current.right = temp; // Add children to the queue for later processing if (current.left != null) queue.add(current.left); if (current.right != null) queue.add(current.right); } return root; }}\n```\n\n* * *\n\n## Conclusion\n\nInverting a binary tree, while seemingly straightforward, encompasses critical concepts in tree manipulation and traversal techniques. Whether you prefer the elegance of recursion or the hands-on approach of iteration, mastering this problem will sharpen your problem-solving skills and prepare you for the challenges of software engineering interviews.\n\nAs you continue on your journey, remember that the beauty of coding lies not just in solving problems, but in crafting solutions that are both efficient and understandable.\n\nHappy coding, and may your trees always be perfectly mirrored!","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Today, I dive into a common yet intriguing problem often encountered on platforms like LeetCode:...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/mastering-the-mirror-a-deep-dive-into-inverting-binary-trees-for-leetcode-success-248d-temp-slug-5505555","public_reactions_count":0,"processed_html":"\u003cp\u003eToday, I dive into a common yet intriguing problem often encountered on platforms like LeetCode: \u003ca href=\"https://leetcode.com/problems/invert-binary-tree/description/\"\u003einverting a binary tree (LeetCode 226)\u003c/a\u003e. This challenge not only tests your grasp of binary trees but also your ability to think recursively and iteratively.\u003c/p\u003e\n\n\u003cp\u003eLet's embark on this journey together, exploring the depths of the problem and unveiling solutions across three major programming languages.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"introduction-to-the-problem\" href=\"#introduction-to-the-problem\"\u003e\n  \u003c/a\u003e\n  Introduction to the Problem\n\u003c/h2\u003e\n\n\u003cp\u003eImagine a binary tree where each node has up to two children. Inverting this tree means swapping every left child with its right child, all the way down the tree. It's akin to creating a mirror image of the tree across its central axis. For instance, if our original tree is visually represented as:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e     10 / \\ 2 7 / \\ / \\1 3 6 9\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eAfter inversion, it would transform into:\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e     10 / \\ 7 2 / \\ / \\9 6 3 1\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eSuch a transformation requires a systematic approach to traverse and swap the children of each node.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"solving-the-problem\" href=\"#solving-the-problem\"\u003e\n  \u003c/a\u003e\n  Solving the Problem\n\u003c/h2\u003e\n\n\u003cp\u003eTo invert a binary tree, we can employ either recursion or iteration. The recursive approach involves a simple but elegant strategy: for each node, we swap its left and right children, then proceed to recursively invert the left and right subtrees. The base case for our recursion is when we encounter a null node, at which point we simply return without performing any inversion.\u003c/p\u003e\n\n\u003cp\u003eIn terms of \u003cstrong\u003eBig O notation\u003c/strong\u003e , the time complexity of this algorithm is O(n), where n is the number of nodes in the tree. This is because we must visit each node exactly once to swap its children. The space complexity is O(h), where h is the height of the tree, accounting for the stack space used by recursion. In the worst case (a completely unbalanced tree), this could be O(n), but it's generally much less.\u003c/p\u003e\n\n\u003cp\u003eThe iteration approach uses a queue data structure and is also O(n) runtime.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"solution-in-python\" href=\"#solution-in-python\"\u003e\n  \u003c/a\u003e\n  Solution in Python\n\u003c/h2\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eclass Solution: def invertTree(self, root: Optional[TreeNode]) -\u0026gt; Optional[TreeNode]: # Base case: if the tree is empty, return immediately if root is None: return None # Swap the left and right children temp = root.left root.left = root.right root.right = temp # Recursively invert the left and right subtrees self.invertTree(root.left) self.invertTree(root.right) return root\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\n\u003chr\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"solution-in-typescript\" href=\"#solution-in-typescript\"\u003e\n  \u003c/a\u003e\n  Solution in TypeScript\n\u003c/h2\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003efunction invertTree(root: TreeNode | null): TreeNode | null { // Base case: if the tree is empty, do nothing if (root === null) { return null; } // Swap the left and right children const temp = root.left; root.left = root.right; root.right = temp; // Recursively invert the left and right subtrees invertTree(root.left); invertTree(root.right); return root;};\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\n\u003chr\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"solution-in-java\" href=\"#solution-in-java\"\u003e\n  \u003c/a\u003e\n  Solution in Java\n\u003c/h2\u003e\n\n\u003cp\u003e\u003cem\u003eWith Recursion:\u003c/em\u003e\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eclass Solution { public TreeNode invertTree(TreeNode root) { if (root == null) { return root; } // Recursively invert the subtrees invertTree(root.left); invertTree(root.right); // Swap the left and right children TreeNode temp = root.left; root.left = root.right; root.right = temp; return root; }}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003e\u003cem\u003eWithout Recursion (Iterative):\u003c/em\u003e\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eclass Solution { public TreeNode invertTree(TreeNode root) { Queue\u0026lt;TreeNode\u0026gt; queue = new LinkedList\u0026lt;\u0026gt;(); if (root != null) { queue.add(root); } while (!queue.isEmpty()) { TreeNode current = queue.poll(); // Swap the children TreeNode temp = current.left; current.left = current.right; current.right = temp; // Add children to the queue for later processing if (current.left != null) queue.add(current.left); if (current.right != null) queue.add(current.right); } return root; }}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\n\u003chr\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eInverting a binary tree, while seemingly straightforward, encompasses critical concepts in tree manipulation and traversal techniques. Whether you prefer the elegance of recursion or the hands-on approach of iteration, mastering this problem will sharpen your problem-solving skills and prepare you for the challenges of software engineering interviews.\u003c/p\u003e\n\n\u003cp\u003eAs you continue on your journey, remember that the beauty of coding lies not just in solving problems, but in crafting solutions that are both efficient and understandable.\u003c/p\u003e\n\n\u003cp\u003eHappy coding, and may your trees always be perfectly mirrored!\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"mastering-the-mirror-a-deep-dive-into-inverting-binary-trees-for-leetcode-success-248d-temp-slug-5505555","social_image":null,"title":"Mastering the Mirror: A Deep Dive into Inverting Binary Trees for LeetCode Success","video":null,"video_code":null},{"created_at":"2024-03-01T04:21:03.022Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/understanding-tokenization-in-large-language-models","feed_source_url":"https://blog.seancoughlin.me/understanding-tokenization-in-large-language-models","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Understanding Tokenization in Large Language Models\npublished: false\ndate: 2024-03-01 01:10:38 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/understanding-tokenization-in-large-language-models\n---\n\n# Understanding Tokenization in Large Language Models\n\nIn the rapidly evolving landscape of artificial intelligence, the concept of tokenization plays a pivotal role, especially when it comes to understanding and generating human language.\n\nAs we delve into the intricacies of large language models (LLMs) like OpenAI's GPT series, it becomes essential to grasp what tokens are, how they are created, and their significance in the realm of [natural language processing (NLP)](https://en.wikipedia.org/wiki/Natural_language_processing).\n\n## What is Tokenization?\n\nAt its core, tokenization is the process of breaking down text into smaller pieces, known as tokens. These tokens can be words, parts of words, or even punctuation marks. However, tokenization in the context of LLMs is not as straightforward as splitting text at spaces or punctuation. Tokens can include trailing spaces, sub-words, or even multiple words, depending on the language and the specific implementation of the tokenizer.\n\n### Tokens: The Building Blocks of Language Understanding\n\nTokens serve as the fundamental building blocks that allow LLMs to process and understand text. By converting text into a sequence of tokens, these models can analyze and generate language in a structured manner. This token-based approach enables the models to capture the nuances of language, including grammar, syntax, and semantics.\n\n[![An example tokenization](https://cdn.hashnode.com/res/hashnode/image/upload/v1709255005244/5215953a-9ded-4ac1-ace8-4934c0aca2ed.png)](https://platform.openai.com/tokenizer)\n\n## How Does Tokenization Work?\n\nThe process of tokenization varies between models, but many LLMs, including the latest versions like GPT-3.5 and GPT-4, utilize a modified version of [byte-pair encoding (BPE)](https://en.wikipedia.org/wiki/Byte_pair_encoding). This method starts with the most basic elementsindividual charactersand progressively merges the most frequently occurring adjacent characters or sequences into single tokens. This approach allows the model to efficiently handle a vast range of language phenomena, from common words to rare terms, idioms, and even emojis.\n\n### The Role of Tokens in Language Models\n\nTokens are not just placeholders for words; they are the lens through which LLMs view the text. Each token is associated with a vector that represents its meaning and context within the language model's training data. When processing or generating text, the model manipulates these vectors to produce coherent, contextually appropriate language.\n\n## The Importance of Tokenization\n\nTokenization is critical for several reasons:\n\n- **Efficiency:** It allows models to process large texts more efficiently by breaking them down into manageable pieces.\n\n- **Flexibility:** Tokenization enables LLMs to handle a wide variety of languages and linguistic phenomena, including morphologically rich languages where the relationship between words and their meanings is complex.\n\n- **Scalability:** By standardizing the input and output of the model into tokens, developers can design systems that scale to different languages and domains without extensive modifications.\n\n## Practical Implications\n\nUnderstanding tokenization and its implications can greatly influence how we interact with and implement LLMs. For instance, the token limit in models like GPT-4 affects how much text can be processed or generated in a single request. This constraint necessitates creative problem-solving, such as condensing prompts or breaking down tasks into smaller chunks.\n\nMoreover, the tokenization process's language dependence highlights the need for careful consideration when deploying LLMs in multilingual contexts. Languages with a higher token-to-character ratio may require more tokens to express the same amount of information, impacting the cost and feasibility of using LLMs for those languages.\n\n\u003e How words are split into tokens is also language-dependent. For example Cmo ests (_How are you_ in Spanish) contains 5 tokens (for 10 chars). The higher token-to-char ratio can make it more expensive to implement the API for languages other than English.\n\u003e \n\u003e - OpenAI\n\n## Conclusion\n\nTokenization is a foundational concept in the world of large language models, underpinning the remarkable capabilities of AI to understand and generate human language. As we continue to explore and expand the boundaries of what AI can achieve, a deep understanding of tokenization will remain crucial for anyone working in the field of artificial intelligence and natural language processing.\n\nWhether you're developing new applications, optimizing existing systems, or simply curious about how AI understands language, the journey begins with tokens.\n\n## Sources and Where to Learn More\n\n- [What are tokens and how to count them?](https://help.openai.com/en/articles/4936856-what-are-tokens-and-how-to-count-them)\n\n- [OpenAI Tokenizer](https://platform.openai.com/tokenizer)\n\n- [Probabilistic tokenization (wikipedia)](https://en.wikipedia.org/wiki/Large_language_model#Dataset_preprocessing)","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Understanding Tokenization in Large Language Models   In the rapidly evolving landscape of...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/understanding-tokenization-in-large-language-models-flb-temp-slug-9844769","public_reactions_count":0,"processed_html":"\u003ch1\u003e\n  \u003ca name=\"understanding-tokenization-in-large-language-models\" href=\"#understanding-tokenization-in-large-language-models\"\u003e\n  \u003c/a\u003e\n  Understanding Tokenization in Large Language Models\n\u003c/h1\u003e\n\n\u003cp\u003eIn the rapidly evolving landscape of artificial intelligence, the concept of tokenization plays a pivotal role, especially when it comes to understanding and generating human language.\u003c/p\u003e\n\n\u003cp\u003eAs we delve into the intricacies of large language models (LLMs) like OpenAI's GPT series, it becomes essential to grasp what tokens are, how they are created, and their significance in the realm of \u003ca href=\"https://en.wikipedia.org/wiki/Natural_language_processing\"\u003enatural language processing (NLP)\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what-is-tokenization\" href=\"#what-is-tokenization\"\u003e\n  \u003c/a\u003e\n  What is Tokenization?\n\u003c/h2\u003e\n\n\u003cp\u003eAt its core, tokenization is the process of breaking down text into smaller pieces, known as tokens. These tokens can be words, parts of words, or even punctuation marks. However, tokenization in the context of LLMs is not as straightforward as splitting text at spaces or punctuation. Tokens can include trailing spaces, sub-words, or even multiple words, depending on the language and the specific implementation of the tokenizer.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"tokens-the-building-blocks-of-language-understanding\" href=\"#tokens-the-building-blocks-of-language-understanding\"\u003e\n  \u003c/a\u003e\n  Tokens: The Building Blocks of Language Understanding\n\u003c/h3\u003e\n\n\u003cp\u003eTokens serve as the fundamental building blocks that allow LLMs to process and understand text. By converting text into a sequence of tokens, these models can analyze and generate language in a structured manner. This token-based approach enables the models to capture the nuances of language, including grammar, syntax, and semantics.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://platform.openai.com/tokenizer\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--WNcQAPln--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://cdn.hashnode.com/res/hashnode/image/upload/v1709255005244/5215953a-9ded-4ac1-ace8-4934c0aca2ed.png\" alt=\"An example tokenization\" loading=\"lazy\" width=\"800\" height=\"658\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"how-does-tokenization-work\" href=\"#how-does-tokenization-work\"\u003e\n  \u003c/a\u003e\n  How Does Tokenization Work?\n\u003c/h2\u003e\n\n\u003cp\u003eThe process of tokenization varies between models, but many LLMs, including the latest versions like GPT-3.5 and GPT-4, utilize a modified version of \u003ca href=\"https://en.wikipedia.org/wiki/Byte_pair_encoding\"\u003ebyte-pair encoding (BPE)\u003c/a\u003e. This method starts with the most basic elementsindividual charactersand progressively merges the most frequently occurring adjacent characters or sequences into single tokens. This approach allows the model to efficiently handle a vast range of language phenomena, from common words to rare terms, idioms, and even emojis.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"the-role-of-tokens-in-language-models\" href=\"#the-role-of-tokens-in-language-models\"\u003e\n  \u003c/a\u003e\n  The Role of Tokens in Language Models\n\u003c/h3\u003e\n\n\u003cp\u003eTokens are not just placeholders for words; they are the lens through which LLMs view the text. Each token is associated with a vector that represents its meaning and context within the language model's training data. When processing or generating text, the model manipulates these vectors to produce coherent, contextually appropriate language.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"the-importance-of-tokenization\" href=\"#the-importance-of-tokenization\"\u003e\n  \u003c/a\u003e\n  The Importance of Tokenization\n\u003c/h2\u003e\n\n\u003cp\u003eTokenization is critical for several reasons:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eEfficiency:\u003c/strong\u003e It allows models to process large texts more efficiently by breaking them down into manageable pieces.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eFlexibility:\u003c/strong\u003e Tokenization enables LLMs to handle a wide variety of languages and linguistic phenomena, including morphologically rich languages where the relationship between words and their meanings is complex.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eScalability:\u003c/strong\u003e By standardizing the input and output of the model into tokens, developers can design systems that scale to different languages and domains without extensive modifications.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"practical-implications\" href=\"#practical-implications\"\u003e\n  \u003c/a\u003e\n  Practical Implications\n\u003c/h2\u003e\n\n\u003cp\u003eUnderstanding tokenization and its implications can greatly influence how we interact with and implement LLMs. For instance, the token limit in models like GPT-4 affects how much text can be processed or generated in a single request. This constraint necessitates creative problem-solving, such as condensing prompts or breaking down tasks into smaller chunks.\u003c/p\u003e\n\n\u003cp\u003eMoreover, the tokenization process's language dependence highlights the need for careful consideration when deploying LLMs in multilingual contexts. Languages with a higher token-to-character ratio may require more tokens to express the same amount of information, impacting the cost and feasibility of using LLMs for those languages.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eHow words are split into tokens is also language-dependent. For example Cmo ests (\u003cem\u003eHow are you\u003c/em\u003e in Spanish) contains 5 tokens (for 10 chars). The higher token-to-char ratio can make it more expensive to implement the API for languages other than English.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eOpenAI\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eTokenization is a foundational concept in the world of large language models, underpinning the remarkable capabilities of AI to understand and generate human language. As we continue to explore and expand the boundaries of what AI can achieve, a deep understanding of tokenization will remain crucial for anyone working in the field of artificial intelligence and natural language processing.\u003c/p\u003e\n\n\u003cp\u003eWhether you're developing new applications, optimizing existing systems, or simply curious about how AI understands language, the journey begins with tokens.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"sources-and-where-to-learn-more\" href=\"#sources-and-where-to-learn-more\"\u003e\n  \u003c/a\u003e\n  Sources and Where to Learn More\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://help.openai.com/en/articles/4936856-what-are-tokens-and-how-to-count-them\"\u003eWhat are tokens and how to count them?\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://platform.openai.com/tokenizer\"\u003eOpenAI Tokenizer\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Large_language_model#Dataset_preprocessing\"\u003eProbabilistic tokenization (wikipedia)\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"understanding-tokenization-in-large-language-models-flb-temp-slug-9844769","social_image":null,"title":"Understanding Tokenization in Large Language Models","video":null,"video_code":null},{"created_at":"2024-03-07T20:21:00.290Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/mastering-leetcodes-palindrome-challenge-a-guide-for-engineering-interviews","feed_source_url":"https://blog.seancoughlin.me/mastering-leetcodes-palindrome-challenge-a-guide-for-engineering-interviews","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Mastering LeetCode's Palindrome Challenge: A Guide for Engineering Interviews\npublished: false\ndate: 2024-03-07 19:13:35 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/mastering-leetcodes-palindrome-challenge-a-guide-for-engineering-interviews\n---\n\nIn the realm of software engineering interviews, the ability to dissect and conquer algorithmic challenges is paramount.\n\nToday, I'm delving into a classic yet intriguing problem often encountered on platforms like LeetCode: determining whether a given string is a palindrome, considering only alphanumeric characters and disregarding cases. This problem not only tests your string manipulation skills but also your ability to apply efficient solutions under constraints.\n\nThis is [LeetCode problem 125: Valid Palindrome](https://leetcode.com/problems/valid-palindrome/description/).\n\n## Introduction to the Palindrome Problem\n\nA palindrome is a word, phrase, number, or other sequences of characters that reads the same forward and backward, ignoring punctuation, case, and spaces. For instance, \"A man, a plan, a canal: Panama\" is a palindrome because, if we filter out non-alphanumeric characters and ignore case, it reads 'amanaplanacanalpanama', which is the same forwards and backwards.\n\nThe challenge lies in efficiently processing the string to ignore non-relevant characters and case differences, providing a solution that's both elegant and optimal in terms of time and space complexity.\n\n## Strategy for Solution and Complexity Analysis\n\nThe core approach to solving this problem involves two steps: normalization and comparison.\n\n- **Normalization** : Convert all characters to the same case (lowercase or uppercase) and remove non-alphanumeric characters.\n\n- **Comparison** : Check if the normalized string reads the same forward and backward.\n\n**Big O Notation Analysis** : The time complexity for the normalization process depends on the length of the string, making it O(n). The comparison, whether we use a two-pointer approach or compare against a reversed string, also operates in O(n) time. Thus, the overall time complexity remains O(n). Space complexity is O(n) as well, due to the additional storage needed for the normalized string.\n\n## Python Solutions\n\n### **Two-Pointer Approach**\n\n```\ndef isPalindrome(s: str) -\u003e bool: def alphaNum(c): return c.isalnum() # Normalize: lowercase and filter out non-alphanumeric characters filtered = ''.join(filter(alphaNum, s.lower())) # Two-pointer comparison left, right = 0, len(filtered) - 1 while left \u003c right: if filtered[left] != filtered[right]: return False left, right = left + 1, right - 1 return True\n```\n\n### **Functional Approach**\n\n```\ndef isPalindrome(s: str) -\u003e bool: # Normalize: lowercase and remove non-alphanumeric characters normalized = ''.join(c.lower() for c in s if c.isalnum()) # Check palindrome using string reverse return normalized == normalized[::-1]\n```\n\n## TypeScript Solution\n\n```\nfunction isPalindrome(s: string): boolean { // Normalize: lowercase and remove non-alphanumeric characters const normalized = s.toLowerCase().replace(/[^a-z0-9]/g, ''); // Check if palindrome return normalized === normalized.split('').reverse().join('');}\n```\n\n## Java Solution\n\n```\npublic class Solution { public boolean isPalindrome(String s) { // Normalize: lowercase and remove non-alphanumeric characters String normalized = s.toLowerCase().replaceAll(\"[^a-z0-9]\", \"\"); // Check if palindrome return normalized.equals(new StringBuilder(normalized).reverse().toString()); }}\n```\n\n## Conclusion\n\nTackling the palindrome problem showcases the importance of string manipulation techniques and efficient problem-solving strategies in software engineering interviews.\n\nWhether you choose Python, TypeScript, or Java, the key lies in understanding the problem's nature and applying a suitable approach. Remember, practice and familiarity with these concepts will not only help you ace interview questions but also improve your overall coding prowess.\n\nI hope this guide provides you with a clear roadmap to solving the palindrome challenge and adds a valuable tool to your interview preparation kit. Happy coding, and best of luck on your interview journey!","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"In the realm of software engineering interviews, the ability to dissect and conquer algorithmic...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/mastering-leetcodes-palindrome-challenge-a-guide-for-engineering-interviews-1ahl-temp-slug-2664003","public_reactions_count":0,"processed_html":"\u003cp\u003eIn the realm of software engineering interviews, the ability to dissect and conquer algorithmic challenges is paramount.\u003c/p\u003e\n\n\u003cp\u003eToday, I'm delving into a classic yet intriguing problem often encountered on platforms like LeetCode: determining whether a given string is a palindrome, considering only alphanumeric characters and disregarding cases. This problem not only tests your string manipulation skills but also your ability to apply efficient solutions under constraints.\u003c/p\u003e\n\n\u003cp\u003eThis is \u003ca href=\"https://leetcode.com/problems/valid-palindrome/description/\"\u003eLeetCode problem 125: Valid Palindrome\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"introduction-to-the-palindrome-problem\" href=\"#introduction-to-the-palindrome-problem\"\u003e\n  \u003c/a\u003e\n  Introduction to the Palindrome Problem\n\u003c/h2\u003e\n\n\u003cp\u003eA palindrome is a word, phrase, number, or other sequences of characters that reads the same forward and backward, ignoring punctuation, case, and spaces. For instance, \"A man, a plan, a canal: Panama\" is a palindrome because, if we filter out non-alphanumeric characters and ignore case, it reads 'amanaplanacanalpanama', which is the same forwards and backwards.\u003c/p\u003e\n\n\u003cp\u003eThe challenge lies in efficiently processing the string to ignore non-relevant characters and case differences, providing a solution that's both elegant and optimal in terms of time and space complexity.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"strategy-for-solution-and-complexity-analysis\" href=\"#strategy-for-solution-and-complexity-analysis\"\u003e\n  \u003c/a\u003e\n  Strategy for Solution and Complexity Analysis\n\u003c/h2\u003e\n\n\u003cp\u003eThe core approach to solving this problem involves two steps: normalization and comparison.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eNormalization\u003c/strong\u003e : Convert all characters to the same case (lowercase or uppercase) and remove non-alphanumeric characters.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003cstrong\u003eComparison\u003c/strong\u003e : Check if the normalized string reads the same forward and backward.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003eBig O Notation Analysis\u003c/strong\u003e : The time complexity for the normalization process depends on the length of the string, making it O(n). The comparison, whether we use a two-pointer approach or compare against a reversed string, also operates in O(n) time. Thus, the overall time complexity remains O(n). Space complexity is O(n) as well, due to the additional storage needed for the normalized string.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"python-solutions\" href=\"#python-solutions\"\u003e\n  \u003c/a\u003e\n  Python Solutions\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"twopointer-approach\" href=\"#twopointer-approach\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eTwo-Pointer Approach\u003c/strong\u003e\n\u003c/h3\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003edef isPalindrome(s: str) -\u0026gt; bool: def alphaNum(c): return c.isalnum() # Normalize: lowercase and filter out non-alphanumeric characters filtered = ''.join(filter(alphaNum, s.lower())) # Two-pointer comparison left, right = 0, len(filtered) - 1 while left \u0026lt; right: if filtered[left] != filtered[right]: return False left, right = left + 1, right - 1 return True\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch3\u003e\n  \u003ca name=\"functional-approach\" href=\"#functional-approach\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eFunctional Approach\u003c/strong\u003e\n\u003c/h3\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003edef isPalindrome(s: str) -\u0026gt; bool: # Normalize: lowercase and remove non-alphanumeric characters normalized = ''.join(c.lower() for c in s if c.isalnum()) # Check palindrome using string reverse return normalized == normalized[::-1]\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"typescript-solution\" href=\"#typescript-solution\"\u003e\n  \u003c/a\u003e\n  TypeScript Solution\n\u003c/h2\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003efunction isPalindrome(s: string): boolean { // Normalize: lowercase and remove non-alphanumeric characters const normalized = s.toLowerCase().replace(/[^a-z0-9]/g, ''); // Check if palindrome return normalized === normalized.split('').reverse().join('');}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"java-solution\" href=\"#java-solution\"\u003e\n  \u003c/a\u003e\n  Java Solution\n\u003c/h2\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003epublic class Solution { public boolean isPalindrome(String s) { // Normalize: lowercase and remove non-alphanumeric characters String normalized = s.toLowerCase().replaceAll(\"[^a-z0-9]\", \"\"); // Check if palindrome return normalized.equals(new StringBuilder(normalized).reverse().toString()); }}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eTackling the palindrome problem showcases the importance of string manipulation techniques and efficient problem-solving strategies in software engineering interviews.\u003c/p\u003e\n\n\u003cp\u003eWhether you choose Python, TypeScript, or Java, the key lies in understanding the problem's nature and applying a suitable approach. Remember, practice and familiarity with these concepts will not only help you ace interview questions but also improve your overall coding prowess.\u003c/p\u003e\n\n\u003cp\u003eI hope this guide provides you with a clear roadmap to solving the palindrome challenge and adds a valuable tool to your interview preparation kit. Happy coding, and best of luck on your interview journey!\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"mastering-leetcodes-palindrome-challenge-a-guide-for-engineering-interviews-1ahl-temp-slug-2664003","social_image":null,"title":"Mastering LeetCode's Palindrome Challenge: A Guide for Engineering Interviews","video":null,"video_code":null},{"created_at":"2024-03-07T20:21:00.738Z","crossposted_at":null,"edited_at":null,"last_comment_at":"2017-01-01T05:00:00.000Z","published_at":null,"canonical_url":"https://blog.seancoughlin.me/explaining-ai-few-shot-one-shot-and-zero-shot-learning","feed_source_url":"https://blog.seancoughlin.me/explaining-ai-few-shot-one-shot-and-zero-shot-learning","video_closed_caption_track_url":null,"video_source_url":null,"video_thumbnail_url":null,"body_markdown":"---\ntitle: Explaining AI: Few-Shot, One-Shot, and Zero-Shot Learning\npublished: false\ndate: 2024-03-07 19:46:58 UTC\ntags: \ncanonical_url: https://blog.seancoughlin.me/explaining-ai-few-shot-one-shot-and-zero-shot-learning\n---\n\nToday, we're exploring a fascinating aspect of AI that's making waves across various industries: the ability of models to learn and adapt from limited data. We'll break down the concepts of few-shot, one-shot, and zero-shot learning in a way that's easy to understand, even if you're new to AI.\n\n## Understanding the Basics\n\nImagine you're teaching someone to recognize different types of fruit. If you show them several examples of apples and oranges, they'll likely learn to distinguish between the two. This is similar to how AI models learn, but with a twist.\n\nAI can be designed to learn not just from large datasets but also from a few, one, or even no examples. This capability is especially crucial when data is scarce, expensive, or time-consuming to collect.\n\nLet's dive into the specifics of few-shot, one-shot, and zero-shot learning to understand how AI manages these feats.\n\n### Few-Shot Learning\n\n[Few-shot learning](https://builtin.com/machine-learning/few-shot-learning#) is like teaching a friend to recognize fruits by showing them only a few examples. In the AI world, this means training a model with a very limited dataset. It's incredibly useful when you have some data but not enough to train a conventional model.\n\n**Use Case Example** : Classifying customer feedback as positive, neutral, or negative with only a handful of examples for each category.\n\n```\n1. \"The service was outstanding and the staff was friendly.\" - Positive2. \"Wait times were long, but the food was great.\" - Neutral3. \"I was very disappointed with my meal.\" - Negative4. \"This was the best experience I've had at any restaurant!\" - ?\n```\n\n### One-Shot Learning\n\n[One-shot learning](https://en.wikipedia.org/wiki/One-shot_learning_(computer_vision)) takes this concept further by teaching the model with a single example. It's akin to showing your friend one apple and then expecting them to recognize other apples.\n\n**Use Case Example** : Teaching an AI to translate a sentence from English to French with only one example provided.\n\n```\nTranslate the following sentence to French:Example: \"Hello, how are you?\" - \"Bonjour, comment a va?\"New: \"What time is dinner?\"\n```\n\n### Zero-Shot Learning\n\n[Zero-shot learning](https://en.wikipedia.org/wiki/Zero-shot_learning) is the most abstract concept, where the model learns to perform tasks it has never seen examples of before. Imagine telling your friend what an apple is without showing them any apples, and they still recognize one when they see it.\n\n**Use Case Example** : Asking an AI to classify texts into categories it hasn't been explicitly trained on, such as sorting news articles into \"Sports,\" \"Politics,\" or \"Technology.\"\n\n```\nDetermine if the sentiment of the following text is positive, negative, or neutral: \"I can't believe how amazing this movie was!\"\n```\n\n## Comparing the Three\n\nTo put these concepts into perspective, let's compare them side by side:\n\n| **Learning Type** | **Definition** | **Strengths** | **Best For** |\n| **Few-Shot** | Learning from a very limited set of examples. | Allows models to adapt to new tasks quickly with minimal data. | Tasks where some data is available but not enough for full training. |\n| **One-Shot** | Learning from a single example. | Demonstrates the ability to generalize from very limited information. | Extremely specialized tasks where collecting more data is challenging. |\n| **Zero-Shot** | Learning to perform tasks without any prior specific examples. | Maximizes model flexibility and application across varied tasks without task-specific training. | When labeled data is unavailable or impractical to collect. |\n\n## Conclusion\n\nAI and machine learning are rapidly evolving fields, and the concepts of few-shot, one-shot, and zero-shot learning represent just the tip of the iceberg.\n\nWhether you're a curious newcomer or an aspiring AI expert, there's never been a more exciting time to dive into the world of artificial intelligence.","cached_tag_list":"","cached_user_name":"Sean Coughlin","cached_user_username":"scc33","comments_count":0,"description":"Today, we're exploring a fascinating aspect of AI that's making waves across various industries: the...","main_image":null,"main_image_background_hex_color":"#dddddd","path":"/scc33/explaining-ai-few-shot-one-shot-and-zero-shot-learning-50l8-temp-slug-172478","public_reactions_count":0,"processed_html":"\u003cp\u003eToday, we're exploring a fascinating aspect of AI that's making waves across various industries: the ability of models to learn and adapt from limited data. We'll break down the concepts of few-shot, one-shot, and zero-shot learning in a way that's easy to understand, even if you're new to AI.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"understanding-the-basics\" href=\"#understanding-the-basics\"\u003e\n  \u003c/a\u003e\n  Understanding the Basics\n\u003c/h2\u003e\n\n\u003cp\u003eImagine you're teaching someone to recognize different types of fruit. If you show them several examples of apples and oranges, they'll likely learn to distinguish between the two. This is similar to how AI models learn, but with a twist.\u003c/p\u003e\n\n\u003cp\u003eAI can be designed to learn not just from large datasets but also from a few, one, or even no examples. This capability is especially crucial when data is scarce, expensive, or time-consuming to collect.\u003c/p\u003e\n\n\u003cp\u003eLet's dive into the specifics of few-shot, one-shot, and zero-shot learning to understand how AI manages these feats.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"fewshot-learning\" href=\"#fewshot-learning\"\u003e\n  \u003c/a\u003e\n  Few-Shot Learning\n\u003c/h3\u003e\n\n\u003cp\u003e\u003ca href=\"https://builtin.com/machine-learning/few-shot-learning#\"\u003eFew-shot learning\u003c/a\u003e is like teaching a friend to recognize fruits by showing them only a few examples. In the AI world, this means training a model with a very limited dataset. It's incredibly useful when you have some data but not enough to train a conventional model.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eUse Case Example\u003c/strong\u003e : Classifying customer feedback as positive, neutral, or negative with only a handful of examples for each category.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e1. \"The service was outstanding and the staff was friendly.\" - Positive2. \"Wait times were long, but the food was great.\" - Neutral3. \"I was very disappointed with my meal.\" - Negative4. \"This was the best experience I've had at any restaurant!\" - ?\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch3\u003e\n  \u003ca name=\"oneshot-learning\" href=\"#oneshot-learning\"\u003e\n  \u003c/a\u003e\n  One-Shot Learning\n\u003c/h3\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/One-shot_learning_(computer_vision)\"\u003eOne-shot learning\u003c/a\u003e takes this concept further by teaching the model with a single example. It's akin to showing your friend one apple and then expecting them to recognize other apples.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eUse Case Example\u003c/strong\u003e : Teaching an AI to translate a sentence from English to French with only one example provided.\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eTranslate the following sentence to French:Example: \"Hello, how are you?\" - \"Bonjour, comment a va?\"New: \"What time is dinner?\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch3\u003e\n  \u003ca name=\"zeroshot-learning\" href=\"#zeroshot-learning\"\u003e\n  \u003c/a\u003e\n  Zero-Shot Learning\n\u003c/h3\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Zero-shot_learning\"\u003eZero-shot learning\u003c/a\u003e is the most abstract concept, where the model learns to perform tasks it has never seen examples of before. Imagine telling your friend what an apple is without showing them any apples, and they still recognize one when they see it.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eUse Case Example\u003c/strong\u003e : Asking an AI to classify texts into categories it hasn't been explicitly trained on, such as sorting news articles into \"Sports,\" \"Politics,\" or \"Technology.\"\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eDetermine if the sentiment of the following text is positive, negative, or neutral: \"I can't believe how amazing this movie was!\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"comparing-the-three\" href=\"#comparing-the-three\"\u003e\n  \u003c/a\u003e\n  Comparing the Three\n\u003c/h2\u003e\n\n\u003cp\u003eTo put these concepts into perspective, let's compare them side by side:\u003c/p\u003e\n\n\u003cp\u003e| \u003cstrong\u003eLearning Type\u003c/strong\u003e | \u003cstrong\u003eDefinition\u003c/strong\u003e | \u003cstrong\u003eStrengths\u003c/strong\u003e | \u003cstrong\u003eBest For\u003c/strong\u003e |\u003cbr\u003e\n| \u003cstrong\u003eFew-Shot\u003c/strong\u003e | Learning from a very limited set of examples. | Allows models to adapt to new tasks quickly with minimal data. | Tasks where some data is available but not enough for full training. |\u003cbr\u003e\n| \u003cstrong\u003eOne-Shot\u003c/strong\u003e | Learning from a single example. | Demonstrates the ability to generalize from very limited information. | Extremely specialized tasks where collecting more data is challenging. |\u003cbr\u003e\n| \u003cstrong\u003eZero-Shot\u003c/strong\u003e | Learning to perform tasks without any prior specific examples. | Maximizes model flexibility and application across varied tasks without task-specific training. | When labeled data is unavailable or impractical to collect. |\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eAI and machine learning are rapidly evolving fields, and the concepts of few-shot, one-shot, and zero-shot learning represent just the tip of the iceberg.\u003c/p\u003e\n\n\u003cp\u003eWhether you're a curious newcomer or an aspiring AI expert, there's never been a more exciting time to dive into the world of artificial intelligence.\u003c/p\u003e\n\n","published":false,"published_from_feed":true,"show_comments":true,"slug":"explaining-ai-few-shot-one-shot-and-zero-shot-learning-50l8-temp-slug-172478","social_image":null,"title":"Explaining AI: Few-Shot, One-Shot, and Zero-Shot Learning","video":null,"video_code":null}]